(window.webpackJsonp=window.webpackJsonp||[]).push([[726],{1118:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_0-前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-前言"}},[t._v("#")]),t._v(" 0 前言")]),t._v(" "),a("p",[t._v("延迟元素的无边界阻塞队列，在该队列中，仅当元素的延迟到期时才可以使用它.\n队首是该 Delayed 元素，其延迟在过去最远过期.\n如果没有延迟已经过期，就没有head, poll将返回null.\n当元素的getDelay（TimeUnit.NANOSECONDS）方法返回的值小于或等于零时，就会发生过期.\n即使未到期的元素无法使用take或poll删除，它们也被视为普通的元素。 例如，size方法返回过期和未过期元素的计数.\n此队列不允许空元素.\n该类及其迭代器实现集合和迭代器接口的所有可选方法。方法Iterator()中提供的迭代器不能保证以任何特定的顺序遍历DelayQueue中的元素.")]),t._v(" "),a("p",[t._v("此类是Java Collections Framework的成员.")]),t._v(" "),a("h1",{attrs:{id:"_1-继承体系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-继承体系"}},[t._v("#")]),t._v(" 1 继承体系")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/3/171d6b90030e184d?w=3118&h=406&f=png&s=138004",alt:"",title:"图片标题"}}),t._v(" "),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/3/171d6b9002c21d48?w=1462&h=1010&f=png&s=71351",alt:"",title:"图片标题"}})]),t._v(" "),a("ul",[a("li",[t._v("该队列里的元素必须实现Delayed接口才能入队\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/3/171d6b9002bd1894?w=3218&h=542&f=png&s=178161",alt:"",title:"图片标题"}}),t._v("\n混合式的接口，用于标记在给定延迟后应作用的对象。此接口的实现还必须定义一个compareTo方法，该方法提供与其getDelay方法一致的顺序.")])]),t._v(" "),a("h1",{attrs:{id:"_2-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-属性"}},[t._v("#")]),t._v(" 2 属性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("锁\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/3/171d6b9005a8cb1f?w=3266&h=292&f=png&s=94507",alt:"",title:"图片标题"}})])]),t._v(" "),a("li",[a("p",[t._v("PriorityQueue队列里的元素会根据某些属性排列先后的顺序，这里正好可以利用Delayed接口里的getDelay的返回值来进行排序，delayQueue其实就是在每次往优先级队列中添加元素,然后以元素的delay/过期值作为排序的因素,以此来达到先过期的元素会拍在队首,每次从队列里取出来都是最先要过期的元素\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/3/171d6b9006df95aa?w=3102&h=336&f=png&s=92567",alt:"",title:"图片标题"}})])]),t._v(" "),a("li",[a("p",[t._v("指定用于等待队首元素的线程。 Leader-Follower模式的变体用于最大程度地减少不必要的定时等待.当一个线程成为leader时，它仅等待下一个延迟过去，但是其他线程将无限期地等待.leader线程必须在从take（）或poll（...）返回之前向其他线程发出信号，除非其他线程成为过渡期间的leader。.每当队首被具有更早到期时间的元素替换时，leader字段都会被重置为null来无效，并且会发出一些等待线程（但不一定是当前leader）的信号。 因此，等待线程必须准备好在等待时获得并失去leader能力.\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/3/171d6b9031b69c43?w=1750&h=336&f=png&s=51112",alt:"",title:"图片标题"}})])]),t._v(" "),a("li",[a("p",[t._v("当更新的元素在队首变得可用或新的线程可能需要成为 leader 时，会发出条件信号\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/3/171d6b9040e67bd7?w=3038&h=324&f=png&s=94625",alt:"",title:"图片标题"}})])])]),t._v(" "),a("h1",{attrs:{id:"_3-构造方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-构造方法"}},[t._v("#")]),t._v(" 3 构造方法")]),t._v(" "),a("h2",{attrs:{id:"_3-1-无参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-无参"}},[t._v("#")]),t._v(" 3.1 无参")]),t._v(" "),a("ul",[a("li",[t._v("创建一个新的 DelayQueue，它初始是空的\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/3/171d6b904212e386?w=1472&h=334&f=png&s=47174",alt:"",title:"图片标题"}})])]),t._v(" "),a("h2",{attrs:{id:"_3-2-有参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-有参"}},[t._v("#")]),t._v(" 3.2 有参")]),t._v(" "),a("ul",[a("li",[t._v("创建一个DelayQueue，初始包含Delayed实例的给定集合的元素。\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/3/171d6b907021a193?w=2618&h=416&f=png&s=105156",alt:"",title:"图片标题"}})])]),t._v(" "),a("h1",{attrs:{id:"_4-新增数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-新增数据"}},[t._v("#")]),t._v(" 4 新增数据")]),t._v(" "),a("p",[t._v("先看看继承自 BlockingQueue 的方法")]),t._v(" "),a("h2",{attrs:{id:"put"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#put"}},[t._v("#")]),t._v(" put")]),t._v(" "),a("ul",[a("li",[t._v("将指定的元素插入此延迟队列。 由于队列无界，因此此方法将永远不会阻塞.\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/3/171d6b90604c54ff?w=1462&h=416&f=png&s=61676",alt:"",title:"图片标题"}}),t._v("\n可以看到 put 调用的是 offer")])]),t._v(" "),a("h2",{attrs:{id:"delayqueue-offer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delayqueue-offer"}},[t._v("#")]),t._v(" DelayQueue#offer")]),t._v(" "),a("ul",[a("li",[t._v("将指定的元素插入此延迟队列\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/3/171d6b90713320b7?w=2266&h=1734&f=png&s=255721",alt:"",title:"图片标题"}})])]),t._v(" "),a("h3",{attrs:{id:"执行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行流程"}},[t._v("#")]),t._v(" 执行流程")]),t._v(" "),a("p",[t._v("1.加锁\n2.元素添加到优先级队列中\n3.检验元素是否为队首，是则设置 leader 为null, 并唤醒一个消费线程\n4.解锁")]),t._v(" "),a("p",[t._v("其内部调用的是 PriorityQueue 的 offer 方法")]),t._v(" "),a("h3",{attrs:{id:"priorityqueue-offer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#priorityqueue-offer"}},[t._v("#")]),t._v(" PriorityQueue#offer")]),t._v(" "),a("p",[t._v("将指定的元素插入此优先级队列.")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("offer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若元素为 null,抛NPE")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NullPointerException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改计数器加一")]),t._v("\n    modCount"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果队列大小 > 容量 ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" queue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 扩容")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若队列空，则当前元素正好处于队首")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        queue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若队列非空，根据优先级排序")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("siftUp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br")])]),a("h4",{attrs:{id:"执行流程-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行流程-2"}},[t._v("#")]),t._v(" 执行流程")]),t._v(" "),a("ol",[a("li",[t._v("元素判空")]),t._v(" "),a("li",[t._v("队列扩容判断")]),t._v(" "),a("li",[t._v("根据元素的 compareTo 方法进行排序，希望最终排序的结果是从小到大的，因为想让队首的都是过期的数据，需要在 compareTo 方法实现.")])]),t._v(" "),a("h1",{attrs:{id:"_5-取数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-取数据"}},[t._v("#")]),t._v(" 5 取数据")]),t._v(" "),a("h2",{attrs:{id:"take"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#take"}},[t._v("#")]),t._v(" take")]),t._v(" "),a("p",[t._v("检索并删除此队列的头，如有必要，请等待直到延迟过期的元素在此队列上可用")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("take")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),t._v(" lock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取可中断锁")]),t._v("\n        lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lockInterruptibly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从优先级队列中获取队首")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" first "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("peek")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("first "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 队首为 null,说明无元素，当前线程加入等待队列，并阻塞")]),t._v("\n                    available"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取延迟时间")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" delay "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDelay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NANOSECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delay "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 已到期，获取并删除头部元素")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    first "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在等待时不要保留引用")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leader "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        available"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thisThread "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        leader "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" thisThread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 线程节点进入等待队列")]),t._v("\n                            available"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("awaitNanos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delay"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leader "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" thisThread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                leader "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若leader == null且还存在元素，则唤醒一个消费线程")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leader "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("peek")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                available"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("signal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解锁")]),t._v("\n            lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br")])]),a("h3",{attrs:{id:"执行流程-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行流程-3"}},[t._v("#")]),t._v(" 执行流程")]),t._v(" "),a("ol",[a("li",[t._v("加锁")]),t._v(" "),a("li",[t._v("取出优先级队列的队首")]),t._v(" "),a("li",[t._v("若队列为空,阻塞")]),t._v(" "),a("li",[t._v("若队首非空,获得这个元素的delay时间值，如果first的延迟delay时间值为0的话,说明该元素已经到了可以使用的时间,调用poll方法弹出该元素,跳出方法")]),t._v(" "),a("li",[t._v("若first的延迟delay时间值非0,释放元素first的引用,避免内存泄露")]),t._v(" "),a("li",[t._v("循环以上操作，直至return")])]),t._v(" "),a("blockquote",[a("p",[t._v("take 方法是会无限阻塞，直到队头的过期时间到了才会返回.\n如果不想无限阻塞，可以尝试 poll 方法，设置超时时间，在超时时间内，队头元素还没有过期的> 话，就会返回 null.")])]),t._v(" "),a("h1",{attrs:{id:"_6-解密-leader-元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-解密-leader-元素"}},[t._v("#")]),t._v(" 6 解密 leader 元素")]),t._v(" "),a("p",[t._v("leader 是一个Thread元素,表示当前获取到锁的消费者线程.")]),t._v(" "),a("ul",[a("li",[t._v("以take代码段为例\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/3/171d6b9094181aaf?w=2294&h=1608&f=png&s=223030",alt:"",title:"图片标题"}})])]),t._v(" "),a("p",[t._v("若 leader 非 null,说明已有消费者线程获取锁，直接阻塞当前线程.")]),t._v(" "),a("p",[t._v("若 leader 为 null，把当前线程赋给 leader，并等待剩余的到期时间，最后释放 leader.\n这里假设有多个消费者线程执行 take 取数据,若没有"),a("code",[t._v("leader != null")]),t._v(" 判断，这些线程都会无限循环，直到返回第一个元素，这显然很浪费系统资源. 所以 leader 在这里相当于一个线程标识，避免消费者线程的无脑竞争.")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("注意这里因为first是队首的引用，阻塞时会有很多线程同时持有队首引用，可能导致内存溢出,所以需要手动释放.\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/5/3/171d6b90a9422cd2?w=3184&h=202&f=png&s=75465",alt:"",title:"图片标题"}})])])]),t._v(" "),a("h1",{attrs:{id:"_7-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-总结"}},[t._v("#")]),t._v(" 7 总结")]),t._v(" "),a("p",[t._v("DelayQueue 使用排序和超时机制即实现了延迟队列。充分利用已有的 PriorityQueue 排序功能，超时阻塞又恰当好处的利用了锁的等待，在已有机制的基础上进行封装。在实际开发中，可以多多实践这一思想，使代码架构具备高复用性。")])])}),[],!1,null,null,null);s.default=e.exports}}]);