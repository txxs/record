(window.webpackJsonp=window.webpackJsonp||[]).push([[744],{1137:function(a,t,s){"use strict";s.r(t);var n=s(13),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("blockquote",[s("p",[a._v("全是干货的技术号：\n本文已收录在github，欢迎 star/fork：\nhttps://github.com/Wasabi1234/Java-Interview-Tutorial")])]),a._v(" "),s("p",[a._v("Spring管理的这些bean藉由配置元数据创建，例如被"),s("code",[a._v("@Bean")]),a._v("注解。那么在 Spring 内部又是如何存储这些信息的呢？")]),a._v(" "),s("h1",{attrs:{id:"_1-beandefinition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-beandefinition"}},[a._v("#")]),a._v(" 1 BeanDefinition")]),a._v(" "),s("h2",{attrs:{id:"_1-1-域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-域"}},[a._v("#")]),a._v(" 1.1 域")]),a._v(" "),s("p",[a._v("在容器内，这些bean定义被表示为BeanDefinition对象，它包含但不限于如下元数据：")]),a._v(" "),s("blockquote",[s("p",[a._v("这些元数据会转换为构成每个bean定义内的一组属性。")])]),a._v(" "),s("h3",{attrs:{id:"_1-1-1-包限定类名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-包限定类名"}},[a._v("#")]),a._v(" 1.1.1 包限定类名")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200822235222411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})]),a._v(" "),s("p",[a._v("被定义bean的实际实现类\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200822235354122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})]),a._v(" "),s("h3",{attrs:{id:"_1-1-2-bean行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-bean行为"}},[a._v("#")]),a._v(" 1.1.2  bean行为")]),a._v(" "),s("p",[a._v("这些状态指示bean在容器中的行为（作用域、生命周期回调等）。如下即为作用域：\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2020082300061144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})]),a._v(" "),s("ul",[s("li",[a._v("默认的作用域也就是"),s("code",[a._v("singleton")]),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200823002109786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})])]),a._v(" "),s("h3",{attrs:{id:"_1-1-3-需要的其它bean引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-需要的其它bean引用"}},[a._v("#")]),a._v(" 1.1.3 需要的其它bean引用")]),a._v(" "),s("p",[a._v("这些引用也就是常见的协作或依赖对象。\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200823003439840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})]),a._v(" "),s("ul",[s("li",[a._v("例如对于如下类：\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200823003353158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_16,color_FFFFFF,t_70#pic_center",alt:""}}),a._v(" "),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2020082300363158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})])]),a._v(" "),s("p",[a._v("除了包含有关如何创建特定bean信息的bean定义外，"),s("code",[a._v("ApplicationContext")]),a._v("实现还允许注册在容器外部（用户自定义的）创建的现有对象。\n这是通过"),s("code",[a._v("getBeanFactory()")]),a._v("方法访问"),s("code",[a._v("ApplicationContext")]),a._v("的"),s("code",[a._v("BeanFactory")]),a._v("完成的，该方法返回其"),s("code",[a._v("DefaultListableBeanFactory")]),a._v("实现。\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200824022732376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})]),a._v(" "),s("p",[s("code",[a._v("DefaultListableBeanFactory")]),a._v("通过"),s("code",[a._v("registerSingleton（..）")]),a._v("和"),s("code",[a._v("registerBeanDefinition（..）")]),a._v("方法支持此注册。当然了，我们开发的应用程序一般只使用通过常规的bean定义内的元数据定义的bean。")]),a._v(" "),s("p",[a._v("DefaultListableBeanFactory支持通过如下两种方式进行注册：")]),a._v(" "),s("ul",[s("li",[a._v("registerSingleton(String beanName, Object singletonObject)\nbean实例就是传递给registerSingleton方法的singletonObject对象\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/202008240239272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})]),a._v(" "),s("li",[a._v("registerBeanDefinition(String beanName, BeanDefinition beanDefinition)\n容器根据BeanDefinition实例化bean")])]),a._v(" "),s("p",[a._v("当然了，一般的应用程序还是仅通过元数据定义的bean来定义bean。")]),a._v(" "),s("p",[a._v("Bean元数据和显式编码提供的单例实例需尽早地注册，方便容器在自动装配和其他自省（指在运行时来判断一个对象的类型的能力）过程能正确推理它们。虽然在某种程度上支持覆盖现有的元数据或单例实例，但在运行时（与对工厂的实时访问并发）对新bean的注册并不被正式支持，并且可能导致并发访问异常，比如bean容器中的状态不一致。")]),a._v(" "),s("h1",{attrs:{id:"_2-如何给-bean-命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何给-bean-命名"}},[a._v("#")]),a._v(" 2 如何给 bean 命名？")]),a._v(" "),s("p",[a._v("每个bean都有一或多个标识符，这些标识符在其所在容器中必须唯一。一个bean通常只有一个标识符。但若它就是需要有一个以上的，那么多余标识符被视为别名。")]),a._v(" "),s("p",[a._v("在bean定义中，可组合使用id、name 属性指定bean的标识符。")]),a._v(" "),s("ul",[s("li",[a._v("最多指定一个名称的"),s("code",[a._v("id")]),a._v("属性。一般来说，这些名字由字母数字组成（如myBean，fooService），但也可能包含特殊字符。")]),a._v(" "),s("li",[a._v("如果还想为bean引入其他别名，可在"),s("code",[a._v("name")]),a._v("属性指定任意数量的其他名称。用逗号"),s("code",[a._v(",")]),a._v("、分号"),s("code",[a._v(";")]),a._v("或空格分隔。")])]),a._v(" "),s("p",[a._v("在Spring 3.1前，"),s("code",[a._v("id")]),a._v("属性定义为"),s("code",[a._v("xsd:ID")]),a._v("类型，该类型限制了可能的字符。从3.1开始，它被定义为"),s("code",[a._v("xsd:string")]),a._v("类型。注意，Bean的"),s("code",[a._v("id")]),a._v("唯一性仍由容器强制执行，而不再是XML解析器。")]),a._v(" "),s("p",[a._v("开发者无需提供bean的"),s("code",[a._v("name")]),a._v("或"),s("code",[a._v("id")]),a._v("。如果未明确提供，容器将为该bean生成一个唯一"),s("code",[a._v("name")]),a._v("。但如果想通过使用"),s("code",[a._v("ref")]),a._v("元素或服务定位器模式查找来按名称引用该bean，则必须提供一个"),s("code",[a._v("name")]),a._v("。不提供名称的原因和内部beans和自动装配有关。")]),a._v(" "),s("blockquote",[s("p",[a._v("可以为bean提供多个名称。这些名称视作同一bean的别名，例如允许应用中的每个组件通过使用特定于组件本身的bean名称来引用公共依赖。")])]),a._v(" "),s("h2",{attrs:{id:"_2-1-bean命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-bean命名规范"}},[a._v("#")]),a._v(" 2.1 Bean命名规范")]),a._v(" "),s("p",[a._v("与对实例字段名称的命名规范相同。即小写字母开头，后跟驼峰式大小写。\n示例："),s("code",[a._v("userService")]),a._v("，"),s("code",[a._v("roleController")]),a._v("。")]),a._v(" "),s("p",[a._v("扫描类路径下的组件，Spring就会按照该习惯为未命名的组件生成bean名称：将类名初始字符转换为小写。其实这个规范即是JDK 里的Introspector#decapitalize方法，Spring正使用了它：\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200825021307553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})]),a._v(" "),s("h3",{attrs:{id:"decapitalize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#decapitalize"}},[a._v("#")]),a._v(" decapitalize")]),a._v(" "),s("p",[s("code",[a._v("java.beans.Introspector.decapitalize")])]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("decapitalize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 如果有多个字符且第一和第二个字符均为大写字母")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 则会保留原始大小写")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Character")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isUpperCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Character")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isUpperCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 使用简单的类名，并将其初始字符转换为小写")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),a._v(" chars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("toCharArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    chars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Character")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("toLowerCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("chars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("chars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br")])]),s("h2",{attrs:{id:"_2-2-如何为单个bean指定多个别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-如何为单个bean指定多个别名"}},[a._v("#")]),a._v(" 2.2  如何为单个bean指定多个别名？")]),a._v(" "),s("p",[a._v("有时希望为单个Bean提供多个名称，尤其是在多系统环境。")]),a._v(" "),s("h3",{attrs:{id:"xml配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xml配置"}},[a._v("#")]),a._v(" XML配置")]),a._v(" "),s("p",[a._v("可使用"),s("code",[a._v("<alias/>")]),a._v("标签：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("alias "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"srcName"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("alias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"extName"')]),a._v("/"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("定义别名后，可将"),s("code",[a._v("同一容器")]),a._v("中名为"),s("code",[a._v("srcName")]),a._v("的bean称为"),s("code",[a._v("extName")]),a._v("。")]),a._v(" "),s("p",[a._v("环境示例：")]),a._v(" "),s("ul",[s("li",[a._v("子系统A的配置元数据可通过名称"),s("code",[a._v("subA-ds")]),a._v("引用数据源")]),a._v(" "),s("li",[a._v("子系统B可通过名称"),s("code",[a._v("subB-ds")]),a._v("引用数据源")]),a._v(" "),s("li",[a._v("使用这俩子系统的主系统通过名称"),s("code",[a._v("main-ds")]),a._v("引用数据源。")])]),a._v(" "),s("p",[a._v("要使所有三个名称都引用相同的对象，可将以下别名定义添加到配置元数据：")]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("alias")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("subA-ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("alias")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("subB-ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("alias")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("subA-ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("alias")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("main-ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("现在，每个组件和主应用程序都可以通过唯一名称引用数据源，并且可保证不与任何其它定义冲突（等于高效创建了名称空间），而且引用的是同一bean。")]),a._v(" "),s("h3",{attrs:{id:"java代码配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java代码配置"}},[a._v("#")]),a._v(" Java代码配置")]),a._v(" "),s("p",[a._v("使用"),s("code",[a._v("@Bean")]),a._v("注解的"),s("code",[a._v("name")]),a._v("属性接收一个String数组。示例如下：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Configuration")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AppConfig")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"dataSource"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"subA-ds"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"subB-ds"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DataSource")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("dataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ...")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("h1",{attrs:{id:"_3-如何实例化-bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何实例化-bean"}},[a._v("#")]),a._v(" 3 如何实例化 bean？")]),a._v(" "),s("p",[a._v("BeanDefinition可看做是创建对象的配方。容器在被询问时，会查看被命名过的bean的BeanDefinition，并使用该BeanDefinition中的配置元数据创建（或直接从缓存池获取）对应的对象实例。")]),a._v(" "),s("p",[a._v("比如在XML方式下，在"),s("code",[a._v("<bean/>")]),a._v("标签的"),s("code",[a._v("class")]),a._v("属性指定要实例化的对象的类型。这个"),s("code",[a._v("class")]),a._v("属性，其实就是BeanDefinition实例的"),s("code",[a._v("Class")]),a._v("属性，因此该属性一般强制必须指定。")]),a._v(" "),s("p",[a._v("可通过如下方式使用"),s("code",[a._v("Class")]),a._v("属性来实例化 bean：")]),a._v(" "),s("h2",{attrs:{id:"_3-1-构造器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-构造器"}},[a._v("#")]),a._v(" 3.1 构造器")]),a._v(" "),s("p",[a._v("在容器自身通过反射调用其构造器直接创建bean时，指定要构造的bean类，类似new运算符。该方式下，类基本上都能被Spring兼容。即bean类无需实现任何特定接口或以特定方式编码。 指定bean类即可。注意，根据所用的IoC类型，有时需要一个默认的无参构造器。")]),a._v(" "),s("h2",{attrs:{id:"_3-2-静态工厂方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-静态工厂方法"}},[a._v("#")]),a._v(" 3.2 静态工厂方法")]),a._v(" "),s("p",[a._v("指定包含将要创建对象的静态工厂方法的实际类，容器将在类上调用静态工厂方法以创建bean。")]),a._v(" "),s("p",[a._v("定义使用静态工厂方法创建的bean时，可使用"),s("code",[a._v("class")]),a._v("属性来指定包含静态工厂方法的类，并使用"),s("code",[a._v("factory-method")]),a._v("属性指定工厂方法本身的名称。开发者应该能够调用此方法并返回一个存活对象，该对象随后将被视为通过构造器创建的。")]),a._v(" "),s("blockquote",[s("p",[a._v("这种BeanDefinition的一种用法是在老代码中调用static工厂。")])]),a._v(" "),s("p",[a._v("看个例子，如下BeanDefinition指定将通过调用工厂方法来创建bean。该定义不指定返回对象的类型，而仅指定包含工厂方法的类。该示例中的"),s("code",[a._v("initInstance()")]),a._v("方法须是静态方法。")]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("bean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("serverService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("examples.ServerService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("factory-method")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("initInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("可与上面的BeanDefinition协同的类：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ServerService")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ServerService")]),a._v(" serverService "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ServerService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ServerService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ServerService")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("createInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" serverService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("h2",{attrs:{id:"_3-3-实例工厂方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-实例工厂方法"}},[a._v("#")]),a._v(" 3.3 实例工厂方法")]),a._v(" "),s("p",[a._v("使用该方式实例化会从容器中调用现有bean的非静态方法来创建新bean。要使用此机制，需将"),s("code",[a._v("class")]),a._v("属性置空，并在"),s("code",[a._v("factory-bean")]),a._v("属性中，在当前（或父/祖先）容器中指定包含要创建该对象的实例方法的bean的名称。"),s("code",[a._v("factory-method")]),a._v("设置工厂方法本身的名称。\n示例如下，来看看如何配置这样的bean：\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200827233737553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})]),a._v(" "),s("ul",[s("li",[a._v("相应的类：\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200827234025514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})]),a._v(" "),s("li",[a._v("一个工厂类也可以容纳一个以上的工厂方法，如下：\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200827234328990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})])]),a._v(" "),s("p",[a._v("这种方式还表明，即使是工厂bean也可以通过依赖注入进行管理和配置。\n“factory bean”是指在Spring容器中配置并通过实例或静态工厂方法创建对象的bean。相比之下，"),s("code",[a._v("FactoryBean")]),a._v("是指特定于Spring的FactoryBean实现类。")]),a._v(" "),s("h1",{attrs:{id:"_4-如何确定bean的运行时类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何确定bean的运行时类型"}},[a._v("#")]),a._v(" 4 如何确定Bean的运行时类型？")]),a._v(" "),s("p",[a._v("bean元数据定义中的指定类只是初始类引用，可能结合使用的如下方式之一：")]),a._v(" "),s("ul",[s("li",[a._v("声明的工厂方法")]),a._v(" "),s("li",[a._v("FactoryBean类，该情况可能导致bean的运行时类型不同")]),a._v(" "),s("li",[a._v("实例级工厂方法（通过指定的factory-bean名称解析），该情况下直接就不设置了")])]),a._v(" "),s("p",[a._v("因此，看起来确定bean运行时类型绝非易事，该如何准确获取呢？")]),a._v(" "),s("h2",{attrs:{id:"beanfactory-gettype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beanfactory-gettype"}},[a._v("#")]),a._v(" BeanFactory.getType")]),a._v(" "),s("p",[a._v("推荐调用 "),s("code",[a._v("BeanFactory.getType")]),a._v("确定bean的运行时类型。\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200828012107627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}}),a._v("\n该方法可确定给定名称bean的类型。 更确切地，返回针对相同bean名称的"),s("code",[a._v("BeanFactory.getBean")]),a._v("调用将返回的对象的类型。\n且该方法的实现考虑了前面穷举的所有情况，并针对于FactoryBean ，返回FactoryBean所创建的对象类型，和"),s("code",[a._v("FactoryBean.getObjectType()")]),a._v("返回一致。\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200828121006639.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})])])}),[],!1,null,null,null);t.default=e.exports}}]);