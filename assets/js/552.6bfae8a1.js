(window.webpackJsonp=window.webpackJsonp||[]).push([[552],{943:function(n,a,t){"use strict";t.r(a);var s=t(13),e=Object(s.a)({},(function(){var n=this,a=n.$createElement,t=n._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[n._v("#")]),n._v(" 目录")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#java%E6%B3%A8%E8%A7%A3%E7%AE%80%E4%BB%8B"}},[n._v("Java注解简介")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E6%B3%A8%E8%A7%A3%E5%A6%82%E5%90%8C%E6%A0%87%E7%AD%BE"}},[n._v("注解如同标签")])])])]),n._v(" "),t("li",[t("a",{attrs:{href:"#java-%E6%B3%A8%E8%A7%A3%E6%A6%82%E8%BF%B0"}},[n._v("Java 注解概述")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%B3%A8%E8%A7%A3%EF%BC%9F"}},[n._v("什么是注解？")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E6%B3%A8%E8%A7%A3%E7%9A%84%E7%94%A8%E5%A4%84"}},[n._v("注解的用处")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%8E%9F%E7%90%86"}},[n._v("注解的原理")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E5%85%83%E6%B3%A8%E8%A7%A3"}},[n._v("元注解")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#jdk%E9%87%8C%E7%9A%84%E6%B3%A8%E8%A7%A3"}},[n._v("JDK里的注解")])])])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E6%B3%A8%E8%A7%A3%E5%A4%84%E7%90%86%E5%99%A8%E5%AE%9E%E6%88%98"}},[n._v("注解处理器实战")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%B3%A8%E8%A7%A3"}},[n._v("不同类型的注解")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E7%B1%BB%E6%B3%A8%E8%A7%A3"}},[n._v("类注解")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E6%96%B9%E6%B3%95%E6%B3%A8%E8%A7%A3"}},[n._v("方法注解")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E5%8F%82%E6%95%B0%E6%B3%A8%E8%A7%A3"}},[n._v("参数注解")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E5%8F%98%E9%87%8F%E6%B3%A8%E8%A7%A3"}},[n._v("变量注解")])])])]),n._v(" "),t("li",[t("a",{attrs:{href:"#java%E6%B3%A8%E8%A7%A3%E7%9B%B8%E5%85%B3%E9%9D%A2%E8%AF%95%E9%A2%98"}},[n._v("Java注解相关面试题")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%B3%A8%E8%A7%A3%EF%BC%9F%E4%BB%96%E4%BB%AC%E7%9A%84%E5%85%B8%E5%9E%8B%E7%94%A8%E4%BE%8B%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F"}},[n._v("什么是注解？他们的典型用例是什么？")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E6%8F%8F%E8%BF%B0%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E6%B3%A8%E8%A7%A3%E3%80%82"}},[n._v("描述标准库中一些有用的注解。")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E5%8F%AF%E4%BB%A5%E4%BB%8E%E6%B3%A8%E8%A7%A3%E6%96%B9%E6%B3%95%E5%A3%B0%E6%98%8E%E8%BF%94%E5%9B%9E%E5%93%AA%E4%BA%9B%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B%EF%BC%9F"}},[n._v("可以从注解方法声明返回哪些对象类型？")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E5%93%AA%E4%BA%9B%E7%A8%8B%E5%BA%8F%E5%85%83%E7%B4%A0%E5%8F%AF%E4%BB%A5%E6%B3%A8%E8%A7%A3%EF%BC%9F"}},[n._v("哪些程序元素可以注解？")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E6%9C%89%E6%B2%A1%E6%9C%89%E5%8A%9E%E6%B3%95%E9%99%90%E5%88%B6%E5%8F%AF%E4%BB%A5%E5%BA%94%E7%94%A8%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%85%83%E7%B4%A0%EF%BC%9F"}},[n._v("有没有办法限制可以应用注解的元素？")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF%E5%85%83%E6%B3%A8%E8%A7%A3%EF%BC%9F"}},[n._v("什么是元注解？")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E4%B8%8B%E9%9D%A2%E7%9A%84%E4%BB%A3%E7%A0%81%E4%BC%9A%E7%BC%96%E8%AF%91%E5%90%97%EF%BC%9F"}},[n._v("下面的代码会编译吗？")])])])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"}},[n._v("参考文章")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7"}},[n._v("微信公众号")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#java%E6%8A%80%E6%9C%AF%E6%B1%9F%E6%B9%96"}},[n._v("Java技术江湖")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#%E4%B8%AA%E4%BA%BA%E5%85%AC%E4%BC%97%E5%8F%B7%EF%BC%9A%E9%BB%84%E5%B0%8F%E6%96%9C"}},[n._v("个人公众号：黄小斜")])])])])]),n._v(" "),t("hr"),n._v(" "),t("h2",{attrs:{id:"title-夯实java基础系列15-java注解简介和最佳实践date-2019-9-15-15-56-26-文章生成时间-一般不改categories-java技术江湖-java基础tags-annotation-java注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#title-夯实java基础系列15-java注解简介和最佳实践date-2019-9-15-15-56-26-文章生成时间-一般不改categories-java技术江湖-java基础tags-annotation-java注解"}},[n._v("#")]),n._v(" title: 夯实Java基础系列15：Java注解简介和最佳实践\ndate: 2019-9-15 15:56:26 # 文章生成时间，一般不改\ncategories:\n- Java技术江湖\n- Java基础\ntags:\n- annotation\n- Java注解")]),n._v(" "),t("p",[n._v("本系列文章将整理到我在GitHub上的《Java面试指南》仓库，更多精彩内容请到我的仓库里查看")]),n._v(" "),t("blockquote",[t("p",[n._v("https://github.com/h2pl/Java-Tutorial")])]),n._v(" "),t("p",[n._v("喜欢的话麻烦点下Star哈")]),n._v(" "),t("p",[n._v("文章首发于我的个人博客：")]),n._v(" "),t("blockquote",[t("p",[n._v("www.how2playlife.com")])]),n._v(" "),t("p",[n._v("本文是微信公众号【Java技术江湖】的《夯实Java基础系列博文》其中一篇，本文部分内容来源于网络，为了把本文主题讲得清晰透彻，也整合了很多我认为不错的技术博客内容，引用其中了一些比较好的博客文章，如有侵权，请联系作者。\n该系列博文会告诉你如何从入门到进阶，一步步地学习Java基础知识，并上手进行实战，接着了解每个Java知识点背后的实现原理，更完整地了解整个Java技术体系，形成自己的知识框架。为了更好地总结和检验你的学习成果，本系列文章也会提供每个知识点对应的面试题以及参考答案。")]),n._v(" "),t("p",[n._v("如果对本系列文章有什么建议，或者是有什么疑问的话，也可以关注公众号【Java技术江湖】联系作者，欢迎你参与本系列博文的创作和修订。")]),n._v(" "),t("h2",{attrs:{id:"java注解简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java注解简介"}},[n._v("#")]),n._v(" Java注解简介")]),n._v(" "),t("p",[n._v("Annotation 中文译过来就是注解、标释的意思，在 Java 中注解是一个很重要的知识点，但经常还是有点让新手不容易理解。")]),n._v(" "),t("p",[t("strong",[n._v("我个人认为，比较糟糕的技术文档主要特征之一就是：用专业名词来介绍专业名词。")]),n._v("\n比如：")]),n._v(" "),t("blockquote",[t("p",[n._v("Java 注解用于为 Java 代码提供元数据。作为元数据，注解不直接影响你的代码执行，但也有一些类型的注解实际上可以用于这一目的。Java 注解是从 Java5 开始添加到 Java 的。\n这是大多数网站上对于 Java 注解，解释确实正确，但是说实在话，我第一次学习的时候，头脑一片空白。这什么跟什么啊？听了像没有听一样。因为概念太过于抽象，所以初学者实在是比较吃力才能够理解，然后随着自己开发过程中不断地强化练习，才会慢慢对它形成正确的认识。")])]),n._v(" "),t("p",[n._v("我在写这篇文章的时候，我就在思考。如何让自己或者让读者能够比较直观地认识注解这个概念？是要去官方文档上翻译说明吗？我马上否定了这个答案。")]),n._v(" "),t("p",[n._v("后来，我想到了一样东西————墨水，墨水可以挥发、可以有不同的颜色，用来解释注解正好。")]),n._v(" "),t("p",[n._v("不过，我继续发散思维后，想到了一样东西能够更好地代替墨水，那就是印章。印章可以沾上不同的墨水或者印泥，可以定制印章的文字或者图案，如果愿意它也可以被戳到你任何想戳的物体表面。")]),n._v(" "),t("p",[n._v("但是，我再继续发散思维后，又想到一样东西能够更好地代替印章，那就是标签。标签是一张便利纸，标签上的内容可以自由定义。常见的如货架上的商品价格标签、图书馆中的书本编码标签、实验室中化学材料的名称类别标签等等。")]),n._v(" "),t("p",[n._v("并且，往抽象地说，标签并不一定是一张纸，它可以是对人和事物的属性评价。也就是说，标签具备对于抽象事物的解释。")]),n._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdn.net/20170627213419176?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYnJpYmx1ZQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast",alt:""}})]),n._v(" "),t("p",[n._v("所以，基于如此，我完成了自我的知识认知升级，我决定用标签来解释注解。")]),n._v(" "),t("h3",{attrs:{id:"注解如同标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注解如同标签"}},[n._v("#")]),n._v(" 注解如同标签")]),n._v(" "),t("p",[n._v("之前某新闻客户端的评论有盖楼的习惯，于是 “乔布斯重新定义了手机、罗永浩重新定义了傻X” 就经常极为工整地出现在了评论楼层中，并且广大网友在相当长的一段时间内对于这种行为乐此不疲。这其实就是等同于贴标签的行为。\n在某些网友眼中，罗永浩就成了傻X的代名词。")]),n._v(" "),t("p",[n._v("广大网友给罗永浩贴了一个名为“傻x”的标签，他们并不真正了解罗永浩，不知道他当教师、砸冰箱、办博客的壮举，但是因为“傻x”这样的标签存在，这有助于他们直接快速地对罗永浩这个人做出评价，然后基于此，罗永浩就可以成为茶余饭后的谈资，这就是标签的力量。")]),n._v(" "),t("p",[n._v("而在网络的另一边，老罗靠他的人格魅力自然收获一大批忠实的拥泵，他们对于老罗贴的又是另一种标签。")]),n._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdn.net/20170627213530055?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYnJpYmx1ZQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast",alt:""}})]),n._v(" "),t("p",[n._v("老罗还是老罗，但是由于人们对于它贴上的标签不同，所以造成对于他的看法大相径庭，不喜欢他的人整天在网络上评论抨击嘲讽，而崇拜欣赏他的人则会愿意挣钱购买锤子手机的发布会门票。")]),n._v(" "),t("p",[n._v("我无意于评价这两种行为，我再引个例子。")]),n._v(" "),t("p",[n._v("《奇葩说》是近年网络上非常火热的辩论节目，其中辩手陈铭被另外一个辩手马薇薇攻击说是————“站在宇宙中心呼唤爱”，然后贴上了一个大大的标签————“鸡汤男”，自此以后，观众再看到陈铭的时候，首先映入脑海中便是“鸡汤男”三个大字，其实本身而言陈铭非常优秀，为人师表、作风正派、谈吐举止得体，但是在网络中，因为娱乐至上的环境所致，人们更愿意以娱乐的心态来认知一切，于是“鸡汤男”就如陈铭自己所说成了一个撕不了的标签。")]),n._v(" "),t("p",[t("strong",[n._v("我们可以抽象概括一下，标签是对事物行为的某些角度的评价与解释。")])]),n._v(" "),t("p",[n._v("到这里，终于可以引出本文的主角注解了。")]),n._v(" "),t("p",[t("strong",[n._v("初学者可以这样理解注解：想像代码具有生命，注解就是对于代码中某些鲜活个体的贴上去的一张标签。简化来讲，注解如同一张标签。")])]),n._v(" "),t("p",[n._v("在未开始学习任何注解具体语法而言，你可以把注解看成一张标签。这有助于你快速地理解它的大致作用。如果初学者在学习过程有大脑放空的时候，请不要慌张，对自己说：")]),n._v(" "),t("p",[n._v("注解，标签。注解，标签。")]),n._v(" "),t("h2",{attrs:{id:"java-注解概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-注解概述"}},[n._v("#")]),n._v(" Java 注解概述")]),n._v(" "),t("h3",{attrs:{id:"什么是注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是注解"}},[n._v("#")]),n._v(" 什么是注解？")]),n._v(" "),t("blockquote",[t("p",[n._v("对于很多初次接触的开发者来说应该都有这个疑问？Annontation是Java5开始引入的新特征，中文名称叫注解。它提供了一种安全的类似注释的机制，用来将任何的信息或元数据（metadata）与程序元素（类、方法、成员变量等）进行关联。为程序的元素（类、方法、成员变量）加上更直观更明了的说明，这些说明信息是与程序的业务逻辑无关，并且供指定的工具或框架使用。Annontation像一种修饰符一样，应用于包、类型、构造方法、方法、成员变量、参数及本地变量的声明语句中。")])]),n._v(" "),t("p",[n._v("Java注解是附加在代码中的一些元信息，用于一些工具在编译、运行时进行解析和使用，起到说明、配置的功能。注解不会也不能影响代码的实际逻辑，仅仅起到辅助性的作用。包含在 java.lang.annotation 包中。")]),n._v(" "),t("h3",{attrs:{id:"注解的用处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注解的用处"}},[n._v("#")]),n._v(" 注解的用处")]),n._v(" "),t("p",[n._v("1、生成文档。这是最常见的，也是java 最早提供的注解。常用的有@param @return 等\n2、跟踪代码依赖性，实现替代配置文件功能。比如Dagger 2依赖注入，未来java开发，将大量注解配置，具有很大用处;\n3、在编译时进行格式检查。如@override 放在方法前，如果你这个方法并不是覆盖了超类方法，则编译时就能检查出。")]),n._v(" "),t("h3",{attrs:{id:"注解的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注解的原理"}},[n._v("#")]),n._v(" 注解的原理")]),n._v(" "),t("p",[n._v("注解本质是一个继承了Annotation的特殊接口，其具体实现类是Java运行时生成的动态代理类。而我们通过反射获取注解时，返回的是Java运行时生成的动态代理对象$Proxy1。通过代理对象调用自定义注解（接口）的方法，会最终调用AnnotationInvocationHandler的invoke方法。该方法会从memberValues这个Map中索引出对应的值。而memberValues的来源是Java常量池。")]),n._v(" "),t("h3",{attrs:{id:"元注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#元注解"}},[n._v("#")]),n._v(" 元注解")]),n._v(" "),t("p",[n._v("java.lang.annotation提供了四种元注解，专门注解其他的注解（在自定义注解的时候，需要使用到元注解）：\n@Documented –注解是否将包含在JavaDoc中\n@Retention –什么时候使用该注解\n@Target –注解用于什么地方\n@Inherited – 是否允许子类继承该注解")]),n._v(" "),t("p",[n._v("1.）@Retention– 定义该注解的生命周期")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("  ●   RetentionPolicy.SOURCE : 在编译阶段丢弃。这些注解在编译结束之后就不再有任何意义，所以它们不会写入字节码。@Override, @SuppressWarnings都属于这类注解。\n  \n  ●   RetentionPolicy.CLASS : 在类加载的时候丢弃。在字节码文件的处理中有用。注解默认使用这种方式\n  \n  ●   RetentionPolicy.RUNTIME : 始终不会丢弃，运行期也保留该注解，因此可以使用反射机制读取该注解的信息。我们自定义的注解通常使用这种方式。\n")])])]),t("p",[n._v("2.）Target – 表示该注解用于什么地方。默认值为任何元素，表示该注解用于什么地方。可用的ElementType参数包括")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("  ● ElementType.CONSTRUCTOR:用于描述构造器\n  ● ElementType.FIELD:成员变量、对象、属性（包括enum实例）\n  ● ElementType.LOCAL_VARIABLE:用于描述局部变量\n  ● ElementType.METHOD:用于描述方法\n  ● ElementType.PACKAGE:用于描述包\n  ● ElementType.PARAMETER:用于描述参数\n  ● ElementType.TYPE:用于描述类、接口(包括注解类型) 或enum声明\n")])])]),t("p",[n._v("3.)@Documented–一个简单的Annotations标记注解，表示是否将注解信息添加在java文档中。")]),n._v(" "),t("p",[n._v("4.)@Inherited – 定义该注释和子类的关系\n@Inherited 元注解是一个标记注解，@Inherited阐述了某个被标注的类型是被继承的。如果一个使用了@Inherited修饰的annotation类型被用于一个class，则这个annotation将被用于该class的子类。")]),n._v(" "),t("h3",{attrs:{id:"jdk里的注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk里的注解"}},[n._v("#")]),n._v(" JDK里的注解")]),n._v(" "),t("p",[n._v("JDK 内置注解\n先来看几个 Java 内置的注解，让大家热热身。")]),n._v(" "),t("p",[n._v("@Override 演示")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("class Parent {\n    public void run() {\n    }\n}\n\nclass Son extends Parent {\n    /**\n     * 这个注解是为了检查此方法是否真的是重写父类的方法\n     * 这时候就不用我们用肉眼去观察到底是不是重写了\n     */\n    @Override\n    public void run() {\n    }\n}\n")])])]),t("p",[n._v("@Deprecated 演示\nclass Parent {")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("/**\n * 此注解代表过时了，但是如果可以调用到，当然也可以正常使用\n * 但是，此方法有可能在以后的版本升级中会被慢慢的淘汰\n * 可以放在类，变量，方法上面都起作用\n */\n@Deprecated\npublic void run() {\n}\n}\n\npublic class JDKAnnotationDemo {\n    public static void main(String[] args) {\n        Parent parent = new Parent();\n        parent.run(); // 在编译器中此方法会显示过时标志\n    }\n}\n")])])]),t("p",[n._v("@SuppressWarnings 演示\nclass Parent {")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('// 因为定义的 name 没有使用，那么编译器就会有警告，这时候使用此注解可以屏蔽掉警告\n// 即任意不想看到的编译时期的警告都可以用此注解屏蔽掉，但是不推荐，有警告的代码最好还是处理一下\n@SuppressWarnings("all")\nprivate String name;\n}\n')])])]),t("p",[n._v("@FunctionalInterface 演示\n/**")]),n._v(" "),t("ul",[t("li",[n._v("此注解是 Java8 提出的函数式接口，接口中只允许有一个抽象方法")]),n._v(" "),t("li",[n._v("加上这个注解之后，类中多一个抽象方法或者少一个抽象方法都会报错\n*/\n@FunctionalInterface\ninterface Func {\nvoid run();\n}")])]),n._v(" "),t("h2",{attrs:{id:"注解处理器实战"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注解处理器实战"}},[n._v("#")]),n._v(" 注解处理器实战")]),n._v(" "),t("p",[n._v("注解处理器\n注解处理器才是使用注解整个流程中最重要的一步了。所有在代码中出现的注解，它到底起了什么作用，都是在注解处理器中定义好的。\n概念：注解本身并不会对程序的编译方式产生影响，而是注解处理器起的作用；注解处理器能够通过在运行时使用反射获取在程序代码中的使用的注解信息，从而实现一些额外功能。前提是我们自定义的注解使用的是 RetentionPolicy.RUNTIME 修饰的。这也是我们在开发中使用频率很高的一种方式。")]),n._v(" "),t("p",[n._v("我们先来了解下如何通过在运行时使用反射获取在程序中的使用的注解信息。如下类注解和方法注解。")]),n._v(" "),t("p",[n._v("类注解\nClass aClass = ApiController.class;\nAnnotation[] annotations = aClass.getAnnotations();")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('for(Annotation annotation : annotations) {\n    if(annotation instanceof ApiAuthAnnotation) {\n        ApiAuthAnnotation apiAuthAnnotation = (ApiAuthAnnotation) annotation;\n        System.out.println("name: " + apiAuthAnnotation.name());\n        System.out.println("age: " + apiAuthAnnotation.age());\n    }\n}\n方法注解\nMethod method = ... //通过反射获取方法对象\nAnnotation[] annotations = method.getDeclaredAnnotations();\n\nfor(Annotation annotation : annotations) {\n    if(annotation instanceof ApiAuthAnnotation) {\n        ApiAuthAnnotation apiAuthAnnotation = (ApiAuthAnnotation) annotation;\n        System.out.println("name: " + apiAuthAnnotation.name());\n        System.out.println("age: " + apiAuthAnnotation.age());\n    }\n}   \n')])])]),t("p",[n._v("此部分内容可参考: 通过反射获取注解信息")]),n._v(" "),t("p",[n._v("注解处理器实战\n接下来我通过在公司中的一个实战改编来演示一下注解处理器的真实使用场景。\n需求: 网站后台接口只能是年龄大于 18 岁的才能访问，否则不能访问\n前置准备: 定义注解（这里使用上文的完整注解），使用注解（这里使用上文中使用注解的例子）\n接下来要做的事情: 写一个切面，拦截浏览器访问带注解的接口，取出注解信息，判断年龄来确定是否可以继续访问。")]),n._v(" "),t("p",[n._v("在 dispatcher-servlet.xml 文件中定义 aop 切面")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('<aop:config>\n    \x3c!--定义切点，切的是我们自定义的注解--\x3e\n    <aop:pointcut id="apiAuthAnnotation" expression="@annotation(cn.caijiajia.devops.aspect.ApiAuthAnnotation)"/>\n    \x3c!--定义切面，切点是 apiAuthAnnotation，切面类即注解处理器是 apiAuthAspect，主处理逻辑在方法名为 auth 的方法中--\x3e\n    <aop:aspect ref="apiAuthAspect">\n        <aop:around method="auth" pointcut-ref="apiAuthAnnotation"/>\n    </aop:aspect>\n</aop:config>\n')])])]),t("p",[n._v("切面类处理逻辑即注解处理器代码如")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('@Component("apiAuthAspect")\npublic class ApiAuthAspect {\n\n    public Object auth(ProceedingJoinPoint pjp) throws Throwable {\n        Method method = ((MethodSignature) pjp.getSignature()).getMethod();\n        ApiAuthAnnotation apiAuthAnnotation = method.getAnnotation(ApiAuthAnnotation.class);\n        Integer age = apiAuthAnnotation.age();\n        if (age > 18) {\n            return pjp.proceed();\n        } else {\n            throw new RuntimeException("你未满18岁，禁止访问");\n        }\n    }\n}\n')])])]),t("h2",{attrs:{id:"不同类型的注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不同类型的注解"}},[n._v("#")]),n._v(" 不同类型的注解")]),n._v(" "),t("h3",{attrs:{id:"类注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类注解"}},[n._v("#")]),n._v(" 类注解")]),n._v(" "),t("p",[n._v("你可以在运行期访问类，方法或者变量的注解信息，下是一个访问类注解的例子：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(' Class aClass = TheClass.class;\nAnnotation[] annotations = aClass.getAnnotations();\n\nfor(Annotation annotation : annotations){\n    if(annotation instanceof MyAnnotation){\n        MyAnnotation myAnnotation = (MyAnnotation) annotation;\n        System.out.println("name: " + myAnnotation.name());\n        System.out.println("value: " + myAnnotation.value());\n    }\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br")])]),t("p",[n._v("你还可以像下面这样指定访问一个类的注解：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('Class aClass = TheClass.class;\nAnnotation annotation = aClass.getAnnotation(MyAnnotation.class);\n\nif(annotation instanceof MyAnnotation){\n    MyAnnotation myAnnotation = (MyAnnotation) annotation;\n    System.out.println("name: " + myAnnotation.name());\n    System.out.println("value: " + myAnnotation.value());\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br")])]),t("h3",{attrs:{id:"方法注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法注解"}},[n._v("#")]),n._v(" 方法注解")]),n._v(" "),t("p",[n._v("下面是一个方法注解的例子：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('public class TheClass {\n  @MyAnnotation(name="someName",  value = "Hello World")\n  public void doSomething(){}\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br")])]),t("p",[n._v("你可以像这样访问方法注解：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('Method method = ... //获取方法对象\nAnnotation[] annotations = method.getDeclaredAnnotations();\n\nfor(Annotation annotation : annotations){\n    if(annotation instanceof MyAnnotation){\n        MyAnnotation myAnnotation = (MyAnnotation) annotation;\n        System.out.println("name: " + myAnnotation.name());\n        System.out.println("value: " + myAnnotation.value());\n    }\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br")])]),t("p",[n._v("你可以像这样访问指定的方法注解：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('Method method = ... // 获取方法对象\nAnnotation annotation = method.getAnnotation(MyAnnotation.class);\n\nif(annotation instanceof MyAnnotation){\n    MyAnnotation myAnnotation = (MyAnnotation) annotation;\n    System.out.println("name: " + myAnnotation.name());\n    System.out.println("value: " + myAnnotation.value());\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br")])]),t("h3",{attrs:{id:"参数注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数注解"}},[n._v("#")]),n._v(" 参数注解")]),n._v(" "),t("p",[n._v("方法参数也可以添加注解，就像下面这样：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('public class TheClass {\n  public static void doSomethingElse(\n        @MyAnnotation(name="aName", value="aValue") String parameter){\n  }\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("p",[n._v("你可以通过 Method对象来访问方法参数注解：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('Method method = ... //获取方法对象\nAnnotation[][] parameterAnnotations = method.getParameterAnnotations();\nClass[] parameterTypes = method.getParameterTypes();\n\nint i=0;\nfor(Annotation[] annotations : parameterAnnotations){\n  Class parameterType = parameterTypes[i++];\n\n  for(Annotation annotation : annotations){\n    if(annotation instanceof MyAnnotation){\n        MyAnnotation myAnnotation = (MyAnnotation) annotation;\n        System.out.println("param: " + parameterType.getName());\n        System.out.println("name : " + myAnnotation.name());\n        System.out.println("value: " + myAnnotation.value());\n    }\n  }\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br")])]),t("p",[n._v("需要注意的是 Method.getParameterAnnotations()方法返回一个注解类型的二维数组，每一个方法的参数包含一个注解数组。")]),n._v(" "),t("h3",{attrs:{id:"变量注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量注解"}},[n._v("#")]),n._v(" 变量注解")]),n._v(" "),t("p",[n._v("下面是一个变量注解的例子：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('public class TheClass {\n\n  @MyAnnotation(name="someName",  value = "Hello World")\n  public String myField = null;\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("p",[n._v("你可以像这样来访问变量的注解：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('Field field = ... //获取方法对象</pre>\n<pre>Annotation[] annotations = field.getDeclaredAnnotations();\n\nfor(Annotation annotation : annotations){\n if(annotation instanceof MyAnnotation){\n MyAnnotation myAnnotation = (MyAnnotation) annotation;\n System.out.println("name: " + myAnnotation.name());\n System.out.println("value: " + myAnnotation.value());\n }\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br")])]),t("p",[n._v("你可以像这样访问指定的变量注解：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('Field field = ...//获取方法对象</pre>\n<pre>\nAnnotation annotation = field.getAnnotation(MyAnnotation.class);\n\nif(annotation instanceof MyAnnotation){\n MyAnnotation myAnnotation = (MyAnnotation) annotation;\n System.out.println("name: " + myAnnotation.name());\n System.out.println("value: " + myAnnotation.value());\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br")])]),t("h2",{attrs:{id:"java注解相关面试题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java注解相关面试题"}},[n._v("#")]),n._v(" Java注解相关面试题")]),n._v(" "),t("h3",{attrs:{id:"什么是注解-他们的典型用例是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是注解-他们的典型用例是什么"}},[n._v("#")]),n._v(" 什么是注解？他们的典型用例是什么？")]),n._v(" "),t("p",[n._v("注解是绑定到程序源代码元素的元数据，对运行代码的操作没有影响。")]),n._v(" "),t("p",[n._v("他们的典型用例是：")]),n._v(" "),t("ul",[t("li",[n._v("编译器的信息 - 使用注解，编译器可以检测错误或抑制警告")]),n._v(" "),t("li",[n._v("编译时和部署时处理 - 软件工具可以处理注解并生成代码，配置文件等。")]),n._v(" "),t("li",[n._v("运行时处理 - 可以在运行时检查注解以自定义程序的行为")])]),n._v(" "),t("h3",{attrs:{id:"描述标准库中一些有用的注解。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#描述标准库中一些有用的注解。"}},[n._v("#")]),n._v(" 描述标准库中一些有用的注解。")]),n._v(" "),t("p",[n._v("java.lang和java.lang.annotation包中有几个注解，更常见的包括但不限于此：")]),n._v(" "),t("ul",[t("li",[n._v("@Override -标记方法是否覆盖超类中声明的元素。如果它无法正确覆盖该方法，编译器将发出错误")]),n._v(" "),t("li",[n._v("@Deprecated - 表示该元素已弃用且不应使用。如果程序使用标有此批注的方法，类或字段，编译器将发出警告")]),n._v(" "),t("li",[n._v("@SuppressWarnings - 告诉编译器禁止特定警告。在与泛型出现之前编写的遗留代码接口时最常用的")]),n._v(" "),t("li",[n._v("@FunctionalInterface - 在Java 8中引入，表明类型声明是一个功能接口，可以使用Lambda Expression提供其实现")])]),n._v(" "),t("h3",{attrs:{id:"可以从注解方法声明返回哪些对象类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可以从注解方法声明返回哪些对象类型"}},[n._v("#")]),n._v(" 可以从注解方法声明返回哪些对象类型？")]),n._v(" "),t("p",[n._v("返回类型必须是基本类型，String，Class，Enum或数组类型之一。否则，编译器将抛出错误。")]),n._v(" "),t("p",[n._v("这是一个成功遵循此原则的示例代码：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("enum Complexity {\n    LOW, HIGH\n}\n\npublic @interface ComplexAnnotation {\n    Class<? extends Object> value();\n\n    int[] types();\n\n    Complexity complexity();\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br")])]),t("p",[n._v("下一个示例将无法编译，因为Object不是有效的返回类型：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("public @interface FailingAnnotation {\n    Object complexity();\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br")])]),t("h3",{attrs:{id:"哪些程序元素可以注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#哪些程序元素可以注解"}},[n._v("#")]),n._v(" 哪些程序元素可以注解？")]),n._v(" "),t("p",[n._v("注解可以应用于整个源代码的多个位置。它们可以应用于类，构造函数和字段的声明：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("@SimpleAnnotation\npublic class Apply {\n    @SimpleAnnotation\n    private String aField;\n\n    @SimpleAnnotation\n    public Apply() {\n        // ...\n    }\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br")])]),t("p",[n._v("方法及其参数：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("@SimpleAnnotation\npublic void aMethod(@SimpleAnnotation String param) {\n    // ...\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("p",[n._v("局部变量，包括循环和资源变量：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("@SimpleAnnotation\nint i = 10;\n\nfor (@SimpleAnnotation int j = 0; j < i; j++) {\n    // ...\n}\n\ntry (@SimpleAnnotation FileWriter writer = getWriter()) {\n    // ...\n} catch (Exception ex) {\n    // ...\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br")])]),t("p",[n._v("其他注解类型：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("@SimpleAnnotation\npublic @interface ComplexAnnotation {\n    // ...\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("p",[n._v("甚至包，通过package-info.java文件：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("@PackageAnnotation\npackage com.baeldung.interview.annotations;\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br")])]),t("p",[n._v("从Java 8开始，它们也可以应用于类型的使用。为此，注解必须指定值为ElementType.USE的@Target注解：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("@Target(ElementType.TYPE_USE)\npublic @interface SimpleAnnotation {\n    // ...\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("p",[n._v("现在，注解可以应用于类实例创建：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("new @SimpleAnnotation Apply();\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br")])]),t("p",[n._v("类型转换：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("aString = (@SimpleAnnotation String) something;\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br")])]),t("p",[n._v("接口中：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("public class SimpleList<T>\n  implements @SimpleAnnotation List<@SimpleAnnotation T> {\n    // ...\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("p",[n._v("抛出异常上：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("void aMethod() throws @SimpleAnnotation Exception {\n    // ...\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br")])]),t("h3",{attrs:{id:"有没有办法限制可以应用注解的元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有没有办法限制可以应用注解的元素"}},[n._v("#")]),n._v(" 有没有办法限制可以应用注解的元素？")]),n._v(" "),t("p",[n._v("有，@ Target注解可用于此目的。如果我们尝试在不适用的上下文中使用注解，编译器将发出错误。")]),n._v(" "),t("p",[n._v("以下是仅将@SimpleAnnotation批注的用法限制为字段声明的示例：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("@Target(ElementType.FIELD)\npublic @interface SimpleAnnotation {\n    // ...\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("p",[n._v("如果我们想让它适用于更多的上下文，我们可以传递多个常量：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("@Target({ ElementType.FIELD, ElementType.METHOD, ElementType.PACKAGE })\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br")])]),t("p",[n._v("我们甚至可以制作一个注解，因此它不能用于注解任何东西。当声明的类型仅用作复杂注解中的成员类型时，这可能会派上用场：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("@Target({})\npublic @interface NoTargetAnnotation {\n    // ...\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("h3",{attrs:{id:"什么是元注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是元注解"}},[n._v("#")]),n._v(" 什么是元注解？")]),n._v(" "),t("p",[n._v("元注解适用于其他注解的注解。")]),n._v(" "),t("p",[n._v("所有未使用@Target标记或使用它标记但包含ANNOTATION_TYPE常量的注解也是元注解：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("@Target(ElementType.ANNOTATION_TYPE)\npublic @interface SimpleAnnotation {\n    // ...\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("h3",{attrs:{id:"下面的代码会编译吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下面的代码会编译吗"}},[n._v("#")]),n._v(" 下面的代码会编译吗？")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("@Target({ ElementType.FIELD, ElementType.TYPE, ElementType.FIELD })\npublic @interface TestAnnotation {\n    int[] value() default {};\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("p",[n._v("不能。如果在@Target注解中多次出现相同的枚举常量，那么这是一个编译时错误。")]),n._v(" "),t("p",[n._v("删除重复常量将使代码成功编译：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("@Target({ ElementType.FIELD, ElementType.TYPE})\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br")])]),t("h2",{attrs:{id:"参考文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[n._v("#")]),n._v(" 参考文章")]),n._v(" "),t("p",[n._v("https://blog.fundodoo.com/2018/04/19/130.html\nhttps://blog.csdn.net/qq_37939251/article/details/83215703\nhttps://blog.51cto.com/4247649/2109129\nhttps://www.jianshu.com/p/2f2460e6f8e7\nhttps://blog.csdn.net/yuzongtao/article/details/83306182")]),n._v(" "),t("h2",{attrs:{id:"微信公众号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#微信公众号"}},[n._v("#")]),n._v(" 微信公众号")]),n._v(" "),t("h3",{attrs:{id:"java技术江湖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java技术江湖"}},[n._v("#")]),n._v(" Java技术江湖")]),n._v(" "),t("p",[n._v("如果大家想要实时关注我更新的文章以及分享的干货的话，可以关注我的公众号【Java技术江湖】一位阿里 Java 工程师的技术小站，作者黄小斜，专注 Java 相关技术：SSM、SpringBoot、MySQL、分布式、中间件、集群、Linux、网络、多线程，偶尔讲点Docker、ELK，同时也分享技术干货和学习经验，致力于Java全栈开发！")]),n._v(" "),t("p",[t("strong",[n._v("Java工程师必备学习资源:")]),n._v(" 一些Java工程师常用学习资源，关注公众号后，后台回复关键字 "),t("strong",[n._v("“Java”")]),n._v(" 即可免费无套路获取。")]),n._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190805090108984.jpg",alt:"我的公众号"}})]),n._v(" "),t("h3",{attrs:{id:"个人公众号-黄小斜"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#个人公众号-黄小斜"}},[n._v("#")]),n._v(" 个人公众号：黄小斜")]),n._v(" "),t("p",[n._v("作者是 985 硕士，蚂蚁金服 JAVA 工程师，专注于 JAVA 后端技术栈：SpringBoot、MySQL、分布式、中间件、微服务，同时也懂点投资理财，偶尔讲点算法和计算机理论基础，坚持学习和写作，相信终身学习的力量！")]),n._v(" "),t("p",[t("strong",[n._v("程序员3T技术学习资源：")]),n._v(" 一些程序员学习技术的资源大礼包，关注公众号后，后台回复关键字 "),t("strong",[n._v("“资料”")]),n._v(" 即可免费无套路获取。")]),n._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190829222750556.jpg",alt:""}})])])}),[],!1,null,null,null);a.default=e.exports}}]);