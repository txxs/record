(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{441:function(e,a,t){"use strict";t.r(a);var r=t(13),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"table-of-contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[e._v("#")]),e._v(" Table of Contents")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E9%98%AE%E4%B8%80%E5%B3%B0%EF%BC%9A%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E-elasticsearch-%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B"}},[e._v("阮一峰：全文搜索引擎 Elasticsearch 入门教程")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%B8%80%E3%80%81%E5%AE%89%E8%A3%85"}},[e._v("一、安装")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E4%BA%8C%E3%80%81%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"}},[e._v("二、基本概念")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#21-node-%E4%B8%8E-cluster"}},[e._v("2.1 Node 与 Cluster")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#22-index"}},[e._v("2.2 Index")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#23-document"}},[e._v("2.3 Document")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#24-type"}},[e._v("2.4 Type")])])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E4%B8%89%E3%80%81%E6%96%B0%E5%BB%BA%E5%92%8C%E5%88%A0%E9%99%A4-index"}},[e._v("三、新建和删除 Index")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E5%9B%9B%E3%80%81%E4%B8%AD%E6%96%87%E5%88%86%E8%AF%8D%E8%AE%BE%E7%BD%AE"}},[e._v("四、中文分词设置")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E4%BA%94%E3%80%81%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C"}},[e._v("五、数据操作")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#51-%E6%96%B0%E5%A2%9E%E8%AE%B0%E5%BD%95"}},[e._v("5.1 新增记录")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#52-%E6%9F%A5%E7%9C%8B%E8%AE%B0%E5%BD%95"}},[e._v("5.2 查看记录")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#53-%E5%88%A0%E9%99%A4%E8%AE%B0%E5%BD%95"}},[e._v("5.3 删除记录")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#54-%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95"}},[e._v("5.4 更新记录")])])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E5%85%AD%E3%80%81%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2"}},[e._v("六、数据查询")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#61-%E8%BF%94%E5%9B%9E%E6%89%80%E6%9C%89%E8%AE%B0%E5%BD%95"}},[e._v("6.1 返回所有记录")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#62-%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2"}},[e._v("6.2 全文搜索")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#63-%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97"}},[e._v("6.3 逻辑运算")])])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E4%B8%83%E3%80%81%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5"}},[e._v("七、参考链接")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%B8%80%E3%80%81%E5%89%8D%E8%A8%80"}},[e._v("一、前言")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E4%BA%8C%E3%80%81%E5%AE%89%E8%A3%85"}},[e._v("二、安装")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E4%B8%89%E3%80%81%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95"}},[e._v("三、创建索引")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E5%9B%9B%E3%80%81%E6%90%9C%E7%B4%A2%E5%B9%B2%E9%A2%84"}},[e._v("四、搜索干预")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E4%BA%94%E3%80%81%E4%B8%AD%E6%96%87%E5%88%86%E8%AF%8D"}},[e._v("五、中文分词")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E5%85%AD%E3%80%81%E6%80%BB%E7%BB%93"}},[e._v("六、总结")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E4%B8%83%E3%80%81%E9%99%84%E5%BD%95"}},[e._v("七、附录")])])])])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E9%80%89%E5%9E%8B%E6%95%B4%E7%90%86%EF%BC%9Aelasticsearch-vs-solr"}},[e._v("搜索引擎选型整理：Elasticsearch vs Solr")]),e._v(" "),t("ul",[t("li",[e._v("[Elasticsearch简介"),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Ffuxiaopang.gitbooks.io%2Flearnelasticsearch",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1),e._v("](#elasticsearch简介[]httpslinkjuejinimtargethttp3a2f2ffuxiaopanggitbooksio2flearnelasticsearch)")]),e._v(" "),t("li",[e._v("[Elasticsearch的优缺点"),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fstackoverflow.com%2Fquestions%2F10213009%2Fsolr-vs-elasticsearch",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fhuangx.in%2F22%2Ftranslation-solr-vs-elasticsearch",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1),e._v(":](#elasticsearch的优缺点[]httpslinkjuejinimtargethttp3a2f2fstackoverflowcom2fquestions2f102130092fsolr-vs-elasticsearch[]httpslinkjuejinimtargethttp3a2f2fhuangxin2f222ftranslation-solr-vs-elasticsearch)\n"),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%BC%98%E7%82%B9"}},[e._v("优点")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E7%BC%BA%E7%82%B9"}},[e._v("缺点")])])])]),e._v(" "),t("li",[e._v("[Solr简介"),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fzh.wikipedia.org%2Fwiki%2FSolr",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1),e._v("](#solr简介[]httpslinkjuejinimtargethttp3a2f2fzhwikipediaorg2fwiki2fsolr)")]),e._v(" "),t("li",[t("a",{attrs:{href:"#solr%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9"}},[e._v("Solr的优缺点")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%BC%98%E7%82%B9-1"}},[e._v("优点")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E7%BC%BA%E7%82%B9-1"}},[e._v("缺点")])])])]),e._v(" "),t("li",[e._v("[Elasticsearch与Solr的比较"),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fblog.socialcast.com%2Frealtime-search-solr-vs-elasticsearch%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1),e._v("](#elasticsearch与solr的比较[]httpslinkjuejinimtargethttp3a2f2fblogsocialcastcom2frealtime-search-solr-vs-elasticsearch2f)")]),e._v(" "),t("li",[e._v("[实际生产环境测试"),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fblog.socialcast.com%2Frealtime-search-solr-vs-elasticsearch%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1),e._v("](#实际生产环境测试[]httpslinkjuejinimtargethttp3a2f2fblogsocialcastcom2frealtime-search-solr-vs-elasticsearch2f)")]),e._v(" "),t("li",[t("a",{attrs:{href:"#elasticsearch-%E4%B8%8E-solr-%E7%9A%84%E6%AF%94%E8%BE%83%E6%80%BB%E7%BB%93"}},[e._v("Elasticsearch 与 Solr 的比较总结")])]),e._v(" "),t("li",[e._v("[其他基于Lucene的开源搜索引擎解决方案"),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fmail-archives.apache.org%2Fmod_mbox%2Fhbase-user%2F201006.mbox%2F%253C149150.78881.qm%40web50304.mail.re2.yahoo.com%253E",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1),e._v("](#其他基于lucene的开源搜索引擎解决方案[]httpslinkjuejinimtargethttp3a2f2fmail-archivesapacheorg2fmod_mbox2fhbase-user2f201006mbox2f253c14915078881qm40web50304mailre2yahoocom253e)")])])])]),e._v(" "),t("h1",{attrs:{id:"阮一峰-全文搜索引擎-elasticsearch-入门教程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#阮一峰-全文搜索引擎-elasticsearch-入门教程"}},[e._v("#")]),e._v(" 阮一峰：全文搜索引擎 Elasticsearch 入门教程")]),e._v(" "),t("p",[e._v("作者：阮一峰")]),e._v(" "),t("p",[e._v("本系列文章将整理到我在GitHub上的《Java面试指南》仓库，更多精彩内容请到我的仓库里查看")]),e._v(" "),t("blockquote",[t("p",[e._v("https://github.com/h2pl/Java-Tutorial")])]),e._v(" "),t("p",[e._v("喜欢的话麻烦点下Star哈")]),e._v(" "),t("p",[e._v("本系列文章将整理到我的个人博客")]),e._v(" "),t("blockquote",[t("p",[e._v("www.how2playlife.com")])]),e._v(" "),t("p",[e._v("更多Java技术文章会更新在我的微信公众号【Java技术江湖】上，欢迎关注\n该系列博文会介绍常见的后端技术，这对后端工程师来说是一种综合能力，我们会逐步了解搜索技术，云计算相关技术、大数据研发等常见的技术喜提，以便让你更完整地了解后端技术栈的全貌，为后续参与分布式应用的开发和学习做好准备。")]),e._v(" "),t("p",[e._v("如果对本系列文章有什么建议，或者是有什么疑问的话，也可以关注公众号【Java技术江湖】联系我，欢迎你参与本系列博文的创作和修订。")]),e._v(" "),t("p",[e._v("原文链接："),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2017%2F08%2Felasticsearch.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("www.ruanyifeng.com"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.bagevent.com/event/1291755?bag_track=juejin",target:"_blank",rel:"noopener noreferrer"}},[e._v("9月7日-8日 北京，与 Google Twitch 等团队技术大咖面对面www.bagevent.com"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fbaike.baidu.com%2Fitem%2F%25E5%2585%25A8%25E6%2596%2587%25E6%2590%259C%25E7%25B4%25A2%25E5%25BC%2595%25E6%2593%258E",target:"_blank",rel:"noopener noreferrer"}},[e._v("全文搜索"),t("OutboundLink")],1),e._v("属于最常见的需求，开源的 "),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fwww.elastic.co%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("Elasticsearch"),t("OutboundLink")],1),e._v(" （以下简称 Elastic）是目前全文搜索引擎的首选。")]),e._v(" "),t("p",[e._v("它可以快速地储存、搜索和分析海量数据。维基百科、Stack Overflow、Github 都采用它。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/8/23/1744dd6de08a90846583b11bd4638e8f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),e._v(" "),t("p",[e._v("Elastic 的底层是开源库 "),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Flucene.apache.org%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lucene"),t("OutboundLink")],1),e._v("。但是，你没法直接用 Lucene，必须自己写代码去调用它的接口。Elastic 是 Lucene 的封装，提供了 REST API 的操作接口，开箱即用。")]),e._v(" "),t("p",[e._v("本文从零开始，讲解如何使用 Elastic 搭建自己的全文搜索引擎。每一步都有详细的说明，大家跟着做就能学会。")]),e._v(" "),t("h2",{attrs:{id:"一、安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、安装"}},[e._v("#")]),e._v(" 一、安装")]),e._v(" "),t("p",[e._v("Elastic 需要 Java 8 环境。如果你的机器还没安装 Java，可以参考"),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fwww.digitalocean.com%2Fcommunity%2Ftutorials%2Fhow-to-install-java-with-apt-get-on-debian-8",target:"_blank",rel:"noopener noreferrer"}},[e._v("这篇文章"),t("OutboundLink")],1),e._v("，注意要保证环境变量"),t("code",[e._v("JAVA_HOME")]),e._v("正确设置。")]),e._v(" "),t("p",[e._v("安装完 Java，就可以跟着"),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2Fcurrent%2Fzip-targz.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档"),t("OutboundLink")],1),e._v("安装 Elastic。直接下载压缩包比较简单。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" $ wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.5.1.zip$ unzip elasticsearch-5.5.1.zip$ cd elasticsearch-5.5.1/ \n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("接着，进入解压后的目录，运行下面的命令，启动 Elastic。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" $ ./bin/elasticsearch\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("如果这时"),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fspujadas%2Felk-docker%2Fissues%2F92",target:"_blank",rel:"noopener noreferrer"}},[e._v("报错"),t("OutboundLink")],1),e._v('"max virtual memory areas vm.max_map_count [65530] is too low"，要运行下面的命令。')]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" $ sudo sysctl -w vm.max_map_count=262144\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("如果一切正常，Elastic 就会在默认的9200端口运行。这时，打开另一个命令行窗口，请求该端口，会得到说明信息。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' $ curl localhost:9200 {  "name" : "atntrTf",  "cluster_name" : "elasticsearch",  "cluster_uuid" : "tf9250XhQ6ee4h7YI11anA",  "version" : {    "number" : "5.5.1",    "build_hash" : "19c13d0",    "build_date" : "2017-07-18T20:44:24.823Z",    "build_snapshot" : false,    "lucene_version" : "6.6.0"  },  "tagline" : "You Know, for Search"}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("上面代码中，请求9200端口，Elastic 返回一个 JSON 对象，包含当前节点、集群、版本等信息。")]),e._v(" "),t("p",[e._v("按下 Ctrl + C，Elastic 就会停止运行。")]),e._v(" "),t("p",[e._v("默认情况下，Elastic 只允许本机访问，如果需要远程访问，可以修改 Elastic 安装目录的"),t("code",[e._v("config/elasticsearch.yml")]),e._v("文件，去掉"),t("code",[e._v("network.host")]),e._v("的注释，将它的值改成"),t("code",[e._v("0.0.0.0")]),e._v("，然后重新启动 Elastic。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" network.host: 0.0.0.0\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("上面代码中，设成"),t("code",[e._v("0.0.0.0")]),e._v("让任何人都可以访问。线上服务不要这样设置，要设成具体的 IP。")]),e._v(" "),t("h2",{attrs:{id:"二、基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、基本概念"}},[e._v("#")]),e._v(" 二、基本概念")]),e._v(" "),t("h3",{attrs:{id:"_2-1-node-与-cluster"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-node-与-cluster"}},[e._v("#")]),e._v(" 2.1 Node 与 Cluster")]),e._v(" "),t("p",[e._v("Elastic 本质上是一个分布式数据库，允许多台服务器协同工作，每台服务器可以运行多个 Elastic 实例。")]),e._v(" "),t("p",[e._v("单个 Elastic 实例称为一个节点（node）。一组节点构成一个集群（cluster）。")]),e._v(" "),t("h3",{attrs:{id:"_2-2-index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-index"}},[e._v("#")]),e._v(" 2.2 Index")]),e._v(" "),t("p",[e._v("Elastic 会索引所有字段，经过处理后写入一个反向索引（Inverted Index）。查找数据的时候，直接查找该索引。")]),e._v(" "),t("p",[e._v("所以，Elastic 数据管理的顶层单位就叫做 Index（索引）。它是单个数据库的同义词。每个 Index （即数据库）的名字必须是小写。")]),e._v(" "),t("p",[e._v("下面的命令可以查看当前节点的所有 Index。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" $ curl -X GET 'http://localhost:9200/_cat/indices?v'\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("h3",{attrs:{id:"_2-3-document"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-document"}},[e._v("#")]),e._v(" 2.3 Document")]),e._v(" "),t("p",[e._v("Index 里面单条的记录称为 Document（文档）。许多条 Document 构成了一个 Index。")]),e._v(" "),t("p",[e._v("Document 使用 JSON 格式表示，下面是一个例子。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' {  "user": "张三",  "title": "工程师",  "desc": "数据库管理"}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("同一个 Index 里面的 Document，不要求有相同的结构（scheme），但是最好保持相同，这样有利于提高搜索效率。")]),e._v(" "),t("h3",{attrs:{id:"_2-4-type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-type"}},[e._v("#")]),e._v(" 2.4 Type")]),e._v(" "),t("p",[e._v("Document 可以分组，比如"),t("code",[e._v("weather")]),e._v("这个 Index 里面，可以按城市分组（北京和上海），也可以按气候分组（晴天和雨天）。这种分组就叫做 Type，它是虚拟的逻辑分组，用来过滤 Document。")]),e._v(" "),t("p",[e._v("不同的 Type 应该有相似的结构（schema），举例来说，"),t("code",[e._v("id")]),e._v("字段不能在这个组是字符串，在另一个组是数值。这是与关系型数据库的表的"),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Fguide%2Fcurrent%2Fmapping.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一个区别"),t("OutboundLink")],1),e._v("。性质完全不同的数据（比如"),t("code",[e._v("products")]),e._v("和"),t("code",[e._v("logs")]),e._v("）应该存成两个 Index，而不是一个 Index 里面的两个 Type（虽然可以做到）。")]),e._v(" "),t("p",[e._v("下面的命令可以列出每个 Index 所包含的 Type。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" $ curl 'localhost:9200/_mapping?pretty=true'\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("根据"),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fwww.elastic.co%2Fblog%2Findex-type-parent-child-join-now-future-in-elasticsearch",target:"_blank",rel:"noopener noreferrer"}},[e._v("规划"),t("OutboundLink")],1),e._v("，Elastic 6.x 版只允许每个 Index 包含一个 Type，7.x 版将会彻底移除 Type。")]),e._v(" "),t("h2",{attrs:{id:"三、新建和删除-index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、新建和删除-index"}},[e._v("#")]),e._v(" 三、新建和删除 Index")]),e._v(" "),t("p",[e._v("新建 Index，可以直接向 Elastic 服务器发出 PUT 请求。下面的例子是新建一个名叫"),t("code",[e._v("weather")]),e._v("的 Index。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" $ curl -X PUT 'localhost:9200/weather'\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("服务器返回一个 JSON 对象，里面的"),t("code",[e._v("acknowledged")]),e._v("字段表示操作成功。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' {  "acknowledged":true,  "shards_acknowledged":true}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("然后，我们发出 DELETE 请求，删除这个 Index。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" $ curl -X DELETE 'localhost:9200/weather'\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("h2",{attrs:{id:"四、中文分词设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、中文分词设置"}},[e._v("#")]),e._v(" 四、中文分词设置")]),e._v(" "),t("p",[e._v("首先，安装中文分词插件。这里使用的是 "),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fmedcl%2Felasticsearch-analysis-ik%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("ik"),t("OutboundLink")],1),e._v("，也可以考虑其他插件（比如 "),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Fplugins%2Fcurrent%2Fanalysis-smartcn.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("smartcn"),t("OutboundLink")],1),e._v("）。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" $ ./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.5.1/elasticsearch-analysis-ik-5.5.1.zip\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("上面代码安装的是5.5.1版的插件，与 Elastic 5.5.1 配合使用。")]),e._v(" "),t("p",[e._v("接着，重新启动 Elastic，就会自动加载这个新安装的插件。")]),e._v(" "),t("p",[e._v("然后，新建一个 Index，指定需要分词的字段。这一步根据数据结构而异，下面的命令只针对本文。基本上，凡是需要搜索的中文字段，都要单独设置一下。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' $ curl -X PUT \'localhost:9200/accounts\' -d \'{  "mappings": {    "person": {      "properties": {        "user": {          "type": "text",          "analyzer": "ik_max_word",          "search_analyzer": "ik_max_word"        },        "title": {          "type": "text",          "analyzer": "ik_max_word",          "search_analyzer": "ik_max_word"        },        "desc": {          "type": "text",          "analyzer": "ik_max_word",          "search_analyzer": "ik_max_word"        }      }    }  }}\'\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("上面代码中，首先新建一个名称为"),t("code",[e._v("accounts")]),e._v("的 Index，里面有一个名称为"),t("code",[e._v("person")]),e._v("的 Type。"),t("code",[e._v("person")]),e._v("有三个字段。")]),e._v(" "),t("blockquote",[t("ul",[t("li",[e._v("user")]),e._v(" "),t("li",[e._v("title")]),e._v(" "),t("li",[e._v("desc")])])]),e._v(" "),t("p",[e._v("这三个字段都是中文，而且类型都是文本（text），所以需要指定中文分词器，不能使用默认的英文分词器。")]),e._v(" "),t("p",[e._v("Elastic 的分词器称为 "),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2Fcurrent%2Fanalysis.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("analyzer"),t("OutboundLink")],1),e._v("。我们对每个字段指定分词器。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' "user": {  "type": "text",  "analyzer": "ik_max_word",  "search_analyzer": "ik_max_word"}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("上面代码中，"),t("code",[e._v("analyzer")]),e._v("是字段文本的分词器，"),t("code",[e._v("search_analyzer")]),e._v("是搜索词的分词器。"),t("code",[e._v("ik_max_word")]),e._v("分词器是插件"),t("code",[e._v("ik")]),e._v("提供的，可以对文本进行最大数量的分词。")]),e._v(" "),t("h2",{attrs:{id:"五、数据操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、数据操作"}},[e._v("#")]),e._v(" 五、数据操作")]),e._v(" "),t("h3",{attrs:{id:"_5-1-新增记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-新增记录"}},[e._v("#")]),e._v(" 5.1 新增记录")]),e._v(" "),t("p",[e._v("向指定的 /Index/Type 发送 PUT 请求，就可以在 Index 里面新增一条记录。比如，向"),t("code",[e._v("/accounts/person")]),e._v("发送请求，就可以新增一条人员记录。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' $ curl -X PUT \'localhost:9200/accounts/person/1\' -d \'{  "user": "张三",  "title": "工程师",  "desc": "数据库管理"}\' \n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("服务器返回的 JSON 对象，会给出 Index、Type、Id、Version 等信息。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' {  "_index":"accounts",  "_type":"person",  "_id":"1",  "_version":1,  "result":"created",  "_shards":{"total":2,"successful":1,"failed":0},  "created":true}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("如果你仔细看，会发现请求路径是"),t("code",[e._v("/accounts/person/1")]),e._v("，最后的"),t("code",[e._v("1")]),e._v("是该条记录的 Id。它不一定是数字，任意字符串（比如"),t("code",[e._v("abc")]),e._v("）都可以。")]),e._v(" "),t("p",[e._v("新增记录的时候，也可以不指定 Id，这时要改成 POST 请求。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' $ curl -X POST \'localhost:9200/accounts/person\' -d \'{  "user": "李四",  "title": "工程师",  "desc": "系统管理"}\'\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("上面代码中，向"),t("code",[e._v("/accounts/person")]),e._v("发出一个 POST 请求，添加一个记录。这时，服务器返回的 JSON 对象里面，"),t("code",[e._v("_id")]),e._v("字段就是一个随机字符串。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' {  "_index":"accounts",  "_type":"person",  "_id":"AV3qGfrC6jMbsbXb6k1p",  "_version":1,  "result":"created",  "_shards":{"total":2,"successful":1,"failed":0},  "created":true}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("注意，如果没有先创建 Index（这个例子是"),t("code",[e._v("accounts")]),e._v("），直接执行上面的命令，Elastic 也不会报错，而是直接生成指定的 Index。所以，打字的时候要小心，不要写错 Index 的名称。")]),e._v(" "),t("h3",{attrs:{id:"_5-2-查看记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-查看记录"}},[e._v("#")]),e._v(" 5.2 查看记录")]),e._v(" "),t("p",[e._v("向"),t("code",[e._v("/Index/Type/Id")]),e._v("发出 GET 请求，就可以查看这条记录。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" $ curl 'localhost:9200/accounts/person/1?pretty=true'\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("上面代码请求查看"),t("code",[e._v("/accounts/person/1")]),e._v("这条记录，URL 的参数"),t("code",[e._v("pretty=true")]),e._v("表示以易读的格式返回。")]),e._v(" "),t("p",[e._v("返回的数据中，"),t("code",[e._v("found")]),e._v("字段表示查询成功，"),t("code",[e._v("_source")]),e._v("字段返回原始记录。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' {  "_index" : "accounts",  "_type" : "person",  "_id" : "1",  "_version" : 1,  "found" : true,  "_source" : {    "user" : "张三",    "title" : "工程师",    "desc" : "数据库管理"  }}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("如果 Id 不正确，就查不到数据，"),t("code",[e._v("found")]),e._v("字段就是"),t("code",[e._v("false")]),e._v("。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' $ curl \'localhost:9200/weather/beijing/abc?pretty=true\' {  "_index" : "accounts",  "_type" : "person",  "_id" : "abc",  "found" : false}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("h3",{attrs:{id:"_5-3-删除记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-删除记录"}},[e._v("#")]),e._v(" 5.3 删除记录")]),e._v(" "),t("p",[e._v("删除记录就是发出 DELETE 请求。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" $ curl -X DELETE 'localhost:9200/accounts/person/1'\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("这里先不要删除这条记录，后面还要用到。")]),e._v(" "),t("h3",{attrs:{id:"_5-4-更新记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-更新记录"}},[e._v("#")]),e._v(" 5.4 更新记录")]),e._v(" "),t("p",[e._v("更新记录就是使用 PUT 请求，重新发送一次数据。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' $ curl -X PUT \'localhost:9200/accounts/person/1\' -d \'{    "user" : "张三",    "title" : "工程师",    "desc" : "数据库管理，软件开发"}\'  {  "_index":"accounts",  "_type":"person",  "_id":"1",  "_version":2,  "result":"updated",  "_shards":{"total":2,"successful":1,"failed":0},  "created":false}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v('上面代码中，我们将原始数据从"数据库管理"改成"数据库管理，软件开发"。 返回结果里面，有几个字段发生了变化。')]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' "_version" : 2,"result" : "updated","created" : false\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("可以看到，记录的 Id 没变，但是版本（version）从"),t("code",[e._v("1")]),e._v("变成"),t("code",[e._v("2")]),e._v("，操作类型（result）从"),t("code",[e._v("created")]),e._v("变成"),t("code",[e._v("updated")]),e._v("，"),t("code",[e._v("created")]),e._v("字段变成"),t("code",[e._v("false")]),e._v("，因为这次不是新建记录。")]),e._v(" "),t("h2",{attrs:{id:"六、数据查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、数据查询"}},[e._v("#")]),e._v(" 六、数据查询")]),e._v(" "),t("h3",{attrs:{id:"_6-1-返回所有记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-返回所有记录"}},[e._v("#")]),e._v(" 6.1 返回所有记录")]),e._v(" "),t("p",[e._v("使用 GET 方法，直接请求"),t("code",[e._v("/Index/Type/_search")]),e._v("，就会返回所有记录。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' $ curl \'localhost:9200/accounts/person/_search\' {  "took":2,  "timed_out":false,  "_shards":{"total":5,"successful":5,"failed":0},  "hits":{    "total":2,    "max_score":1.0,    "hits":[      {        "_index":"accounts",        "_type":"person",        "_id":"AV3qGfrC6jMbsbXb6k1p",        "_score":1.0,        "_source": {          "user": "李四",          "title": "工程师",          "desc": "系统管理"        }      },      {        "_index":"accounts",        "_type":"person",        "_id":"1",        "_score":1.0,        "_source": {          "user" : "张三",          "title" : "工程师",          "desc" : "数据库管理，软件开发"        }      }    ]  }}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("上面代码中，返回结果的 "),t("code",[e._v("took")]),e._v("字段表示该操作的耗时（单位为毫秒），"),t("code",[e._v("timed_out")]),e._v("字段表示是否超时，"),t("code",[e._v("hits")]),e._v("字段表示命中的记录，里面子字段的含义如下。")]),e._v(" "),t("blockquote",[t("ul",[t("li",[t("code",[e._v("total")]),e._v("：返回记录数，本例是2条。")]),e._v(" "),t("li",[t("code",[e._v("max_score")]),e._v("：最高的匹配程度，本例是"),t("code",[e._v("1.0")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("hits")]),e._v("：返回的记录组成的数组。")])])]),e._v(" "),t("p",[e._v("返回的记录中，每条记录都有一个"),t("code",[e._v("_score")]),e._v("字段，表示匹配的程序，默认是按照这个字段降序排列。")]),e._v(" "),t("h3",{attrs:{id:"_6-2-全文搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-全文搜索"}},[e._v("#")]),e._v(" 6.2 全文搜索")]),e._v(" "),t("p",[e._v("Elastic 的查询非常特别，使用自己的"),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2F5.5%2Fquery-dsl.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("查询语法"),t("OutboundLink")],1),e._v("，要求 GET 请求带有数据体。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' $ curl \'localhost:9200/accounts/person/_search\'  -d \'{  "query" : { "match" : { "desc" : "软件" }}}\'\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("上面代码使用 "),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2F5.5%2Fquery-dsl-match-query.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Match 查询"),t("OutboundLink")],1),e._v("，指定的匹配条件是"),t("code",[e._v("desc")]),e._v('字段里面包含"软件"这个词。返回结果如下。')]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' {  "took":3,  "timed_out":false,  "_shards":{"total":5,"successful":5,"failed":0},  "hits":{    "total":1,    "max_score":0.28582606,    "hits":[      {        "_index":"accounts",        "_type":"person",        "_id":"1",        "_score":0.28582606,        "_source": {          "user" : "张三",          "title" : "工程师",          "desc" : "数据库管理，软件开发"        }      }    ]  }}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("Elastic 默认一次返回10条结果，可以通过"),t("code",[e._v("size")]),e._v("字段改变这个设置。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' $ curl \'localhost:9200/accounts/person/_search\'  -d \'{  "query" : { "match" : { "desc" : "管理" }},  "size": 1}\'\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("上面代码指定，每次只返回一条结果。")]),e._v(" "),t("p",[e._v("还可以通过"),t("code",[e._v("from")]),e._v("字段，指定位移。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' $ curl \'localhost:9200/accounts/person/_search\'  -d \'{  "query" : { "match" : { "desc" : "管理" }},  "from": 1,  "size": 1}\'\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("上面代码指定，从位置1开始（默认是从位置0开始），只返回一条结果。")]),e._v(" "),t("h3",{attrs:{id:"_6-3-逻辑运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-逻辑运算"}},[e._v("#")]),e._v(" 6.3 逻辑运算")]),e._v(" "),t("p",[e._v("如果有多个搜索关键字， Elastic 认为它们是"),t("code",[e._v("or")]),e._v("关系。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' $ curl \'localhost:9200/accounts/person/_search\'  -d \'{  "query" : { "match" : { "desc" : "软件 系统" }}}\'\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("p",[e._v("上面代码搜索的是"),t("code",[e._v("软件 or 系统")]),e._v("。")]),e._v(" "),t("p",[e._v("如果要执行多个关键词的"),t("code",[e._v("and")]),e._v("搜索，必须使用"),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2F5.5%2Fquery-dsl-bool-query.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("布尔查询"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("blockquote",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' $ curl \'localhost:9200/accounts/person/_search\'  -d \'{  "query": {    "bool": {      "must": [        { "match": { "desc": "软件" } },        { "match": { "desc": "系统" } }      ]    }  }}\'\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("h2",{attrs:{id:"七、参考链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、参考链接"}},[e._v("#")]),e._v(" 七、参考链接")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2Fcurrent%2Fgetting-started.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ElasticSearch 官方手册"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fwww.elastic.co%2Fblog%2Fa-practical-introduction-to-elasticsearch",target:"_blank",rel:"noopener noreferrer"}},[e._v("A Practical Introduction to Elasticsearch"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("（完）")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-3a3865f474573947.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("h4",{attrs:{id:"一、前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[e._v("#")]),e._v(" 一、前言")]),e._v(" "),t("p",[e._v("在开发网站/App项目的时候，通常需要搭建搜索服务。比如，新闻类应用需要检索标题/内容，社区类应用需要检索用户/帖子。")]),e._v(" "),t("p",[e._v("对于简单的需求，可以使用数据库的 LIKE 模糊搜索，示例：")]),e._v(" "),t("blockquote",[t("p",[e._v("SELECT * FROM news WHERE title LIKE '%法拉利跑车%'")])]),e._v(" "),t("p",[e._v('可以查询到所有标题含有 "法拉利跑车" 关键词的新闻，但是这种方式有明显的弊端：')]),e._v(" "),t("blockquote",[t("p",[e._v("1、模糊查询性能极低，当数据量庞大的时候，往往会使数据库服务中断；")]),e._v(" "),t("p",[e._v("2、无法查询相关的数据，只能严格在标题中匹配关键词。")])]),e._v(" "),t("p",[e._v("因此，需要搭建专门提供搜索功能的服务，具备分词、全文检索等高级功能。 Solr 就是这样一款搜索引擎，可以让你快速搭建适用于自己业务的搜索服务。")]),e._v(" "),t("h4",{attrs:{id:"二、安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、安装"}},[e._v("#")]),e._v(" 二、安装")]),e._v(" "),t("p",[e._v("到官网 "),t("a",{attrs:{href:"https://link.jianshu.com/?t=http://lucene.apache.org/solr/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://lucene.apache.org/solr/"),t("OutboundLink")],1),e._v(" 下载安装包，解压并进入 Solr 目录：")]),e._v(" "),t("blockquote",[t("p",[e._v("wget 'http://apache.website-solution.net/lucene/solr/6.2.0/solr-6.2.0.tgz'")]),e._v(" "),t("p",[e._v("tar xvf solr-6.2.0.tgz")]),e._v(" "),t("p",[e._v("cd solr-6.2.0")])]),e._v(" "),t("p",[e._v("目录结构如下：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-ddbb880dd1a7bcb0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("Solr 6.2 目录结构")]),e._v(" "),t("p",[e._v("启动 Solr 服务之前，确认已经安装 Java 1.8 ：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-049501dade838caf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("查看 Java 版本")]),e._v(" "),t("p",[e._v("启动 Solr 服务：")]),e._v(" "),t("blockquote",[t("p",[e._v("./bin/solr start -m 1g")])]),e._v(" "),t("p",[e._v("Solr 将默认监听 8983 端口，其中 -m 1g 指定分配给 JVM 的内存为 1 G。")]),e._v(" "),t("p",[e._v("在浏览器中访问 Solr 管理后台：")]),e._v(" "),t("blockquote",[t("p",[e._v("http://127.0.0.1:8983/solr/#/")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-19bdf6ec1077db99.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("Solr 管理后台")]),e._v(" "),t("p",[e._v("创建 Solr 应用：")]),e._v(" "),t("blockquote",[t("p",[e._v("./bin/solr create -c my_news")])]),e._v(" "),t("p",[e._v("可以在 solr-6.2.0/server/solr 目录下生成 my_news 文件夹，结构如下：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-9911b7416917ca06.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("my_news 目录结构")]),e._v(" "),t("p",[e._v("同时，可以在管理后台看到 my_news：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-81af0fb0b5d89edd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("管理后台")]),e._v(" "),t("h4",{attrs:{id:"三、创建索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、创建索引"}},[e._v("#")]),e._v(" 三、创建索引")]),e._v(" "),t("p",[e._v("我们将从 MySQL 数据库中导入数据到 Solr 并建立索引。")]),e._v(" "),t("p",[e._v("首先，需要了解 Solr 中的两个概念： 字段(field) 和 字段类型(fieldType)，配置示例如下：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-cbc2ba3d84087319.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("schema.xml 示例")]),e._v(" "),t("p",[e._v("field 指定一个字段的名称、是否索引/存储和字段类型。")]),e._v(" "),t("p",[e._v("fieldType 指定一个字段类型的名称以及在查询/索引的时候可能用到的分词插件。")]),e._v(" "),t("p",[e._v("将 solr-6.2.0\\server\\solr\\my_news\\conf 目录下默认的配置文件 managed-schema 重命名为 schema.xml 并加入新的 fieldType：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-2657cfb3507d1bae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("分词类型")]),e._v(" "),t("p",[e._v("在 my_news 目录下创建 lib 目录，将用到的分词插件 ik-analyzer-solr5-5.x.jar 加到 lib 目录，结构如下：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-3a3e436e33fa9311.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("my_news 目录结构")]),e._v(" "),t("p",[e._v("在 Solr 安装目录下重启服务：")]),e._v(" "),t("blockquote",[t("p",[e._v("./bin/solr restart")])]),e._v(" "),t("p",[e._v("可以在管理后台看到新加的类型：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-5609a84930ed96f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("text_ik 类型")]),e._v(" "),t("p",[e._v("接下来创建和我们数据库字段对应的 field：title 和 content，类型选为 text_ik：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-a46bba01779c0701.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("新建字段 title")]),e._v(" "),t("p",[e._v("将要导入数据的 MySQL 数据库表结构：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-ab4dec5179c0f5c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("编辑 conf/solrconfig.xml 文件，加入类库和数据库配置：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-e3dc609b92f395a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("类库")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-7a145baf9aa36599.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("dataimport config")]),e._v(" "),t("p",[e._v("同时新建数据库连接配置文件 conf/db-mysql-config.xml ，内容如下：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-edc3bb352c36e8c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("数据库配置文件")]),e._v(" "),t("p",[e._v("将数据库连接组件 mysql-connector-java-5.1.39-bin.jar 放到 lib 目录下，重启 Solr，访问管理后台，执行全量导入数据：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-a4462a20df0716a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("全量导入数据")]),e._v(" "),t("p",[e._v("创建定时更新脚本：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-f437d561069eedd2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("定时更新脚本")]),e._v(" "),t("p",[e._v("加入到定时任务，每5分钟增量更新一次索引：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-73d93e996f0a132c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("定时任务")]),e._v(" "),t("p",[e._v("在 Solr 管理后台测试搜索结果：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-9f003409af70ae7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("分词搜索结果")]),e._v(" "),t("p",[e._v("至此，基本的搜索引擎搭建完毕，外部应用只需通过 http 协议提供查询参数，就可以获取搜索结果。")]),e._v(" "),t("h4",{attrs:{id:"四、搜索干预"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、搜索干预"}},[e._v("#")]),e._v(" 四、搜索干预")]),e._v(" "),t("p",[e._v("通常需要对搜索结果进行人工干预，比如编辑推荐、竞价排名或者屏蔽搜索结果。Solr 已经内置了 QueryElevationComponent 插件，可以从配置文件中获取搜索关键词对应的干预列表，并将干预结果排在搜索结果的前面。")]),e._v(" "),t("p",[e._v("在 solrconfig.xml 文件中，可以看到：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-09494ec9437338cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("干预其请求配置")]),e._v(" "),t("p",[e._v("定义了搜索组件 elevator，应用在 /elevate 的搜索请求中，干预结果的配置文件在 solrconfig.xml 同目录下的 elevate.xml 中，干预配置示例：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-3f2587b4bb0dcee3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v('重启 Solr ，当搜索 "关键词" 的时候，id 为 1和 4 的文档将出现在前面，同时 id = 3 的文档被排除在结果之外，可以看到，没有干预的时候，搜索结果为：')]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-b12a6ec2234beaef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("无干预结果")]),e._v(" "),t("p",[e._v("当有搜索干预的时候：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-f57a54656abc2f62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("干预结果")]),e._v(" "),t("p",[e._v("通过配置文件干预搜索结果，虽然简单，但是每次更新都要重启 Solr 才能生效，稍显麻烦，我们可以仿照 QueryElevationComponent 类，开发自己的干预组件，例如:从 Redis 中读取干预配置。")]),e._v(" "),t("h4",{attrs:{id:"五、中文分词"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、中文分词"}},[e._v("#")]),e._v(" 五、中文分词")]),e._v(" "),t("p",[e._v("中文的搜索质量，和分词的效果息息相关，可以在 Solr 管理后台测试分词：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-bc4dfa9a4801846f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("分词结果测试")]),e._v(" "),t("p",[e._v("上例可以看到，使用 "),t("a",{attrs:{href:"https://blog.csdn.net/a724888/article/details/80993677",target:"_blank",rel:"noopener noreferrer"}},[e._v("IKAnalyzer"),t("OutboundLink")],1),e._v(" 分词插件，对 “北京科技大学” 分词的测试结果。当用户搜索 “北京”、“科技大学”、“科技大”、“科技”、“大学” 这些关键词的时候，都会搜索到文本内容含 “北京科技大学” 的文档。")]),e._v(" "),t("p",[e._v("常用的中文分词插件有 IKAnalyzer、mmseg4j和 Solr 自带的 smartcn 等，分词效果各有优劣，具体选择哪个，可以根据自己的业务场景，分别测试效果再选择。")]),e._v(" "),t("p",[e._v("分词插件一般都有自己的默认词库和扩展词库，默认词库包含了绝大多数常用的中文词语。如果默认词库无法满足你的需求，比如某些专业领域的词汇，可以在扩展词库中手动添加，这样分词插件就能识别新词语了。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-ac9e935a3b98661c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("分词插件扩展词库配置示例")]),e._v(" "),t("p",[e._v("分词插件还可以指定停止词库，将某些无意义的词汇剔出分词结果，比如：“的”、“哼” 等，例如：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/19687-34e025db9e4db451.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700",alt:""}})]),e._v(" "),t("p",[e._v("去除无意义的词")]),e._v(" "),t("h4",{attrs:{id:"六、总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、总结"}},[e._v("#")]),e._v(" 六、总结")]),e._v(" "),t("p",[e._v("以上介绍了 Solr 最常用的一些功能，Solr 本身还有很多其他丰富的功能，比如分布式部署。")]),e._v(" "),t("p",[e._v("希望对你有所帮助。")]),e._v(" "),t("h4",{attrs:{id:"七、附录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、附录"}},[e._v("#")]),e._v(" 七、附录")]),e._v(" "),t("p",[e._v("1、参考资料：")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://link.jianshu.com/?t=https://wiki.apache.org/solr/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wiki.apache.org/solr/"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://link.jianshu.com/?t=http://lucene.apache.org/solr/quickstart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://lucene.apache.org/solr/quickstart.html"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://link.jianshu.com/?t=https://cwiki.apache.org/confluence/display/solr/Apache+Solr+Reference+Guide",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://cwiki.apache.org/confluence/display/solr/Apache+Solr+Reference+Guide"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("2、上述 Demo 中用到的所有配置文件、Jar 包：")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://link.jianshu.com/?t=https://github.com/Ceelog/OpenSchool/blob/master/my_news.zip",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/Ceelog/OpenSchool/blob/master/my_news.zip"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("3、还有疑问？联系作者微博/微信 "),t("a",{attrs:{href:"https://link.jianshu.com/?t=http://weibo.com/ceelog/",target:"_blank",rel:"noopener noreferrer"}},[e._v("@Ceelog"),t("OutboundLink")],1)]),e._v(" "),t("h1",{attrs:{id:"搜索引擎选型整理-elasticsearch-vs-solr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搜索引擎选型整理-elasticsearch-vs-solr"}},[e._v("#")]),e._v(" 搜索引擎选型整理：Elasticsearch vs Solr")]),e._v(" "),t("blockquote",[t("p",[e._v("本文首发于"),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fblog.kittypanic.com%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("我的博客"),t("OutboundLink")],1),e._v("\n原文链接："),t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fblog.kittypanic.com%2Felastic_vs_solr%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("Elasticsearch 与 Solr 的比较"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"elasticsearch简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch简介"}},[e._v("#")]),e._v(" Elasticsearch简介"),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Ffuxiaopang.gitbooks.io%2Flearnelasticsearch",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Elasticsearch是一个实时的分布式搜索和分析引擎。它可以帮助你用前所未有的速度去处理大规模数据。")]),e._v(" "),t("p",[e._v("它可以用于全文搜索，结构化搜索以及分析，当然你也可以将这三者进行组合。")]),e._v(" "),t("p",[e._v("Elasticsearch是一个建立在全文搜索引擎 Apache Lucene(TM) 基础上的搜索引擎，可以说Lucene是当今最先进，最高效的全功能开源搜索引擎框架。")]),e._v(" "),t("p",[e._v("但是Lucene只是一个框架，要充分利用它的功能，需要使用JAVA，并且在程序中集成Lucene。需要很多的学习了解，才能明白它是如何运行的，Lucene确实非常复杂。")]),e._v(" "),t("p",[e._v("Elasticsearch使用Lucene作为内部引擎，但是在使用它做全文搜索时，只需要使用统一开发好的API即可，而不需要了解其背后复杂的Lucene的运行原理。")]),e._v(" "),t("p",[e._v("当然Elasticsearch并不仅仅是Lucene这么简单，它不但包括了全文搜索功能，还可以进行以下工作:")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("分布式实时文件存储，并将每一个字段都编入索引，使其可以被搜索。")])]),e._v(" "),t("li",[t("p",[e._v("实时分析的分布式搜索引擎。")])]),e._v(" "),t("li",[t("p",[e._v("可以扩展到上百台服务器，处理PB级别的结构化或非结构化数据。")])])]),e._v(" "),t("p",[e._v("这么多的功能被集成到一台服务器上，你可以轻松地通过客户端或者任何你喜欢的程序语言与ES的RESTful API进行交流。")]),e._v(" "),t("p",[e._v("Elasticsearch的上手是非常简单的。它附带了很多非常合理的默认值，这让初学者很好地避免一上手就要面对复杂的理论，")]),e._v(" "),t("p",[e._v("它安装好了就可以使用了，用很小的学习成本就可以变得很有生产力。")]),e._v(" "),t("p",[e._v("随着越学越深入，还可以利用Elasticsearch更多高级的功能，整个引擎可以很灵活地进行配置。可以根据自身需求来定制属于自己的Elasticsearch。")]),e._v(" "),t("p",[e._v("使用案例：")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("维基百科使用Elasticsearch来进行全文搜做并高亮显示关键词，以及提供search-as-you-type、did-you-mean等搜索建议功能。")])]),e._v(" "),t("li",[t("p",[e._v("英国卫报使用Elasticsearch来处理访客日志，以便能将公众对不同文章的反应实时地反馈给各位编辑。")])]),e._v(" "),t("li",[t("p",[e._v("StackOverflow将全文搜索与地理位置和相关信息进行结合，以提供more-like-this相关问题的展现。")])]),e._v(" "),t("li",[t("p",[e._v("GitHub使用Elasticsearch来检索超过1300亿行代码。")])]),e._v(" "),t("li",[t("p",[e._v("每天，Goldman Sachs使用它来处理5TB数据的索引，还有很多投行使用它来分析股票市场的变动。")])])]),e._v(" "),t("p",[e._v("但是Elasticsearch并不只是面向大型企业的，它还帮助了很多类似DataDog以及Klout的创业公司进行了功能的扩展。")]),e._v(" "),t("h2",{attrs:{id:"elasticsearch的优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch的优缺点"}},[e._v("#")]),e._v(" Elasticsearch的优缺点"),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fstackoverflow.com%2Fquestions%2F10213009%2Fsolr-vs-elasticsearch",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fhuangx.in%2F22%2Ftranslation-solr-vs-elasticsearch",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1),e._v(":")]),e._v(" "),t("h3",{attrs:{id:"优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[e._v("#")]),e._v(" 优点")]),e._v(" "),t("ol",[t("li",[e._v('Elasticsearch是分布式的。不需要其他组件，分发是实时的，被叫做"Push replication"。')])]),e._v(" "),t("ul",[t("li",[e._v("Elasticsearch 完全支持 Apache Lucene 的接近实时的搜索。")]),e._v(" "),t("li",[e._v("处理多租户（"),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fen.wikipedia.org%2Fwiki%2FMultitenancy",target:"_blank",rel:"noopener noreferrer"}},[e._v("multitenancy"),t("OutboundLink")],1),e._v("）不需要特殊配置，而Solr则需要更多的高级设置。")]),e._v(" "),t("li",[e._v("Elasticsearch 采用 Gateway 的概念，使得完备份更加简单。")]),e._v(" "),t("li",[e._v("各节点组成对等的网络结构，某些节点出现故障时会自动分配其他节点代替其进行工作。")])]),e._v(" "),t("h3",{attrs:{id:"缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[e._v("#")]),e._v(" 缺点")]),e._v(" "),t("ol",[t("li",[e._v("只有一名开发者（当前Elasticsearch GitHub组织已经不只如此，已经有了相当活跃的维护者）")])]),e._v(" "),t("ul",[t("li",[e._v("还不够自动（不适合当前新的Index Warmup API）")])]),e._v(" "),t("h2",{attrs:{id:"solr简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#solr简介"}},[e._v("#")]),e._v(" Solr简介"),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fzh.wikipedia.org%2Fwiki%2FSolr",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Solr（读作“solar”）是Apache Lucene项目的开源企业搜索平台。其主要功能包括全文检索、命中标示、分面搜索、动态聚类、数据库集成，以及富文本（如Word、PDF）的处理。Solr是高度可扩展的，并提供了分布式搜索和索引复制。Solr是最流行的企业级搜索引擎，Solr4 还增加了NoSQL支持。")]),e._v(" "),t("p",[e._v("Solr是用Java编写、运行在Servlet容器（如 Apache Tomcat 或Jetty）的一个独立的全文搜索服务器。 Solr采用了 Lucene Java 搜索库为核心的全文索引和搜索，并具有类似REST的HTTP/XML和JSON的API。Solr强大的外部配置功能使得无需进行Java编码，便可对其进行调整以适应多种类型的应用程序。Solr有一个插件架构，以支持更多的高级定制。")]),e._v(" "),t("p",[e._v("因为2010年 Apache Lucene 和 Apache Solr 项目合并，两个项目是由同一个Apache软件基金会开发团队制作实现的。提到技术或产品时，Lucene/Solr或Solr/Lucene是一样的。")]),e._v(" "),t("h2",{attrs:{id:"solr的优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#solr的优缺点"}},[e._v("#")]),e._v(" Solr的优缺点")]),e._v(" "),t("h3",{attrs:{id:"优点-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点-2"}},[e._v("#")]),e._v(" 优点")]),e._v(" "),t("ol",[t("li",[e._v("Solr有一个更大、更成熟的用户、开发和贡献者社区。")])]),e._v(" "),t("ul",[t("li",[e._v("支持添加多种格式的索引，如：HTML、PDF、微软 Office 系列软件格式以及 JSON、XML、CSV 等纯文本格式。")]),e._v(" "),t("li",[e._v("Solr比较成熟、稳定。")]),e._v(" "),t("li",[e._v("不考虑建索引的同时进行搜索，速度更快。")])]),e._v(" "),t("h3",{attrs:{id:"缺点-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缺点-2"}},[e._v("#")]),e._v(" 缺点")]),e._v(" "),t("ol",[t("li",[e._v("建立索引时，搜索效率下降，实时索引搜索效率不高。")])]),e._v(" "),t("h2",{attrs:{id:"elasticsearch与solr的比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch与solr的比较"}},[e._v("#")]),e._v(" Elasticsearch与Solr的比较"),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fblog.socialcast.com%2Frealtime-search-solr-vs-elasticsearch%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("当单纯的对已有数据进行搜索时，Solr更快。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2016/12/30/d5944021d5ad35ab6c62e4e56ae21e22.png?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}}),e._v("Search Fesh Index While Idle")]),e._v(" "),t("p",[e._v("当实时建立索引时, Solr会产生io阻塞，查询性能较差, Elasticsearch具有明显的优势。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2016/12/30/8c908279adf11197d4631c95915fc167.png?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}}),e._v("search_fresh_index_while_indexing")]),e._v(" "),t("p",[e._v("随着数据量的增加，Solr的搜索效率会变得更低，而Elasticsearch却没有明显的变化。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2016/12/30/931c2f218ae2c0c145279507b4eb0e7b.png?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}}),e._v("search_fresh_index_while_indexing")]),e._v(" "),t("p",[e._v("综上所述，Solr的架构不适合实时搜索的应用。")]),e._v(" "),t("h2",{attrs:{id:"实际生产环境测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实际生产环境测试"}},[e._v("#")]),e._v(" 实际生产环境测试"),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fblog.socialcast.com%2Frealtime-search-solr-vs-elasticsearch%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("下图为将搜索引擎从Solr转到Elasticsearch以后的平均查询速度有了50倍的提升。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2016/12/30/76c108b2590ef4835b114dec4a018b8a.jpg?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}}),e._v("average_execution_time")]),e._v(" "),t("h2",{attrs:{id:"elasticsearch-与-solr-的比较总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-与-solr-的比较总结"}},[e._v("#")]),e._v(" Elasticsearch 与 Solr 的比较总结")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("二者安装都很简单；")])]),e._v(" "),t("li",[t("p",[e._v("Solr 利用 Zookeeper 进行分布式管理，而 Elasticsearch 自身带有分布式协调管理功能;")])]),e._v(" "),t("li",[t("p",[e._v("Solr 支持更多格式的数据，而 Elasticsearch 仅支持json文件格式；")])]),e._v(" "),t("li",[t("p",[e._v("Solr 官方提供的功能更多，而 Elasticsearch 本身更注重于核心功能，高级功能多有第三方插件提供；")])]),e._v(" "),t("li",[t("p",[e._v("Solr 在传统的搜索应用中表现好于 Elasticsearch，但在处理实时搜索应用时效率明显低于 Elasticsearch。")])])]),e._v(" "),t("p",[e._v("Solr 是传统搜索应用的有力解决方案，但 Elasticsearch 更适用于新兴的实时搜索应用。")]),e._v(" "),t("h2",{attrs:{id:"其他基于lucene的开源搜索引擎解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他基于lucene的开源搜索引擎解决方案"}},[e._v("#")]),e._v(" 其他基于Lucene的开源搜索引擎解决方案"),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fmail-archives.apache.org%2Fmod_mbox%2Fhbase-user%2F201006.mbox%2F%253C149150.78881.qm%40web50304.mail.re2.yahoo.com%253E",target:"_blank",rel:"noopener noreferrer"}},[e._v("*"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[t("p",[e._v("直接使用 "),t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Flucene.apache.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lucene"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("说明：Lucene 是一个 JAVA 搜索类库，它本身并不是一个完整的解决方案，需要额外的开发工作。")]),e._v(" "),t("p",[e._v("优点：成熟的解决方案，有很多的成功案例。apache 顶级项目，正在持续快速的进步。庞大而活跃的开发社区，大量的开发人员。它只是一个类库，有足够的定制和优化空间：经过简单定制，就可以满足绝大部分常见的需求；经过优化，可以支持 10亿+ 量级的搜索。")]),e._v(" "),t("p",[e._v("缺点：需要额外的开发工作。所有的扩展，分布式，可靠性等都需要自己实现；非实时，从建索引到可以搜索中间有一个时间延迟，而当前的“近实时”(Lucene Near Real Time search)搜索方案的可扩展性有待进一步完善")])])]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fkatta.sourceforge.net",target:"_blank",rel:"noopener noreferrer"}},[e._v("Katta"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("说明：基于 Lucene 的，支持分布式，可扩展，具有容错功能，准实时的搜索方案。")]),e._v(" "),t("p",[e._v("优点：开箱即用，可以与 Hadoop 配合实现分布式。具备扩展和容错机制。")]),e._v(" "),t("p",[e._v("缺点：只是搜索方案，建索引部分还是需要自己实现。在搜索功能上，只实现了最基本的需求。成功案例较少，项目的成熟度稍微差一些。因为需要支持分布式，对于一些复杂的查询需求，定制的难度会比较大。")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fsvn.apache.org%2Frepos%2Fasf%2Fhadoop%2Fmapreduce%2Ftrunk%2Fsrc%2Fcontrib%2Findex%2FREADME",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hadoop contrib/index"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("说明：Map/Reduce 模式的，分布式建索引方案，可以跟 Katta 配合使用。")]),e._v(" "),t("p",[e._v("优点：分布式建索引，具备可扩展性。")]),e._v(" "),t("p",[e._v("缺点：只是建索引方案，不包括搜索实现。工作在批处理模式，对实时搜索的支持不佳。")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fsna-projects.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("LinkedIn 的开源方案"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("说明：基于 Lucene 的一系列解决方案，包括 准实时搜索 zoie ，facet 搜索实现 bobo ，机器学习算法 decomposer ，摘要存储库 krati ，数据库模式包装 sensei 等等")]),e._v(" "),t("p",[e._v("优点：经过验证的解决方案，支持分布式，可扩展，丰富的功能实现")]),e._v(" "),t("p",[e._v("缺点：与 linkedin 公司的联系太紧密，可定制性比较差")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Ftjake%2FLucandra",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lucandra"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("说明：基于 Lucene，索引存在 cassandra 数据库中")]),e._v(" "),t("p",[e._v("优点：参考 cassandra 的优点")]),e._v(" "),t("p",[e._v("缺点：参考 cassandra 的缺点。另外，这只是一个 demo，没有经过大量验证")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fakkumar%2Fhbasene",target:"_blank",rel:"noopener noreferrer"}},[e._v("HBasene"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("说明：基于 Lucene，索引存在 HBase 数据库中")]),e._v(" "),t("p",[e._v("优点：参考 HBase 的优点")]),e._v(" "),t("p",[e._v("缺点：参考 HBase 的缺点。另外，在实现中，lucene terms 是存成行，但每个 term 对应的 posting lists 是以列的方式存储的。随着单个 term 的 posting lists 的增大，查询时的速度受到的影响会非常大")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);