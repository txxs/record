(window.webpackJsonp=window.webpackJsonp||[]).push([[1149],{1541:function(s,a,t){"use strict";t.r(a);var e=t(13),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"dubbo支持不同的通信协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dubbo支持不同的通信协议"}},[s._v("#")]),s._v(" dubbo支持不同的通信协议")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190516115342103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_16,color_FFFFFF,t_70",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"dubbo协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dubbo协议"}},[s._v("#")]),s._v(" dubbo协议")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("dubbo:"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//192.168.0.1:20188")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("默认就是走dubbo协议的，单一长连接，NIO异步通信，基于hessian作为序列化协议。")]),s._v(" "),t("p",[s._v("适用的场景就是：传输数据量很小（每次请求在100kb以内），但是并发量很高")]),s._v(" "),t("p",[s._v("为了要支持高并发场景，一般是服务提供者就几台机器，但是服务消费者有上百台，可能每天调用量达到上亿次！此时用长连接是最合适的，就是跟每个服务消费者维持一个长连接就可以，可能总共就100个连接。然后后面直接基于长连接NIO异步通信，可以支撑高并发请求。")]),s._v(" "),t("p",[s._v("否则如果上亿次请求每次都是短连接的话，服务提供者会扛不住。")]),s._v(" "),t("p",[s._v("而且因为走的是单一长连接，所以传输数据量太大，会导致并发能力降低。推荐传输数据量很小，这样能支撑高并发访问。")]),s._v(" "),t("h3",{attrs:{id:"rmi协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rmi协议"}},[s._v("#")]),s._v(" rmi协议")]),s._v(" "),t("p",[s._v("走java二进制序列化，多个短连接，适合消费者和提供者数量差不多，适用于文件的传输，一般较少用")]),s._v(" "),t("h3",{attrs:{id:"hessian协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hessian协议"}},[s._v("#")]),s._v(" hessian协议")]),s._v(" "),t("p",[s._v("hessian序列化协议，多个短连接，适用于提供者数量比消费者数量还多，适用于文件的传输，一般较少用。")]),s._v(" "),t("h3",{attrs:{id:"http协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http协议"}},[s._v("#")]),s._v(" http协议")]),s._v(" "),t("p",[s._v("json序列化")]),s._v(" "),t("h3",{attrs:{id:"webservice"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webservice"}},[s._v("#")]),s._v(" webservice")]),s._v(" "),t("p",[s._v("SOAP文本序列化")]),s._v(" "),t("h1",{attrs:{id:"dubbo支持的序列化协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dubbo支持的序列化协议"}},[s._v("#")]),s._v(" dubbo支持的序列化协议")]),s._v(" "),t("p",[s._v("所以dubbo实际基于不同的通信协议，支持hessian、java二进制序列化、json、SOAP文本序列化多种序列化协议。但是hessian是其默认的序列化协议。")])])}),[],!1,null,null,null);a.default=r.exports}}]);