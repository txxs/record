(window.webpackJsonp=window.webpackJsonp||[]).push([[1129],{1530:function(s,e,a){"use strict";a.r(e);var n=a(13),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_1-概论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-概论"}},[s._v("#")]),s._v(" 1 概论")]),s._v(" "),a("p",[s._v("每当我们使用"),a("strong",[s._v("MyBatis")]),s._v("开启一次和数据库的会话，"),a("strong",[s._v("MyBatis")]),s._v("会创建出"),a("strong",[s._v("一个SqlSession对象表示一次数据库会话")])]),s._v(" "),a("p",[s._v("在对数据库的一次会话中，我们有可能会反复地执行完全相同的查询语句，如果不采取一些措施的话，每一次查询都会查询一次数据库,而我们在极短的时间内做了完全相同的查询，那么它们的结果极有可能完全相同，由于查询一次数据库的代价很大，这有可能造成很大的性能损失")]),s._v(" "),a("p",[s._v("为了解决这一问题，减少资源的浪费，"),a("strong",[s._v("MyBatis")]),s._v("会在表示会话的"),a("strong",[s._v("SqlSession")]),s._v("对象中建立一个简单的缓存，将每次查询到的结果结果缓存起来，当下次查询的时候，如果判断先前有个完全一样的查询，会直接从缓存中直接将结果取出，返回给用户")]),s._v(" "),a("p",[s._v("如下所示，MyBatis会在一次会话的表示一个SqlSession对象中创建一个本地缓存，对于每一次查询，都会尝试根据查询的条件去本地缓存中查找是否在缓存中，如果命中，就直接从缓存中取出，然后返回给用户；否则，从数据库读取数据，将查询结果存入缓存并返回给用户\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4685968-9013d680ed410c1e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),s._v("\n对于会话（Session）级别的数据缓存，我们称之为一级数据缓存，简称一级缓存")]),s._v(" "),a("h1",{attrs:{id:"_2-一级缓存是怎样组织的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-一级缓存是怎样组织的"}},[s._v("#")]),s._v(" 2 一级缓存是怎样组织的")]),s._v(" "),a("p",[s._v("由于"),a("strong",[s._v("MyBatis")]),s._v("使用"),a("strong",[s._v("SqlSession")]),s._v("对象表示一次数据库的会话，那么，对于会话级别的一级缓存也应该是在SqlSession中控制的。")]),s._v(" "),a("p",[s._v("实际上, "),a("strong",[s._v("MyBatis")]),s._v("只是一个"),a("strong",[s._v("MyBatis")]),s._v("对外的接口，"),a("strong",[s._v("SqlSession")]),s._v("将它的工作交给了"),a("strong",[s._v("Executor")]),s._v("执行器这个角色来完成，负责完成对数据库的各种操作\n当创建了一个"),a("strong",[s._v("SqlSession")]),s._v("对象时，"),a("strong",[s._v("MyBatis")]),s._v("会为这个"),a("strong",[s._v("SqlSession")]),s._v("对象创建一个新的"),a("strong",[s._v("Executor")]),s._v("执行器，而缓存信息就被维护在这个"),a("strong",[s._v("Executor")]),s._v("执行器中，"),a("strong",[s._v("MyBatis")]),s._v("将缓存和对缓存相关的操作封装成了Cache接口中\n"),a("strong",[s._v("SqlSession")]),s._v("、"),a("strong",[s._v("Executor")]),s._v("、"),a("strong",[s._v("Cache")]),s._v("之间的关系如下列类图所示：\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4685968-8b971660e6f62e0a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),s._v("\n如上述的类图所示，"),a("strong",[s._v("Executor")]),s._v("接口的实现类"),a("strong",[s._v("BaseExecutor")]),s._v("中拥有一个"),a("strong",[s._v("Cache")]),s._v("接口的实现类"),a("strong",[s._v("PerpetualCache")]),s._v("，则对于"),a("strong",[s._v("BaseExecutor")]),s._v("对象而言，它将使用"),a("strong",[s._v("PerpetualCache")]),s._v("对象维护缓存")]),s._v(" "),a("p",[s._v("综上，"),a("strong",[s._v("SqlSession")]),s._v("对象、"),a("strong",[s._v("Executor")]),s._v("对象、"),a("strong",[s._v("Cache")]),s._v("对象之间的关系如下图所示：\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4685968-1e85285dc04577a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),s._v("\n由于"),a("strong",[s._v("Session")]),s._v("级别的一级缓存实际上就是使用"),a("strong",[s._v("PerpetualCache")]),s._v("维护的，那么"),a("strong",[s._v("PerpetualCache")]),s._v("是怎样实现的呢？")]),s._v(" "),a("p",[a("strong",[s._v("PerpetualCache")]),s._v("实现原理其实很简单，其内部就是通过一个简单的**HashMap<k,v>**来实现的，没有其他的任何限制")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/**\n *    Copyright 2009-2015 the original author or authors.\n *\n *    Licensed under the Apache License, Version 2.0 (the "License");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an "AS IS" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\npackage org.apache.ibatis.cache.impl;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.concurrent.locks.ReadWriteLock;\n\nimport org.apache.ibatis.cache.Cache;\nimport org.apache.ibatis.cache.CacheException;\n\n/**\n * @author Clinton Begin\n */\npublic class PerpetualCache implements Cache {\n\n  private String id;\n\n  private Map<Object, Object> cache = new HashMap<Object, Object>();\n\n  public PerpetualCache(String id) {\n    this.id = id;\n  }\n\n  @Override\n  public String getId() {\n    return id;\n  }\n\n  @Override\n  public int getSize() {\n    return cache.size();\n  }\n\n  @Override\n  public void putObject(Object key, Object value) {\n    cache.put(key, value);\n  }\n\n  @Override\n  public Object getObject(Object key) {\n    return cache.get(key);\n  }\n\n  @Override\n  public Object removeObject(Object key) {\n    return cache.remove(key);\n  }\n\n  @Override\n  public void clear() {\n    cache.clear();\n  }\n\n  @Override\n  public ReadWriteLock getReadWriteLock() {\n    return null;\n  }\n\n  @Override\n  public boolean equals(Object o) {\n    if (getId() == null) {\n      throw new CacheException("Cache instances require an ID.");\n    }\n    if (this == o) {\n      return true;\n    }\n    if (!(o instanceof Cache)) {\n      return false;\n    }\n\n    Cache otherCache = (Cache) o;\n    return getId().equals(otherCache.getId());\n  }\n\n  @Override\n  public int hashCode() {\n    if (getId() == null) {\n      throw new CacheException("Cache instances require an ID.");\n    }\n    return getId().hashCode();\n  }\n\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br")])]),a("h1",{attrs:{id:"_3-一级缓存的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-一级缓存的生命周期"}},[s._v("#")]),s._v(" 3 一级缓存的生命周期")]),s._v(" "),a("p",[a("strong",[s._v("MyBatis")]),s._v("在开启一个数据库会话时，会 创建一个新的"),a("strong",[s._v("SqlSession")]),s._v("对象，"),a("strong",[s._v("SqlSession")]),s._v("对象中会有一个新的"),a("strong",[s._v("Executor")]),s._v("对象，"),a("strong",[s._v("Executor")]),s._v("对象中持有一个新的"),a("strong",[s._v("PerpetualCache")]),s._v("对象\n当会话结束时，"),a("strong",[s._v("SqlSession")]),s._v("对象及其内部的"),a("strong",[s._v("Executor")]),s._v("对象还有"),a("strong",[s._v("PerpetualCache")]),s._v("对象也一并释放掉")]),s._v(" "),a("p",[s._v("如果"),a("strong",[s._v("SqlSession")]),s._v("调用了"),a("strong",[s._v("close()"),a("strong",[s._v("方法，会释放掉一级缓存")]),s._v("PerpetualCache")]),s._v("对象，一级缓存将不可用")]),s._v(" "),a("p",[a("strong",[s._v("如果")]),s._v("SqlSession"),a("strong",[s._v("调用了")]),s._v("clearCache()"),a("strong",[s._v("，会清空")]),s._v("PerpetualCache**对象中的数据，但是该对象仍可使用；")]),s._v(" "),a("p",[a("strong",[s._v("SqlSession")]),s._v("中执行了任何一个"),a("strong",[s._v("update")]),s._v("操作("),a("strong",[s._v("update()、delete()、insert()")]),s._v(") ，都会清空"),a("strong",[s._v("PerpetualCache")]),s._v("对象的数据，但是该对象可以继续使用；\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4685968-3ab04ce9f7c4aa69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),s._v(" "),a("h1",{attrs:{id:"_4-一级缓存的工作流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-一级缓存的工作流程"}},[s._v("#")]),s._v(" 4 一级缓存的工作流程")]),s._v(" "),a("p",[s._v("1.对于某个查询，根据"),a("strong",[s._v("statementId,params,rowBounds")]),s._v("来构建一个"),a("strong",[s._v("key")]),s._v("值，根据这个"),a("strong",[s._v("key")]),s._v("值去缓存"),a("strong",[s._v("Cache")]),s._v("中取出对应的"),a("strong",[s._v("key")]),s._v("值存储的缓存结果")]),s._v(" "),a("p",[s._v("2 判断从"),a("strong",[s._v("Cache")]),s._v("中根据特定的"),a("strong",[s._v("key")]),s._v("值取的数据数据是否为空，即是否命中；")]),s._v(" "),a("p",[s._v("3 如果命中，则直接将缓存结果返回；")]),s._v(" "),a("p",[s._v("4 如果没命中\n4.1  去数据库中查询数据，得到查询结果；\n4.2  将key和查询到的结果分别作为"),a("strong",[s._v("key")]),s._v(","),a("strong",[s._v("value")]),s._v("对存储到"),a("strong",[s._v("Cache")]),s._v("中；\n4.3. 将查询结果返回；")]),s._v(" "),a("p",[s._v("5 结束\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4685968-edfbc8eb294475f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),s._v(" "),a("h1",{attrs:{id:"_5-cache接口的设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-cache接口的设计"}},[s._v("#")]),s._v(" 5 Cache接口的设计")]),s._v(" "),a("p",[a("strong",[s._v("MyBatis")]),s._v("定义了一个"),a("strong",[s._v("org.apache.ibatis.cache.Cache")]),s._v("接口作为其"),a("strong",[s._v("Cache")]),s._v("提供者的"),a("strong",[s._v("SPI(Service Provider Interface)")]),s._v("，所有的"),a("strong",[s._v("MyBatis")]),s._v("内部的"),a("strong",[s._v("Cache")]),s._v("缓存，都应该实现这一接口\n"),a("strong",[s._v("MyBatis")]),s._v("定义了一个"),a("strong",[s._v("PerpetualCache")]),s._v("实现类实现了"),a("strong",[s._v("Cache")]),s._v("接口，"),a("strong",[s._v("实际上，在SqlSession对象里的Executor对象内维护的")]),s._v("Cache"),a("strong",[s._v("类型实例对象，就是")]),s._v("PerpetualCache"),a("strong",[s._v("子类创建的")]),s._v(" "),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4685968-9595366891079e04.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),s._v(" "),a("strong",[s._v("Cache")]),s._v("最核心的实现其实就是一个Map，将本次查询使用的特征值作为key，将查询结果作为value存储到"),a("strong",[s._v("Map")]),s._v("中")]),s._v(" "),a("p",[s._v("现在最核心的问题出现了："),a("strong",[s._v("怎样来确定一次查询的特征值？")])]),s._v(" "),a("p",[s._v("换句话说就是："),a("strong",[s._v("怎样判断某两次查询是完全相同的查询？")])]),s._v(" "),a("p",[s._v("也可以这样说："),a("strong",[s._v("如何确定"),a("strong",[a("strong",[s._v("Cache")])]),s._v("中的key值？")])]),s._v(" "),a("p",[a("strong",[s._v("MyBatis")]),s._v("认为，对于两次查询，如果以下条件都完全一样，那么就认为它们是完全相同的查询")]),s._v(" "),a("ul",[a("li",[s._v("传入的 statementId")]),s._v(" "),a("li",[s._v("查询时要求的结果集中的结果范围 （结果的范围通过rowBounds.offset和rowBounds.limit表示）")]),s._v(" "),a("li",[s._v("这次查询所产生的最终要传递给JDBC java.sql.Preparedstatement的Sql语句字符串（boundSql.getSql()）")]),s._v(" "),a("li",[s._v("传递给java.sql.Statement要设置的参数值")])]),s._v(" "),a("p",[s._v("现在分别解释上述四个条件")]),s._v(" "),a("ul",[a("li",[s._v("传入的"),a("em",[a("strong",[s._v("statementId***，对于")]),s._v("MyBatis")]),a("em",[s._v("而言，你要使用它，必须需要一个")]),a("strong",[s._v("statementId***，它代表着你将执行什么样的")]),s._v("Sql**")]),s._v(" "),a("li",[a("strong",[s._v("MyBatis")]),s._v("自身提供的分页功能是通过"),a("strong",[s._v("RowBounds")]),s._v("来实现的，它通过***rowBounds.offset***和***rowBounds.limit***来过滤查询出来的结果集，这种分页功能是基于查询结果的再过滤，而不是进行数据库的物理分页")]),s._v(" "),a("li",[s._v("由于"),a("strong",[s._v("MyBatis")]),s._v("底层还是依赖于"),a("strong",[s._v("JDBC")]),s._v("实现的，那么，对于两次完全一模一样的查询，"),a("strong",[s._v("MyBatis")]),s._v("要保证对于底层"),a("strong",[s._v("JDBC")]),s._v("而言，也是完全一致的查询才行。而对于"),a("strong",[s._v("JDBC")]),s._v("而言，两次查询，只要传入给"),a("strong",[s._v("JDBC")]),s._v("的"),a("strong",[s._v("SQL")]),s._v("语句完全一致，传入的参数也完全一致，就认为是两次查询是完全一致的")])]),s._v(" "),a("p",[s._v("上述的第3个条件正是要求保证传递给"),a("strong",[s._v("JDBC")]),s._v("的"),a("strong",[s._v("SQL")]),s._v("语句完全一致\n第4条则是保证传递给"),a("strong",[s._v("JDBC")]),s._v("的参数也完全一致")]),s._v(" "),a("p",[s._v("举一个例子")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('  <select id="selectByCritiera" parameterType="java.util.Map" resultMap="BaseResultMap">\n        select employee_id,first_name,last_name,email,salary\n        from louis.employees\n        where  employee_id = #{employeeId}\n        and first_name= #{firstName}\n        and last_name = #{lastName}\n        and email = #{email}\n  </select>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v('如果使用上述的"'),a("strong",[s._v("selectByCritiera")]),s._v('"进行查询，那么，'),a("strong",[s._v("MyBatis")]),s._v("会将上述的"),a("strong",[s._v("SQL")]),s._v("中的**#{}**都替换成 **? **如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("        select employee_id,first_name,last_name,email,salary\n        from louis.employees\n        where  employee_id = ?\n        and first_name= ?\n        and last_name = ?\n        and email = ?\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("MyBatis")]),s._v("最终会使用上述的"),a("strong",[s._v("SQL")]),s._v("字符串创建"),a("strong",[s._v("JDBC")]),s._v("的"),a("strong",[s._v("java.sql.PreparedStatement")]),s._v("对象，对于这个"),a("strong",[s._v("PreparedStatement")]),s._v("对象，还需要对它设置参数，调用"),a("strong",[s._v("setXXX()"),a("strong",[s._v("来完成设值\n第4条的条件，就是要求对设置")]),s._v("JDBC")]),s._v("的"),a("strong",[s._v("PreparedStatement")]),s._v("的参数值也要完全一致")]),s._v(" "),a("ul",[a("li",[s._v("即3、4两条MyBatis最本质的要求\n调用JDBC的时候，传入的SQL语句要完全相同，传递给JDBC的参数值也要完全相同")])]),s._v(" "),a("p",[s._v("综上所述,CacheKey由以下条件决定：\nstatementId  + rowBounds  + 传递给JDBC的SQL  + 传递给JDBC的参数值")]),s._v(" "),a("h1",{attrs:{id:"_6-cachekey的创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-cachekey的创建"}},[s._v("#")]),s._v(" 6 CacheKey的创建")]),s._v(" "),a("p",[s._v("对于每次的查询请求，"),a("strong",[s._v("Executor")]),s._v("都会根据传递的参数信息以及动态生成的"),a("strong",[s._v("SQL")]),s._v("语句，将上面的条件根据一定的计算规则，创建一个对应的"),a("strong",[s._v("CacheKey")]),s._v("对象")]),s._v(" "),a("p",[s._v("创建"),a("strong",[s._v("CacheKey")]),s._v("的目的，就两个：")]),s._v(" "),a("ul",[a("li",[s._v("根据"),a("strong",[s._v("CacheKey")]),s._v("作为"),a("strong",[s._v("key")]),s._v(",去"),a("strong",[s._v("Cache")]),s._v(" "),a("strong",[s._v("缓存")]),s._v("中查找缓存结果；")]),s._v(" "),a("li",[s._v("如果查找缓存命中失败，则通过此"),a("strong",[s._v("CacheKey")]),s._v("作为"),a("strong",[s._v("key")]),s._v("，将"),a("strong",[s._v("从数据库查询到的结果")]),s._v("作为"),a("strong",[s._v("value")]),s._v("，组成"),a("strong",[s._v("key")]),s._v(","),a("strong",[s._v("value")]),s._v("对存储到"),a("strong",[s._v("Cache")]),s._v("缓存中")])]),s._v(" "),a("p",[a("strong",[s._v("CacheKey")]),s._v("的构建被放置到了"),a("strong",[s._v("Executor")]),s._v("接口的实现类"),a("strong",[s._v("BaseExecutor")]),s._v("中，定义如下：\n功能   :   根据传入信息构建CacheKey")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('  @Override\n  public CacheKey createCacheKey(MappedStatement ms, Object parameterObject, RowBounds rowBounds, BoundSql boundSql) {\n    if (closed) {\n      throw new ExecutorException("Executor was closed.");\n    }\n    CacheKey cacheKey = new CacheKey();\n    //1.statementId\n    cacheKey.update(ms.getId());\n    //2. rowBounds.offset\n    cacheKey.update(rowBounds.getOffset());\n    //3. rowBounds.limit\n    cacheKey.update(rowBounds.getLimit());\n    //4. SQL语句\n    cacheKey.update(boundSql.getSql());\n    //5. 将每一个要传递给JDBC的参数值也更新到CacheKey中\n    List<ParameterMapping> parameterMappings = boundSql.getParameterMappings();\n    TypeHandlerRegistry typeHandlerRegistry = ms.getConfiguration().getTypeHandlerRegistry();\n    // mimic DefaultParameterHandler logic\n    for (ParameterMapping parameterMapping : parameterMappings) {\n      if (parameterMapping.getMode() != ParameterMode.OUT) {\n        Object value;\n        String propertyName = parameterMapping.getProperty();\n        if (boundSql.hasAdditionalParameter(propertyName)) {\n          value = boundSql.getAdditionalParameter(propertyName);\n        } else if (parameterObject == null) {\n          value = null;\n        } else if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n          value = parameterObject;\n        } else {\n          MetaObject metaObject = configuration.newMetaObject(parameterObject);\n          value = metaObject.getValue(propertyName);\n        }\n        //将每一个要传递给JDBC的参数值也更新到CacheKey中\n        cacheKey.update(value);\n      }\n    }\n    if (configuration.getEnvironment() != null) {\n      // issue #176\n      cacheKey.update(configuration.getEnvironment().getId());\n    }\n    return cacheKey;\n  }\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br")])]),a("h1",{attrs:{id:"cachekey的hashcode生成算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cachekey的hashcode生成算法"}},[s._v("#")]),s._v(" CacheKey的hashcode生成算法")]),s._v(" "),a("p",[s._v("刚才已经提到，Cache接口的实现，本质上是使用的HashMap<k,v>,而构建CacheKey的目的就是为了作为HashMap<k,v>中的key值\n而HashMap是通过key值的hashcode 来组织和存储的，那么，构建CacheKey的过程实际上就是构造其hashCode的过程。下面的代码就是CacheKey的核心hashcode生成算法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("  public void update(Object object) {\n    if (object != null && object.getClass().isArray()) {\n      int length = Array.getLength(object);\n      for (int i = 0; i < length; i++) {\n        Object element = Array.get(object, i);\n        doUpdate(element);\n      }\n    } else {\n      doUpdate(object);\n    }\n  }\n\n  private void doUpdate(Object object) {\n    //1. 得到对象的hashcode;  \n    int baseHashCode = object == null ? 1 : object.hashCode();\n    //对象计数递增\n    count++;\n    checksum += baseHashCode;\n    //2. 对象的hashcode 扩大count倍\n    baseHashCode *= count;\n    //3. hashCode * 拓展因子（默认37）+拓展扩大后的对象hashCode值\n    hashcode = multiplier * hashcode + baseHashCode;\n\n    updateList.add(object);\n  }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("h1",{attrs:{id:"性能分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能分析"}},[s._v("#")]),s._v(" 性能分析")]),s._v(" "),a("h2",{attrs:{id:"_1-mybatis对会话-session-级别的一级缓存设计的比较简单-就简单地使用了hashmap来维护-并没有对hashmap的容量和大小进行限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-mybatis对会话-session-级别的一级缓存设计的比较简单-就简单地使用了hashmap来维护-并没有对hashmap的容量和大小进行限制"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1.MyBatis对会话（Session）级别的一级缓存设计的比较简单，就简单地使用了HashMap来维护，并没有对")]),s._v("HashMap"),a("strong",[s._v("的容量和大小进行限制")])]),s._v(" "),a("p",[s._v("有可能就觉得不妥了：如果我一直使用某一个"),a("strong",[s._v("SqlSession")]),s._v("对象查询数据，这样会不会导致"),a("strong",[s._v("HashMap")]),s._v("太大，而导致 java.lang.OutOfMemoryError错误啊？ 这么考虑也不无道理，不过"),a("strong",[s._v("MyBatis")]),s._v("的确是这样设计的。")]),s._v(" "),a("p",[a("strong",[s._v("MyBatis")]),s._v("这样设计也有它自己的理由")]),s._v(" "),a("ul",[a("li",[s._v("一般而言"),a("strong",[s._v("SqlSession")]),s._v("的生存时间很短\n一般情况下使用一个"),a("strong",[s._v("SqlSession")]),s._v("对象执行的操作不会太多，执行完就会消亡")]),s._v(" "),a("li",[s._v("对于某一个"),a("strong",[s._v("SqlSession")]),s._v("对象而言，只要执行"),a("strong",[s._v("update")]),s._v("操作（"),a("strong",[s._v("update、insert、delete")]),s._v("），都会将这个"),a("strong",[s._v("SqlSession")]),s._v("对象中对应的一级缓存清空掉\n所以一般情况下不会出现缓存过大，影响JVM内存空间的问题")]),s._v(" "),a("li",[s._v("可以手动地释放掉"),a("strong",[s._v("SqlSession")]),s._v("对象中的缓存")])]),s._v(" "),a("h2",{attrs:{id:"_2-一级缓存是一个粗粒度的缓存-没有更新缓存和缓存过期的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-一级缓存是一个粗粒度的缓存-没有更新缓存和缓存过期的概念"}},[s._v("#")]),s._v(" 2.  一级缓存是一个粗粒度的缓存，没有更新缓存和缓存过期的概念")]),s._v(" "),a("p",[a("strong",[s._v("MyBatis")]),s._v("的一级缓存就是使用了简单的"),a("strong",[s._v("HashMap")]),s._v("，"),a("strong",[s._v("MyBatis")]),s._v("只负责将查询数据库的结果存储到缓存中去， 不会去判断缓存存放的时间是否过长、是否过期，因此也就没有对缓存的结果进行更新这一说了,根据一级缓存的特性，在使用的过程中，我认为应该注意")]),s._v(" "),a("ul",[a("li",[s._v("对于数据变化频率很大，并且需要高时效准确性的数据要求，我们使用"),a("strong",[s._v("SqlSession")]),s._v("查询的时候，要控制好"),a("strong",[s._v("SqlSession")]),s._v("的生存时间，"),a("strong",[s._v("SqlSession")]),s._v("的生存时间越长，它其中缓存的数据有可能就越旧，从而造成和真实数据库的误差；同时对于这种情况，用户也可以手动地适时清空"),a("strong",[s._v("SqlSession")]),s._v("中的缓存；")]),s._v(" "),a("li",[s._v("对于只执行、并且频繁执行大范围的"),a("strong",[s._v("select")]),s._v("操作的"),a("strong",[s._v("SqlSession")]),s._v("对象，"),a("strong",[s._v("SqlSession")]),s._v("对象的生存时间不应过长。")])]),s._v(" "),a("p",[s._v("举例：\n下面的例子使用了同一个SqlSession指令了两次完全一样的查询，将两次查询所耗的时间打印出来，结果如下")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package com.louis.mybatis.test; \nimport java.io.InputStream;\nimport java.util.Date;import java.util.HashMap;import java.util.List;\nimport java.util.Map; \nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.apache.ibatis.executor.BaseExecutor;\nimport org.apache.ibatis.io.Resources;\nimport org.apache.ibatis.session.SqlSession;import org.apache.ibatis.session.SqlSessionFactory;import org.apache.ibatis.session.SqlSessionFactoryBuilder;\nimport org.apache.log4j.Logger;\npublic class SelectDemo1 { \t\n    private static final Logger loger = Logger.getLogger(SelectDemo1.class);\t\t\n    public static void main(String[] args) throws Exception {\t\t\n      InputStream inputStream = Resources.getResourceAsStream("mybatisConfig.xml");\t\t\n      SqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();\t\t\n      SqlSessionFactory factory = builder.build(inputStream);\t\t\t\t\n      SqlSession sqlSession = factory.openSession();\t\t\n      //3.使用SqlSession查询\t\t\n      Map<String,Object> params = new HashMap<String,Object>();\t\t      \n      params.put("min_salary",10000);\t\t\n      //a.查询工资低于10000的员工\t\t\n      Date first = new Date();\t\t\n      //第一次查询\t\t\n      List<Employee> result = sqlSession.selectList("com.louis.mybatis.dao.EmployeesMapper.selectByMinSalary",params);\t\t\n      loger.info("first quest costs:"+ (new Date().getTime()-first.getTime()) +" ms");\t\t\n      Date second = new Date();\t\t\n      result =  sqlSession.selectList("com.louis.mybatis.dao.EmployeesMapper.selectByMinSalary",params);\t\t\n      loger.info("second quest costs:"+ (new Date().getTime()-second.getTime()) +" ms");\t\n} \n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4685968-f1732590ee8f137b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),s._v("\n由上面的结果你可以看到，第一次查询耗时464ms，而第二次查询耗时不足1ms,这是因为第一次查询后，MyBatis会将查询结果存储到SqlSession对象的缓存中，当后来有完全相同的查询时，直接从缓存中将结果取出。")]),s._v(" "),a("p",[s._v("对上面的例子做一下修改：在第二次调用查询前，对参数 HashMap类型的params多增加一些无关的值进去，然后再执行，看查询结果\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4685968-194994a06b8c4d8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),s._v("\n从结果上看，虽然第二次查询时传递的params参数不一致，但还是从一级缓存中取出了第一次查询的缓存。\n "),a("strong",[s._v("MyBatis认为的完全相同的查询，不是指使用sqlSession查询时传递给算起来Session的所有参数值完完全全相同，你只要保证statementId，rowBounds,最后生成的SQL语句，以及这个SQL语句所需要的参数完全一致就可以了。")])])])}),[],!1,null,null,null);e.default=t.exports}}]);