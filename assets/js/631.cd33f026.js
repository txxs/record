(window.webpackJsonp=window.webpackJsonp||[]).push([[631],{1022:function(e,s,t){"use strict";t.r(s);var a=t(13),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_1-为什么要用通配符和边界"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么要用通配符和边界"}},[e._v("#")]),e._v(" "),t("strong",[e._v("1 为什么要用通配符和边界？")])]),e._v(" "),t("p",[e._v("使用泛型的过程中，经常出现一种很别扭的情况\n比如我们有"),t("em",[e._v("Fruit")]),e._v("类，和它的派生类"),t("em",[e._v("Apple")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("class Fruit {}\nclass Apple extends Fruit {}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("然后有一个最简单的容器："),t("em",[e._v("Plate")]),e._v("类\n盘子里可以放一个泛型的“"),t("em",[e._v("东西")]),e._v("”\n我们可以对这个东西做最简单的“"),t("em",[e._v("放")]),e._v("”和“"),t("em",[e._v("取")]),e._v("”的动作：*set( )"),t("em",[e._v("和")]),e._v("get( )*方法")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("class Plate<T>{\n    private T item;\n    public Plate(T t){item=t;}\n    public void set(T t){item=t;}\n    public T get(){return item;}\n}\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("现定义一个“"),t("em",[e._v("水果盘")]),e._v("”，逻辑上水果盘当然可以装苹果")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Plate<Fruit> p = new Plate<Apple>(new Apple());\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("但实际上Java编译器不允许这个操作。会报错，“"),t("em",[e._v("装苹果的盘子")]),e._v("”无法转换成“"),t("em",[e._v("装水果的盘子")]),e._v("”。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("error: incompatible types: Plate<Apple> cannot be converted to Plate<Fruit>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("实际上，编译器认定的逻辑是这样的：")]),e._v(" "),t("ul",[t("li",[e._v("苹果 "),t("em",[t("strong",[e._v("IS-A")])]),e._v(" 水果")]),e._v(" "),t("li",[e._v("装苹果的盘子 "),t("em",[t("strong",[e._v("NOT-IS-A")])]),e._v(" 装水果的盘子")])]),e._v(" "),t("p",[e._v("所以，就算容器里装的东西之间有继承关系，但"),t("code",[e._v("容器之间是没有继承关系")]),e._v("\n所以我们不可以把"),t("em",[e._v("Plate"),t("Apple",[t("em",[e._v("的引用传递给")]),e._v("Plate"),t("Fruit")],1)],1)]),e._v(" "),t("p",[e._v("为了让泛型用起来更舒服，Sun的大师们就想出了<? extends T>和<? super T>的办法，来让”"),t("em",[e._v("水果盘子")]),e._v("“和”"),t("em",[e._v("苹果盘子")]),e._v("“之间发生正当关系")]),e._v(" "),t("h1",{attrs:{id:"_2-上界"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-上界"}},[e._v("#")]),e._v(" "),t("strong",[e._v("2 上界")])]),e._v(" "),t("p",[e._v("下面就是上界通配符（Upper Bounds Wildcards）")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Plate<？ extends Fruit>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("一个能放水果以及一切是水果派生类的盘子")]),e._v("\n再直白点就是：**啥水果都能放的盘子\n**这和我们人类的逻辑就比较接近了\nPlate<？ extends Fruit>和Plate"),t("Apple",[e._v("最大的区别就是：**Plate<？ extends Fruit>是Plate"),t("Fruit",[e._v("及Plate"),t("Apple",[e._v("的基类\n**直接的好处就是，我们可以用“"),t("em",[e._v("苹果盘")]),e._v("”给“"),t("em",[e._v("水果盘")]),e._v("”赋值了")])],1)],1)],1),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Plate<? extends Fruit> p = new Plate<Apple>(new Apple());\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("再扩展一下，食物分成水果和肉类，水果有苹果和香蕉，肉类有猪肉和牛肉，苹果还有两种青苹果和红苹果")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("//Lev 1\nclass Food{}\n\n//Lev 2\nclass Fruit extends Food{}\nclass Meat extends Food{}\n\n//Lev 3\nclass Apple extends Fruit{}\nclass Banana extends Fruit{}\nclass Pork extends Meat{}\nclass Beef extends Meat{}\n\n//Lev 4\nclass RedApple extends Apple{}\nclass GreenApple extends Apple{}\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br")])]),t("p",[e._v("在这个体系中，上界通配符"),t("code",[e._v("Plate<？ extends Fruit>")]),e._v("覆盖下图中蓝色的区域\n"),t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4685968-d81db3fcf40a62bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),e._v(" "),t("h1",{attrs:{id:"_3-下界"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-下界"}},[e._v("#")]),e._v(" "),t("strong",[e._v("3 下界")])]),e._v(" "),t("p",[e._v("相对应的下界通配符（Lower Bounds Wildcards）")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Plate<？ super Fruit>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("表达的就是相反的概念："),t("strong",[e._v("一个能放水果以及一切是水果基类的盘子")]),e._v("\nPlate<？ super Fruit>是Plate"),t("Fruit",[e._v("的基类，但不是Plate"),t("Apple",[e._v("的基类\n对应刚才那个例子，Plate<？ super Fruit>覆盖下图中红色的区域。\n"),t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4685968-d58e1ca63eb102fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})])],1)],1),e._v(" "),t("h1",{attrs:{id:"_4-上下界通配符的副作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-上下界通配符的副作用"}},[e._v("#")]),e._v(" "),t("strong",[e._v("4 上下界通配符的副作用")])]),e._v(" "),t("p",[e._v("边界让Java不同泛型之间的转换更容易了。但不要忘记，这样的转换也有一定的副作用。那就是容器的部分功能可能失效。")]),e._v(" "),t("p",[e._v("还是以刚才的Plate为例。我们可以对盘子做两件事，往盘子里set( )新东西，以及从盘子里get( )东西")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("class Plate<T>{\n    private T item;\n    public Plate(T t){item=t;}\n    public void set(T t){item=t;}\n    public T get(){return item;}\n}\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h2",{attrs:{id:"_4-1-上界-extends-t-不能往里存-只能往外取"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-上界-extends-t-不能往里存-只能往外取"}},[e._v("#")]),e._v(" "),t("strong",[e._v("4.1 上界<? extends T>不能往里存，只能往外取")])]),e._v(" "),t("p",[t("strong",[e._v("<? extends Fruit>会使往盘子里放东西的set( )方法失效\n但取东西get( )方法还有效")])]),e._v(" "),t("p",[e._v("比如下面例子里两个set()方法，插入Apple和Fruit都报错")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Plate<? extends Fruit> p = new Plate<Apple>(new Apple());\n\n//不能存入任何元素\np.set(new Fruit());    //Error\np.set(new Apple());    //Error\n\n//读取出来的东西只能存放在Fruit或它的基类里。\nFruit newFruit1=p.get();\nObject newFruit2=p.get();\nApple newFruit3=p.get();    //Error\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("p",[e._v("编译器只知道容器内是"),t("code",[e._v("Fruit或者它的派生类")]),e._v("，但"),t("code",[e._v("具体是什么类型不知道")]),e._v("\n可能是Fruit？可能是Apple？也可能是Banana，RedApple，GreenApple？编译器在看到后面用Plate"),t("Apple",[e._v("赋值以后，盘子里没有被标上有“苹果”。而是标上一个占位符："),t("strong",[e._v("capture#1")]),e._v("，来表示捕获一个Fruit或Fruit的子类，具体是什么类不知道，代号capture#1\n然后无论是想往里插入Apple或者Meat或者Fruit编译器都不知道能不能和这个capture#1匹配，所以就都不允许")])],1),e._v(" "),t("p",[e._v("所以通配符<?>和类型参数"),t("T",[e._v("的区别就在于，对编译器来说"),t("strong",[e._v("所有的T都代表同一种类型")]),e._v("\n比如下面这个泛型方法里，三个T都指代同一个类型，要么都是String，要么都是Integer...")])],1),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("public <T> List<T> fill(T... t);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("但通配符<?>没有这种约束，Plate<?>单纯的就表示："),t("strong",[e._v("盘子里放了一个东西，是什么我不知道")])]),e._v(" "),t("h2",{attrs:{id:"_4-2-下界-super-t-不影响往里存-但往外取只能放在object对象里"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-下界-super-t-不影响往里存-但往外取只能放在object对象里"}},[e._v("#")]),e._v(" "),t("strong",[e._v("4.2 下界<? super T>不影响往里存，但往外取只能放在Object对象里")])]),e._v(" "),t("p",[t("strong",[e._v("使用下界<? super Fruit>会使从盘子里取东西的get( )方法部分失效，只能存放到Object对象里。set( )方法正常。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Plate<? super Fruit> p=new Plate<Fruit>(new Fruit());\n\n//存入元素正常\np.set(new Fruit());\np.set(new Apple());\n\n//读取出来的东西只能存放在Object类里。\nApple newFruit3=p.get();    //Error\nFruit newFruit1=p.get();    //Error\nObject newFruit2=p.get();\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("p",[e._v("因为下界规定了元素的最小粒度的下限，实际上是放松了容器元素的类型控制\n既然元素是Fruit的基类，那往里存粒度比Fruit小的都可以\n但往外读取元素就费劲了，只有所有类的基类Object对象才能装下。但这样的话，"),t("code",[e._v("元素的类型信息就全部丢失")])]),e._v(" "),t("h1",{attrs:{id:"_5-pecs原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-pecs原则"}},[e._v("#")]),e._v(" "),t("strong",[e._v("5  PECS原则")])]),e._v(" "),t("p",[e._v("最后看一下什么是"),t("strong",[e._v("PECS（Producer Extends Consumer Super）原则")]),e._v(",已经很好理解了")]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("频繁往外读取内容的，适合用上界Extends")])]),e._v(" "),t("li",[t("strong",[e._v("经常往里插入的，适合用下界Super")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);