(window.webpackJsonp=window.webpackJsonp||[]).push([[1214],{1613:function(t,_,v){"use strict";v.r(_);var a=v(13),s=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"_1-mysql锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-mysql锁"}},[t._v("#")]),t._v(" 1 MySQL锁")]),t._v(" "),v("h2",{attrs:{id:"_1-1-表锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-表锁"}},[t._v("#")]),t._v(" 1.1 表锁")]),t._v(" "),v("ul",[v("li",[t._v("开销小，加锁快")]),t._v(" "),v("li",[t._v("不会出现死锁")]),t._v(" "),v("li",[t._v("锁定粒度大，发生锁冲突的概率最高，并发度最低")])]),t._v(" "),v("h2",{attrs:{id:"_1-2-行锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-行锁"}},[t._v("#")]),t._v(" 1.2 行锁")]),t._v(" "),v("ul",[v("li",[t._v("开销大，加锁慢")]),t._v(" "),v("li",[t._v("会出现死锁")]),t._v(" "),v("li",[t._v("锁定粒度小，发生锁冲突的概率最低，并发度最高")])]),t._v(" "),v("h2",{attrs:{id:"_1-3-页锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-页锁"}},[t._v("#")]),t._v(" 1.3 页锁")]),t._v(" "),v("ul",[v("li",[t._v("开销和加锁时间介于表锁和行锁之间")]),t._v(" "),v("li",[t._v("会出现死锁")]),t._v(" "),v("li",[t._v("锁定粒度介于表锁和行锁之间，并发度一般")])]),t._v(" "),v("h2",{attrs:{id:"_1-4-引擎与锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-引擎与锁"}},[t._v("#")]),t._v(" 1.4 引擎与锁")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("MyISAM")]),t._v("和MEMORY"),v("code",[t._v("支持表锁")])]),t._v(" "),v("li",[t._v("BDB支持页锁,也支持表锁")]),t._v(" "),v("li",[v("code",[t._v("Innodb")]),t._v("既支持行锁，也支持表锁，"),v("code",[t._v("默认行锁")])])]),t._v(" "),v("h2",{attrs:{id:"_1-5-查询表锁争用情况"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-查询表锁争用情况"}},[t._v("#")]),t._v(" 1.5 查询表锁争用情况")]),t._v(" "),v("p",[t._v("检查"),v("code",[t._v("table_locks_waited")]),t._v("和"),v("code",[t._v("table_locks_immediate")]),t._v("状态变量分析")]),t._v(" "),v("ul",[v("li",[t._v("table_locks_immediate : 可以立即获取锁的次数")]),t._v(" "),v("li",[t._v("table_locks_waited : 不能立即获取锁，需要等待锁的次数")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzQ2ODU5NjgtMzY5NmUyN2ZmYTk3YjBkZg",alt:"image"}})]),t._v(" "),v("p",[v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzQ2ODU5NjgtNDZiZDg5NzI2MmNmZWExZQ",alt:"image"}})]),t._v(" "),v("blockquote",[v("p",[t._v("table_locks_waited 的值越高，则说明存在严重的表级锁的争用情况")])]),t._v(" "),v("h1",{attrs:{id:"_2-myisam的表锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-myisam的表锁"}},[t._v("#")]),t._v(" 2 MyISAM的表锁")]),t._v(" "),v("p",[t._v("ＭySQL的表锁有两种模式")]),t._v(" "),v("ul",[v("li",[t._v("表共享读锁（Table Read Lock）")]),t._v(" "),v("li",[t._v("表独占写锁（Table Write Lock）")])]),t._v(" "),v("h2",{attrs:{id:"_2-1-表锁兼容性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-表锁兼容性"}},[t._v("#")]),t._v(" 2.1 表锁兼容性")]),t._v(" "),v("p",[t._v("锁模式的兼容：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("是否兼容")]),t._v(" "),v("th",[t._v("请求none")]),t._v(" "),v("th",[t._v("请求读锁")]),t._v(" "),v("th",[t._v("请求写锁")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("当前处于读锁")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("否")])]),t._v(" "),v("tr",[v("td",[t._v("当前处于写锁")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("否")]),t._v(" "),v("td",[t._v("否")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("ＭyISAM表的读操作不会阻塞其他用户对同一表的读请求，但会阻塞对同一表的写请求。\nＭyISAM表的写操作会阻塞其他用户对同一表的读和写请求。\nＭyISAM表的读和写操作之间，以及写和写操作之间是串行的。即当某一线程获得对一个表的写锁后，只有持有锁的线程可对表进行更新，其他线程的读、写操作都会阻塞，直到锁被释放为止。")])]),t._v(" "),v("h2",{attrs:{id:"_2-2-如何加表锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-如何加表锁"}},[t._v("#")]),t._v(" 2.2 如何加表锁")]),t._v(" "),v("p",[t._v("对于 "),v("strong",[t._v("MyISAM")]),t._v(" 引擎")]),t._v(" "),v("ul",[v("li",[t._v("执行"),v("code",[t._v("select")]),t._v("前，会自动给涉及的所有表加 "),v("strong",[t._v("读")])]),t._v(" "),v("li",[t._v("执行更新（update,delete,insert)会自动给涉及到的表加 "),v("strong",[t._v("写")])])]),t._v(" "),v("p",[t._v("无需直接显式用"),v("code",[t._v("lock table")]),t._v("命令。")]),t._v(" "),v("p",[t._v("对于给MyISAM显式加锁，"),v("strong",[t._v("一般是为了模拟事务操作，实现对某一个时间点多个表一致性读取")])]),t._v(" "),v("h3",{attrs:{id:"_2-2-1-实例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-实例"}},[t._v("#")]),t._v(" 2.2.1  实例")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("订单表 "),v("strong",[t._v("orders")]),t._v("\n记录各订单的总金额"),v("code",[t._v("total")])])]),t._v(" "),v("li",[v("p",[t._v("订单明细表 "),v("strong",[t._v("order_detail")]),t._v("\n记录各订单每一产品的金额小计"),v("code",[t._v("subtotal")])])])]),t._v(" "),v("p",[t._v("假设需检查这两个表的金额合计是否相符，可能执行如下SQL")]),t._v(" "),v("div",{staticClass:"language-sql line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("total"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" orders"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("subtotal"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" order_detail"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br")])]),v("p",[t._v("如果不先给这两个表加锁，就可能产生错误的结果：因为第一条语句执行过程中，"),v("code",[t._v("order_detail")]),t._v("表可能已发生改变：\n因此,正确写法应该如下")]),t._v(" "),v("div",{staticClass:"language-sql line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Lock")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),t._v(" orders "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("read")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" order_detail "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("read")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("total"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" orders"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("subtotal"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" order_detail"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Unlock")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br")])]),v("p",[t._v("在"),v("code",[t._v("Lock tables")]),t._v("时加的 "),v("strong",[t._v("local")]),t._v(" 选项，以满足MyISAM表并发插入时，允许其他用户在表尾插入记录。")]),t._v(" "),v("p",[t._v("在用"),v("code",[t._v("Lock tables")]),t._v("给表显式加表锁时，必须同时取得所有涉及表的锁，并且MySQL不支持锁升级：即在执行"),v("code",[t._v("Lock tables")]),t._v("后，只能访问显式加锁的这些表，不能访问未加锁的表；\n同时，如果加的是读锁，那么只能执行查询，而不能执行更新。在自动加锁情况下也这样，MySQL会一次获得SQL语句所需要的全部锁，这也正是MyISAM表不会死锁的原因。")]),t._v(" "),v("h2",{attrs:{id:"_2-3-tips"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-tips"}},[t._v("#")]),t._v(" 2.3  tips")]),t._v(" "),v("p",[t._v("当使用"),v("code",[t._v("lock tables")]),t._v("时,不仅需要一次锁定用到的所有表\n且同一表在SQL语句中出现多少次,就要通过与SQL语句中别名锁多少次")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("lock table actor read\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[t._v("会提示错误")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("select a.first_name.....\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[t._v("需要对别名分别锁定")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("lock table actor as a read,actor as b read;\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("h1",{attrs:{id:"_3-myisam的并发锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-myisam的并发锁"}},[t._v("#")]),t._v(" 3 MyISAM的并发锁")]),t._v(" "),v("p",[t._v("在一定条件下，"),v("code",[t._v("MyISAM")]),t._v("也支持并发插入和读取")]),t._v(" "),v("h2",{attrs:{id:"_3-1-系统变量-concurrent-insert"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-系统变量-concurrent-insert"}},[t._v("#")]),t._v(" 3.1 系统变量 : concurrent_insert")]),t._v(" "),v("p",[t._v("控制其并发插入的行为,其值分别可以为")]),t._v(" "),v("ul",[v("li",[t._v("0 不允许并发插入,所有插入对表加互斥锁")]),t._v(" "),v("li",[t._v("1 只要表中无空洞,就允许并发插入.\nMyISAM允许在一个读表的同时，另一个进程从表尾插入记录(MySQL的默认设置)")]),t._v(" "),v("li",[t._v("2 无论MyISAM表中有无空洞,都强制在表尾并发插入记录\n若无读线程,新行插入空洞中")])]),t._v(" "),v("p",[t._v("可以利用"),v("code",[t._v("MyISAM")]),t._v("的并发插入特性，来解决应用中对同表查询和插入的锁争用\n例如,将"),v("code",[t._v("concurrent_insert")]),t._v("系统变量设为2，总是允许并发插入;\n同时,通过定期在系统空闲时段执行OPTIONMIZE TABLE语句来整理空间碎片，收到因删除记录而产生的中间空洞")]),t._v(" "),v("p",[v("code",[t._v("删除操作")]),t._v("不会重整整个表,只是把 行 标记为删除,在表中留下"),v("code",[t._v("空洞")]),t._v("\nMyISAM倾向于在可能时填满这些空洞,插入时就会重用这些空间,无空洞则把新行插到表尾")]),t._v(" "),v("h2",{attrs:{id:"_3-2-myisam的锁调度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-myisam的锁调度"}},[t._v("#")]),t._v(" 3.2  MyISAM的锁调度")]),t._v(" "),v("p",[v("code",[t._v("MyISAM")]),t._v("的读和写锁互斥,读操作串行的")]),t._v(" "),v("ul",[v("li",[t._v("一个进程请求某个"),v("code",[t._v("MyISAM")]),t._v("表的读锁,同时另一个进程也请求同表的写锁，MySQL如何处理呢？\n写进程先获得锁!!!\n不仅如此,即使读进程先请求先到锁等待队列,写请求后到,写锁也会插到读请求之前!!!")])]),t._v(" "),v("p",[t._v("这是因为MySQL认为"),v("code",[t._v("写请求一般比读请求重要")]),t._v("\n这也正是"),v("code",[t._v("MyISAM")]),t._v("表"),v("code",[t._v("不适合有大量更新 / 查询")]),t._v("操作应用的原因\n大量的更新操作会造成查询操作很难获得读锁,从而可能永远阻塞")]),t._v(" "),v("p",[t._v("幸好,我们可以通过一些设置来调节"),v("code",[t._v("MyISAM")]),t._v("的调度行为")]),t._v(" "),v("ul",[v("li",[t._v("指定启动参数"),v("code",[t._v("low-priority-updates")]),t._v("\n使MyISAM引擎默认给予读请求以优先权利")]),t._v(" "),v("li",[t._v("执行命令"),v("code",[t._v("SET LOW_PRIORITY_UPDATES=1")]),t._v("\n使该连接发出的更新请求优先级降低")]),t._v(" "),v("li",[t._v("指定INSERT、UPDATE、DELETE语句的"),v("code",[t._v("LOW_PRIORITY")]),t._v("属性\n降低该语句的优先级")])]),t._v(" "),v("p",[t._v("虽然上面3种方法都是要么更新优先，要么查询优先，但还是可以用其来解决查询相对重要的应用（如用户登录系统）中，读锁等待严重的问题")]),t._v(" "),v("p",[t._v("另外，MySQL也提供了一种折中的办法来调节读写冲突;\n即给系统参数"),v("code",[t._v("max_write_lock_count")]),t._v("设置一个合适的值;\n当一个表的读锁达到这个值后，MySQL便暂时将写请求的优先级降低，给读进程一定获得锁的机会")]),t._v(" "),v("h1",{attrs:{id:"_4-innodb锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-innodb锁"}},[t._v("#")]),t._v(" 4 InnoDB锁")]),t._v(" "),v("p",[t._v("InnoDB与MyISAM的最大不同有两点")]),t._v(" "),v("ul",[v("li",[t._v("支持事务")]),t._v(" "),v("li",[t._v("采用行锁")])]),t._v(" "),v("p",[t._v("行级锁和表级锁本来就有许多不同之处，另外，事务的引入也带来了一些问题。")]),t._v(" "),v("h3",{attrs:{id:"查看innodb行锁争用情况"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#查看innodb行锁争用情况"}},[t._v("#")]),t._v(" 查看Innodb行锁争用情况")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTI3YzQzMDJiMzllYjY5MDQucG5n",alt:""}}),t._v(" "),v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTNiMjVjZmM1ZWVhNzg0Y2MucG5n",alt:""}})]),t._v(" "),v("blockquote",[v("p",[t._v("如果发现争用比较严重，如"),v("code",[t._v("Innodb_row_lock_waits")]),t._v("和"),v("code",[t._v("Innodb_row_lock_time_avg")]),t._v("的值比较高")])]),t._v(" "),v("h3",{attrs:{id:"查询information-schema相关表来查看锁情况"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#查询information-schema相关表来查看锁情况"}},[t._v("#")]),t._v(" 查询information_schema相关表来查看锁情况")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTgwNmRkNGMwZjI3NGQ3MmEucG5n",alt:""}})]),t._v(" "),v("p",[v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LThlYjgyYmU2NThkYzQwMTkucG5n",alt:""}}),t._v(" "),v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTJlYzI1MGVmNjJmNDhkYWYucG5n",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"设置innodb-monitors"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设置innodb-monitors"}},[t._v("#")]),t._v(" 设置Innodb monitors")]),t._v(" "),v("p",[t._v("进一步观察发生锁冲突的表，数据行等，并分析锁争用的原因\n"),v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LWM4OTk1MDM0ODQ5MzNiNTcucG5n",alt:""}}),t._v(" "),v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTAwMTA3MGU1NDIwNWM4ZTEucG5n",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"停止监视器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#停止监视器"}},[t._v("#")]),t._v(" 停止监视器")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTQxYzVlMzc2MmE3MWU1YWQucG5n",alt:"drop table innodb_monitor"}})]),t._v(" "),v("p",[t._v("默认情况每15秒会向日志中记录监控的内容;\n如果长时间打开会导致.err文件变得非常巨大;\n所以确认原因后,要删除监控表关闭监视器,或者通过使用--console选项来启动服务器以关闭写日志功能")]),t._v(" "),v("h2",{attrs:{id:"_4-4-innodb的行锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-innodb的行锁"}},[t._v("#")]),t._v(" 4.4  InnoDB的行锁")]),t._v(" "),v("p",[t._v("InnoDB支持以下两种类型的"),v("code",[t._v("行锁")])]),t._v(" "),v("ul",[v("li",[t._v("共享锁（读锁S）\n若事务 T 对数据对象 A 加了 S 锁;\n则事务 T 可以读 A 但不能修改 A;\n其它事务只能再对它加 S 锁,而不能加 X 锁,直到 T 释放 A 上的 S 锁;\n这保证了,其他事务可以读 A，但在事务 T 释放 S 锁之前，不能对 A 做任何修改操作.")]),t._v(" "),v("li",[t._v("排他锁（写锁X）\n若事务 T 对数据对象A加 X 锁;\n事务 T 可以读 A 也可以修改 A;\n其他事务不能对 A 加任何锁,直到 T 释放 A 上的锁;\n这保证了,其他事务在 T 释放 A 上的锁之前不能再读取和修改 A .")])]),t._v(" "),v("blockquote",[v("p",[t._v("MySQL InnoDB默认行级锁\n行级锁都是基于索引的,若一条SQL语句用不到索引是不会使用行级锁的,会使用表级锁把整张表锁住")])]),t._v(" "),v("p",[t._v("为了允许行/表锁共存，实现多粒度锁，InnoDB还有两种内部使用的：")]),t._v(" "),v("h3",{attrs:{id:"意向锁-intention-locks"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#意向锁-intention-locks"}},[t._v("#")]),t._v(" 意向锁（Intention Locks）")]),t._v(" "),v("p",[t._v("这两种意向锁都是表级锁：")]),t._v(" "),v("ul",[v("li",[t._v("意向共享锁（IS）\n事务打算给数据行共享锁，事务在给一个数据行加共享锁前必须先取得该表的IS锁")]),t._v(" "),v("li",[t._v("意向排他锁（IX）\n事务打算给数据行加排他锁，事务在给一个数据行加排他锁前必须先取得该表的IX锁")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("当前锁/是否兼容/请求锁")]),t._v(" "),v("th",[t._v("X")]),t._v(" "),v("th",[t._v("IX")]),t._v(" "),v("th",[t._v("S")]),t._v(" "),v("th",[t._v("IS")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("X")]),t._v(" "),v("td",[t._v("冲突")]),t._v(" "),v("td",[t._v("冲突")]),t._v(" "),v("td",[t._v("冲突")]),t._v(" "),v("td",[t._v("冲突")])]),t._v(" "),v("tr",[v("td",[t._v("IX")]),t._v(" "),v("td",[t._v("冲突")]),t._v(" "),v("td",[t._v("兼容")]),t._v(" "),v("td",[t._v("冲突")]),t._v(" "),v("td",[t._v("兼容")])]),t._v(" "),v("tr",[v("td",[t._v("S")]),t._v(" "),v("td",[t._v("冲突")]),t._v(" "),v("td",[t._v("冲突")]),t._v(" "),v("td",[t._v("兼容")]),t._v(" "),v("td",[t._v("兼容")])]),t._v(" "),v("tr",[v("td",[t._v("IS")]),t._v(" "),v("td",[t._v("冲突")]),t._v(" "),v("td",[t._v("兼容")]),t._v(" "),v("td",[t._v("兼容")]),t._v(" "),v("td",[t._v("兼容")])])])]),t._v(" "),v("p",[t._v("如果一个事务请求的锁模式与当前锁兼容，InnoDB就请求的锁授予该事务，反之如果两者不兼容，该事务就要等待锁释放")]),t._v(" "),v("p",[t._v("意向锁是InnoDB自动加的，不需用户干预.\n对于UPDATE、DELETE和INSERT语句，InnoDB会自动给涉及及数据集加排他锁（Ｘ）;\n对于普通SELECT语句，InnoDB不会加任何锁.")]),t._v(" "),v("p",[t._v("对于SELECT语句,可以通过以下语句显式地给记录加读/写锁")]),t._v(" "),v("ul",[v("li",[t._v("共享锁（Ｓ）\n"),v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LWE4Mjg0M2FiNTQ5MWM2YzgucG5n",alt:""}})])]),t._v(" "),v("ul",[v("li",[t._v("排他锁（X）\n"),v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTcyMjMzNzUyNTU5M2FhYWYucG5n",alt:""}}),t._v("\n共享锁语句主要用在需要数据依存关系时确认某行记录是否存在;\n并确保没有人对这个记录UPDATE或DELETE.\n但如果当前事务也需要对该记录进行更新,则很有可能造成死锁;\n对于锁定行记录后需要进行更新操作的应用,应该使用排他锁语句.")])]),t._v(" "),v("p",[t._v("此外还有自增锁（auto-in）和 lock tables/DDL等表级锁\n查看锁：")]),t._v(" "),v("div",{staticClass:"language-sql line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNODB")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("STATUS")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("h2",{attrs:{id:"_4-5-实例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-实例"}},[t._v("#")]),t._v(" 4.5 实例")]),t._v(" "),v("h3",{attrs:{id:"_4-5-1-innodb共享锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-1-innodb共享锁"}},[t._v("#")]),t._v(" 4.5.1  Innodb共享锁")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("session_1")]),t._v(" "),v("th",[t._v("session_2")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("set autocommit=0,select * from actor where id =1")]),t._v(" "),v("td",[t._v("set autocommit=0,select * from actor where id =1")])]),t._v(" "),v("tr",[v("td",[t._v("当前seesion对id为1的记录加入共享锁 select * from actor where id =1 lock in share mode")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("其他seesion仍然可以查询，并对该记录加入 select * from actor where id =1 lock in share mode")])]),t._v(" "),v("tr",[v("td",[t._v("当前session对锁定的记录进行更新，等待锁 update。。。where id=1")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("当前session对锁定记录进行更新，则会导致死锁退出 update。。。where id=1")])]),t._v(" "),v("tr",[v("td",[t._v("获得锁，更新成功")]),t._v(" "),v("td")])])]),t._v(" "),v("h3",{attrs:{id:"_4-5-2-innodb排他锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-2-innodb排他锁"}},[t._v("#")]),t._v(" 4.5.2  Innodb排他锁")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("session_1")]),t._v(" "),v("th",[t._v("session_2")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("set autocommit=0,select * from actor where id =1")]),t._v(" "),v("td",[t._v("set autocommit=0,select * from actor where id =1")])]),t._v(" "),v("tr",[v("td",[t._v("当前seesion对id为1的记录加入for update 共享锁 select * from actor where id =1 for update")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("可查询该记录select *from actor where id =1,但是不能再记录共享锁，会等待获得锁select *from actor where id =1 for update")])]),t._v(" "),v("tr",[v("td",[t._v("更新后释放锁 update。。。 commit")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("其他session，获得锁，得到其他seesion提交的记录")])])])]),t._v(" "),v("h2",{attrs:{id:"_4-6-行锁的实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-行锁的实现"}},[t._v("#")]),t._v(" 4.6 行锁的实现")]),t._v(" "),v("p",[t._v("行锁是通过给索引上的索引项加锁来实现\n如果没有索引，InnoDB将通过隐藏的聚簇索引来对记录加锁")]),t._v(" "),v("ul",[v("li",[t._v("Record Locks:对索引项加锁")]),t._v(" "),v("li",[t._v("Gap lock:对索引项之的“间隙“，第一条记录前的”间隙“，或最后一条记录后的”间隙“，加锁")]),t._v(" "),v("li",[t._v("Next-key lock：前两种的组合，对记录及其前面的间隙加锁")])]),t._v(" "),v("p",[t._v("行锁实现特点意味着：\n"),v("code",[t._v("如果不通过索引条件检索数据,那么Innodb将对表的所有记录加锁，和表锁一样")])]),t._v(" "),v("h3",{attrs:{id:"间隙锁-next-key锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#间隙锁-next-key锁"}},[t._v("#")]),t._v(" 间隙锁（Next-Key锁）")]),t._v(" "),v("p",[t._v("当我们用范围条件而不是相等条件检索数据,并请求共享或排他锁时,InnoDB会给符合条件的已有数据的索引项加锁;\n对于键值在条件范围内但并不存在的记录,叫做“间隙(GAP)”,InnoDB也会对这个“间隙”加锁,这种锁机制就是所谓的间隙锁（Next-Key锁）.")]),t._v(" "),v("p",[t._v("举例来说，假如emp表中只有101条记录，其empid的值分别是1,2,...,100,101，下面的SQL：\nInnoDB 不仅会对符合条件的 empid 值为 101 的记录加锁;\n也会对 "),v("code",[t._v("empid")]),t._v("大于"),v("code",[t._v("101")]),t._v("（这些记录并不存在）的“间隙”加锁\n"),v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LWNiNDY5YzhiNWNlN2VmZGMucG5n",alt:""}})]),t._v(" "),v("h4",{attrs:{id:"作用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),v("ul",[v("li",[t._v("防止幻读,以满足相关隔离级别的要求\n对于上例,若不使用间隙锁,如果其他事务插入 empid 大于 100 的任何记录,;\n那么本事务如果再次执行上述语句,就会发生幻读")]),t._v(" "),v("li",[t._v("满足其恢复和复制的需要\n在使用范围条件检索并锁定记录时;\nInnoDB 这种加锁机制会阻塞符合条件范围内键值的并发插入,这往往会造成严重的锁等待;\n因此,在实际开发中,尤其是并发插入较多的应用;\n我们要尽量优化业务逻辑,尽量使用"),v("code",[t._v("相等条件来访问更新数据")]),t._v(",避免使用范围条件.")])]),t._v(" "),v("h2",{attrs:{id:"_4-7-when-使用表锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-when-使用表锁"}},[t._v("#")]),t._v(" 4.7 when 使用表锁")]),t._v(" "),v("p",[t._v("对于InnoDB,在绝大部分情况下都应该使用行锁\n因为"),v("code",[t._v("事务")]),t._v(","),v("code",[t._v("行锁")]),t._v("往往是我们选择InnoDB的理由")]),t._v(" "),v("p",[t._v("但在个别特殊事务中,也可以考虑"),v("code",[t._v("使用表锁")])]),t._v(" "),v("ul",[v("li",[t._v("事务需要更新大部分数据，表又较大\n若使用默认的行锁,不仅该事务执行效率低(因为需要对较多行加锁,加锁是需要耗时的);\n而且可能造成其他事务长时间锁等待和锁冲突;\n这种情况下可以考虑使用表锁来提高该事务的执行速度")]),t._v(" "),v("li",[t._v("事务涉及多个表，较复杂，很可能引起死锁，造成大量事务回滚\n这种情况也可以考虑一次性锁定事务涉及的表，从而避免死锁、减少数据库因事务回滚带来的开销")])]),t._v(" "),v("p",[t._v("当然，应用中这两种事务不能太多，否则，就应该考虑使用"),v("code",[t._v("ＭyISAＭ")])]),t._v(" "),v("p",[t._v("在InnoDB下 ,使用表锁要注意")]),t._v(" "),v("ul",[v("li",[t._v("使用"),v("code",[t._v("LOCK TALBES")]),t._v("虽然可以给"),v("code",[t._v("InnoDB")]),t._v("加表锁\n表锁不是由"),v("code",[t._v("InnoDB")]),t._v("引擎层管理的,而是由其上一层ＭySQL Server负责;\n仅当"),v("code",[t._v("autocommit=0、innodb_table_lock=1（默认设置）")]),t._v(",InnoDB 引擎层才知道MySQL加的表锁,ＭySQL Server才能感知InnoDB加的行锁;\n这种情况下，InnoDB才能自动识别涉及表锁的死锁\n否则，InnoDB将无法自动检测并处理这种死锁")]),t._v(" "),v("li",[t._v("在用"),v("code",[t._v("LOCK TALBES")]),t._v("对"),v("code",[t._v("InnoDB")]),t._v("锁时要注意,要将"),v("code",[t._v("autocommit")]),t._v("设为0，否则ＭySQL不会给表加锁\n事务结束前,不要用"),v("code",[t._v("UNLOCK TALBES")]),t._v("释放表锁,因为它会隐式地提交事务\nCOMMIT或ROLLBACK不能释放用"),v("code",[t._v("LOCK TALBES")]),t._v("加的表锁，必须用UNLOCK TABLES释放表锁，正确的方式见如下语句")]),t._v(" "),v("li",[t._v("需要写表t1并从表t读\n"),v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTk2NDgyZmY2ODlkNzc1NzUucG5n",alt:""}})])]),t._v(" "),v("h1",{attrs:{id:"_5-死锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-死锁"}},[t._v("#")]),t._v(" 5 死锁")]),t._v(" "),v("p",[v("strong",[t._v("ＭyISAM表锁是deadlock free的，这是因为ＭyISAM总是一次性获得所需的全部锁，要么全部满足，要么等待，因此不会出现死锁")])]),t._v(" "),v("p",[t._v("但在InnoDB中，除单个SQL组成的事务外，锁是逐步获得的，这就决定了InnoDB发生死锁是可能的")]),t._v(" "),v("p",[t._v("发生死锁后，InnoDB一般都能自动检测到，并使一个事务释放锁并退回，另一个事务获得锁，继续完成事务")]),t._v(" "),v("ul",[v("li",[t._v("但在涉及外部锁，或涉及锁的情况下，InnoDB并不能完全自动检测到死锁\n"),v("strong",[t._v("这需要通过设置锁等待超时参数innodb_lock_wait_timeout来解决")]),t._v("\n需要说明的是，这个参数并不是只用来解决死锁问题，在并发访问比较高的情况下，如果大量事务因无法立即获取所需的锁而挂起，会占用大量计算机资源，造成严重性能问题，甚至拖垮数据库\n我们通过设置合适的锁等待超时阈值，可以避免这种情况发生。")])]),t._v(" "),v("p",[t._v("通常来说，死锁都是应用设计的问题，通过调整业务流程、数据库对象设计、事务大小、以及访问数据库的SQL语句，绝大部分都可以避免")]),t._v(" "),v("p",[t._v("下面就通过实例来介绍几种死锁的常用方法。")]),t._v(" "),v("ul",[v("li",[t._v("应用中，不同的程序会并发存取多个表\n尽量约定以"),v("code",[t._v("相同的顺序")]),t._v("访问表")]),t._v(" "),v("li",[t._v("程序批处理数据时\n"),v("code",[t._v("事先对数据排序")]),t._v(",保证每个线程按固定的顺序来处理记录")]),t._v(" "),v("li",[t._v("在事务中,要更新记录\n应"),v("code",[t._v("直接申请排他锁,而不应该先申请共享锁")])]),t._v(" "),v("li",[t._v("在"),v("code",[t._v("可重复读")]),t._v("下,如果两个线程同时对相同条件记录用"),v("code",[t._v("SELECT...ROR UPDATE")]),t._v("加排他写锁\n在没有符合该记录情况下，两个线程都会加锁成功\n程序发现记录尚不存在，就试图插入一条新记录，如果两个线程都这么做，就会出现死锁\n这种情况下，将隔离级别改成READ COMMITTED，就可以避免问题")]),t._v(" "),v("li",[t._v("当隔离级别为READ COMMITED时，如果两个线程都先执行"),v("code",[t._v("SELECT...FOR UPDATE")]),t._v("\n判断是否存在符合条件的记录，没有 -> 插入记录;\n此时，只有一个线程能插入成功，另一个线程会出现锁等待.\n当第１个线程提交后，第２个线程会因主键重出错，但虽然这个线程出错了，却会获得一个排他锁！这时如果有第３个线程又来申请排他锁，也会出现死锁.\n对于这种情况，可以直接做插入操作，然后再捕获主键重异常，或者在遇到主键重错误时，总是执行ROLLBACK释放获得的排他锁")])]),t._v(" "),v("p",[v("strong",[t._v("如果出现死锁，可以用SHOW INNODB STATUS命令来确定最后一个死锁产生的原因和改进措施。")])]),t._v(" "),v("h1",{attrs:{id:"_6-总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-总结"}},[t._v("#")]),t._v(" 6 总结")]),t._v(" "),v("h2",{attrs:{id:"_6-1-myisam的表锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-myisam的表锁"}},[t._v("#")]),t._v(" 6.1 "),v("strong",[t._v("MyISAM")]),t._v("的表锁")]),t._v(" "),v("ul",[v("li",[t._v("共享读锁之间是兼容的,但"),v("code",[t._v("共享读锁和排他写锁")]),t._v("之间,以及"),v("code",[t._v("排他写锁之间")]),t._v("互斥,即读写串行")]),t._v(" "),v("li",[t._v("在一定条件下,"),v("code",[t._v("ＭyISAM")]),t._v("允许查询/插入并发,可利用这一点来解决应用中对同一表查询/插入的锁争用问题")]),t._v(" "),v("li",[v("code",[t._v("ＭyISAM")]),t._v("默认的锁调度机制是写优先,这并不一定适合所有应用,用户可以通过设置"),v("code",[t._v("LOW_PRIPORITY_UPDATES")]),t._v("参数或在INSERT、UPDATE、DELETE语句中指定"),v("code",[t._v("LOW_PRIORITY")]),t._v("选项来调节读写锁的争用")]),t._v(" "),v("li",[t._v("由于表锁的锁定粒度大,读写又是串行的,因此如果更新操作较多,"),v("code",[t._v("ＭyISAM")]),t._v("表可能会出现严重的锁等待,可以考虑采用InnoDB表来减少锁冲突")])]),t._v(" "),v("h2",{attrs:{id:"_6-2-对于innodb表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-对于innodb表"}},[t._v("#")]),t._v(" 6.2 对于"),v("strong",[t._v("InnoDB表")])]),t._v(" "),v("ul",[v("li",[t._v("行锁基于索引实现\n如果不通过索引访问数据,InnoDB会使用表锁")]),t._v(" "),v("li",[t._v("间隙锁机制及使用间隙锁的原因")]),t._v(" "),v("li",[t._v("不同的隔离级别下，InnoDB的锁机制和一致性读策略不同")]),t._v(" "),v("li",[t._v("ＭySQL的恢复和复制对InnoDB锁机制和一致性读策略也有较大影响")]),t._v(" "),v("li",[t._v("锁冲突甚至死锁很难完全避免")])]),t._v(" "),v("h1",{attrs:{id:"_7-索引与锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-索引与锁"}},[t._v("#")]),t._v(" 7 索引与锁")]),t._v(" "),v("p",[t._v("在了解InnoDB的锁特性后，用户可以通过设计和SQL调整等措施减少锁冲突和死锁")]),t._v(" "),v("ul",[v("li",[t._v("尽量使用较低的隔离级别")]),t._v(" "),v("li",[t._v("精心设计索引，并尽量使用索引访问数据，使加锁更精确，从而减少锁冲突的机会。")])]),t._v(" "),v("p",[t._v("利用索引优化锁")]),t._v(" "),v("ul",[v("li",[t._v("索引可以减少锁定的行数")]),t._v(" "),v("li",[t._v("索引可以加快处理速度,同时也加快了锁的释放")])]),t._v(" "),v("ul",[v("li",[t._v("选择合理的事务大小，小事务发生锁冲突的几率也更小")]),t._v(" "),v("li",[t._v("给记录集显式加锁时，最好一次性请求足够级别的锁。比如要修改数据的话，最好直接申请排他锁，而不是先申请共享锁，修改时再请求排他锁，这样容易产生死锁。")]),t._v(" "),v("li",[t._v("不同的程序访问一组表时，应尽量约定以相同的顺序访问各表，对一个表而言，尽可能以固定的顺序存取表中的行。这样可以大减少死锁的机会。")]),t._v(" "),v("li",[t._v("尽量用相等条件访问数据，这样可以避免间隙锁对并发插入的影响。")]),t._v(" "),v("li",[t._v("不要申请超过实际需要的锁级别；除非必须，查询时不要显示加锁。")]),t._v(" "),v("li",[t._v("对于一些特定的事务，可以使用表锁来提高处理速度或减少死锁的可能")])]),t._v(" "),v("h2",{attrs:{id:"索引的维护和优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#索引的维护和优化"}},[t._v("#")]),t._v(" 索引的维护和优化")]),t._v(" "),v("p",[t._v("删除重复和冗余的索引\nprimary key(id) ,unique key (id) ，index(id)\n主键索引、唯一索引、单列索引")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("注意加粗的联合索引\nIndex(a),"),v("strong",[t._v("index(a,b)")]),t._v("\nprimary key(id),"),v("strong",[t._v("index(a,id)")])])]),t._v(" "),v("li",[v("p",[t._v("删除重复和冗余的索引\n"),v("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210219154350316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n查找未被使用过的索引\n"),v("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210219154317840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_16,color_FFFFFF,t_70",alt:""}})])]),t._v(" "),v("li",[v("p",[t._v("更新索引统计信息及减少索引碎片\nanalyze table    table_ name\noptimize table table_ name\n使用不当会导致锁表")])])]),t._v(" "),v("blockquote",[v("p",[t._v("参考")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.cnblogs.com/chenqionghe/p/4845693.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL中的锁（表锁、行锁）"),v("OutboundLink")],1)]),t._v(" "),v("li",[t._v("https://developer.aliyun.com/article/3780")])])])])}),[],!1,null,null,null);_.default=s.exports}}]);