(window.webpackJsonp=window.webpackJsonp||[]).push([[1006],{1405:function(t,s,a){"use strict";a.r(s);var r=a(13),n=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"本周小结-动态规划系列四"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本周小结-动态规划系列四"}},[t._v("#")]),t._v(" 本周小结！（动态规划系列四）")]),t._v(" "),a("h2",{attrs:{id:"周一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#周一"}},[t._v("#")]),t._v(" 周一")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://programmercarl.com/0494.%E7%9B%AE%E6%A0%87%E5%92%8C.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("动态规划：目标和！"),a("OutboundLink")],1),t._v("要求在数列之间加入+ 或者 -，使其和为S。")]),t._v(" "),a("p",[t._v("所有数的总和为sum，假设加法的总和为x，那么可以推出x = (S + sum) / 2。")]),t._v(" "),a("p",[t._v("S 和 sum都是固定的，那此时问题就转化为01背包问题（数列中的数只能使用一次）: 给你一些物品（数字），装满背包（就是x）有几种方法。")]),t._v(" "),a("ol",[a("li",[t._v("确定dp数组以及下标的含义")])]),t._v(" "),a("p",[a("strong",[t._v("dp[j] 表示：填满j（包括j）这么大容积的包，有dp[j]种方法")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("确定递推公式")])]),t._v(" "),a("p",[t._v("dp[j] += dp[j - nums[i]]")]),t._v(" "),a("p",[a("strong",[t._v("注意：求装满背包有几种方法类似的题目，递推公式基本都是这样的")]),t._v("。")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("dp数组如何初始化")])]),t._v(" "),a("p",[t._v("dp[0] 初始化为1 ，dp[j]其他下标对应的数值应该初始化为0。")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("确定遍历顺序")])]),t._v(" "),a("p",[t._v("01背包问题一维dp的遍历，nums放在外循环，target在内循环，且内循环倒序。")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("举例推导dp数组")])]),t._v(" "),a("p",[t._v("输入：nums: [1, 1, 1, 1, 1], S: 3")]),t._v(" "),a("p",[t._v("bagSize = (S + sum) / 2 = (3 + 5) / 2 = 4")]),t._v(" "),a("p",[t._v("dp数组状态变化如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210125120743274.jpg",alt:"494.目标和"}})]),t._v(" "),a("h2",{attrs:{id:"周二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#周二"}},[t._v("#")]),t._v(" 周二")]),t._v(" "),a("p",[t._v("这道题目"),a("a",{attrs:{href:"https://programmercarl.com/0474.%E4%B8%80%E5%92%8C%E9%9B%B6.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("动态规划：一和零！"),a("OutboundLink")],1),t._v("算有点难度。")]),t._v(" "),a("p",[a("strong",[t._v("不少同学都以为是多重背包，其实这是一道标准的01背包")]),t._v("。")]),t._v(" "),a("p",[t._v("这不过这个背包有两个维度，一个是m 一个是n，而不同长度的字符串就是不同大小的待装物品。")]),t._v(" "),a("p",[a("strong",[t._v("所以这是一个二维01背包！")])]),t._v(" "),a("ol",[a("li",[t._v("确定dp数组（dp table）以及下标的含义")])]),t._v(" "),a("p",[a("strong",[t._v("dp[i][j]：最多有i个0和j个1的strs的最大子集的大小为dp[i][j]。")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("确定递推公式")])]),t._v(" "),a("p",[t._v("dp[i][j] = max(dp[i][j], dp[i - zeroNum][j - oneNum] + 1);")]),t._v(" "),a("p",[t._v("字符串集合中的一个字符串0的数量为zeroNum，1的数量为oneNum。")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("dp数组如何初始化")])]),t._v(" "),a("p",[t._v("因为物品价值不会是负数，初始为0，保证递推的时候dp[i][j]不会被初始值覆盖。")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("确定遍历顺序")])]),t._v(" "),a("p",[t._v("01背包一定是外层for循环遍历物品，内层for循环遍历背包容量且从后向前遍历！")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("举例推导dp数组")])]),t._v(" "),a("p",[t._v('以输入：["10","0001","111001","1","0"]，m = 3，n = 3为例')]),t._v(" "),a("p",[t._v("最后dp数组的状态如下所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210120111201512.jpg",alt:"474.一和零"}})]),t._v(" "),a("h2",{attrs:{id:"周三"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#周三"}},[t._v("#")]),t._v(" 周三")]),t._v(" "),a("p",[t._v("此时01背包我们就讲完了，正式开始完全背包。")]),t._v(" "),a("p",[t._v("在"),a("a",{attrs:{href:"https://programmercarl.com/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("动态规划：关于完全背包，你该了解这些！"),a("OutboundLink")],1),t._v("中我们讲解了完全背包的理论基础。")]),t._v(" "),a("p",[t._v("其实完全背包和01背包区别就是完全背包的物品是无限数量。")]),t._v(" "),a("p",[t._v("递推公式也是一样的，但难点在于遍历顺序上！")]),t._v(" "),a("p",[t._v("完全背包的物品是可以添加多次的，所以遍历背包容量要从小到大去遍历，即：")]),t._v(" "),a("div",{staticClass:"language-CPP line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先遍历物品，再遍历背包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" weight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历物品")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" weight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" bagWeight "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历背包容量")]),t._v("\n        dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" weight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("基本网上题的题解介绍到这里就到此为止了。")]),t._v(" "),a("p",[a("strong",[t._v("那么为什么要先遍历物品，在遍历背包呢？")]),t._v(" （灵魂拷问）")]),t._v(" "),a("p",[t._v("其实对于纯完全背包，先遍历物品，再遍历背包 与 先遍历背包，再遍历物品都是可以的。我在文中"),a("a",{attrs:{href:"https://programmercarl.com/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("动态规划：关于完全背包，你该了解这些！"),a("OutboundLink")],1),t._v("也给出了详细的解释。")]),t._v(" "),a("p",[t._v("这个细节是很多同学忽略掉的点，其实也不算细节了，"),a("strong",[t._v("相信不少同学在写背包的时候，两层for循环的先后循序搞不清楚，靠感觉来的")]),t._v("。")]),t._v(" "),a("p",[t._v("所以理解究竟是先遍历啥，后遍历啥非常重要，这也体现出遍历顺序的重要性！")]),t._v(" "),a("p",[t._v("在文中，我也强调了是对纯完全背包，两个for循环先后循序无所谓，那么题目稍有变化，可就有所谓了。")]),t._v(" "),a("h2",{attrs:{id:"周四"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#周四"}},[t._v("#")]),t._v(" 周四")]),t._v(" "),a("p",[t._v("在"),a("a",{attrs:{href:"https://programmercarl.com/0518.%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2II.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("动态规划：给你一些零钱，你要怎么凑？"),a("OutboundLink")],1),t._v("中就是给你一堆零钱（零钱个数无限），为凑成amount的组合数有几种。")]),t._v(" "),a("p",[a("strong",[t._v("注意这里组合数和排列数的区别！")])]),t._v(" "),a("p",[t._v("看到无限零钱个数就知道是完全背包，")]),t._v(" "),a("p",[t._v("但本题不是纯完全背包了（求是否能装满背包），而是求装满背包有几种方法。")]),t._v(" "),a("p",[t._v("这里在遍历顺序上可就有说法了。")]),t._v(" "),a("ul",[a("li",[t._v("如果求组合数就是外层for循环遍历物品，内层for遍历背包。")]),t._v(" "),a("li",[t._v("如果求排列数就是外层for遍历背包，内层for循环遍历物品。")])]),t._v(" "),a("p",[t._v("这里同学们需要理解一波，我在文中也给出了详细的解释，下周我们将介绍求排列数的完全背包题目来加深对这个遍历顺序的理解。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("相信通过本周的学习，大家已经初步感受到遍历顺序的重要性！")]),t._v(" "),a("p",[t._v("很多对动规理解不深入的同学都会感觉：动规嘛，就是把递推公式推出来其他都easy了。")]),t._v(" "),a("p",[t._v("其实这是一种错觉，或者说对动规理解的不够深入！")]),t._v(" "),a("p",[t._v("我在动规专题开篇介绍"),a("a",{attrs:{href:"https://programmercarl.com/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于动态规划，你该了解这些！"),a("OutboundLink")],1),t._v("中就强调了 "),a("strong",[t._v("递推公式仅仅是 动规五部曲里的一小部分， dp数组的定义、初始化、遍历顺序，哪一点没有搞透的话，即使知道递推公式，遇到稍稍难一点的动规题目立刻会感觉写不出来了")]),t._v("。")]),t._v(" "),a("p",[t._v("此时相信大家对动规五部曲也有更深的理解了，同样也验证了Carl之前讲过的："),a("strong",[t._v("简单题是用来学习方法论的，而遇到难题才体现出方法论的重要性！")])]),t._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://code-thinking.cdn.bcebos.com/pics/01二维码.jpg",width:"450"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);