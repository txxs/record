(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{444:function(e,t,s){"use strict";s.r(t);var a=s(13),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"table-of-contents"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[e._v("#")]),e._v(" Table of Contents")]),e._v(" "),s("ul",[s("li",[e._v("["),s("a",{attrs:{href:"https://www.cnblogs.com/popsuper1982/p/8522535.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Qemu，KVM，Virsh傻傻的分不清"),s("OutboundLink")],1),e._v("](#[qemu，kvm，virsh傻傻的分不清]httpswwwcnblogscompopsuper1982p8522535html)\n"),s("ul",[s("li",[s("a",{attrs:{href:"#%C2%A0kvm%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5"}},[e._v(" Kvm虚拟化技术实践")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#vmware%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%94%AF%E6%8C%81kvm%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF%EF%BC%9F"}},[e._v("VMware虚拟机支持Kvm虚拟化技术？")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E5%AE%89%E8%A3%85kvm%E8%99%9A%E6%8B%9F%E5%8C%96%E8%BD%AF%E4%BB%B6"}},[e._v("安装Kvm虚拟化软件")])])])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#ifconfig-virbr0virbr0----link-encapethernet--hwaddr-525400d723ad------------inet-addr1921681221--bcast192168122255--mask2552552550----------up-broadcast-running-multicast--mtu1500--metric1----------rx-packets0-errors0-dropped0-overruns0-frame0----------tx-packets0-errors0-dropped0-overruns0-carrier0----------collisions0-txqueuelen0-----------rx-bytes0-00-b--tx-bytes0-00-b"}},[e._v("ifconfig virbr0virbr0    Link encap:Ethernet  HWaddr 52:54:00:D7:23:AD            inet addr:192.168.122.1  Bcast:192.168.122.255  Mask:255.255.255.0          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:0 errors:0 dropped:0 overruns:0 frame:0          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:0           RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#brctl-showbridge-name-----bridge-id---------------stp-enabled-----interfacesvirbr0----------8000525400d723ad-------yes-------------virbr0-nic"}},[e._v("brctl showbridge name     bridge id               STP enabled     interfacesvirbr0          8000.525400d723ad       yes             virbr0-nic")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#iptables--nvl--t-natchain-prerouting-policy-accept-304-packets-38526-bytes-pkts-bytes-target-----prot-opt-in-----out-----source---------------destination----------chain-postrouting-policy-accept-7-packets-483-bytes-pkts-bytes-target-----prot-opt-in-----out-----source---------------destination-------------0-----0-masquerade--tcp-------------------192168122024----192168122024----masq-ports-1024-65535-----0-----0-masquerade--udp-------------------192168122024----192168122024----masq-ports-1024-65535-----0-----0-masquerade--all-------------------192168122024----192168122024-----chain-output-policy-accept-7-packets-483-bytes-pkts-bytes-target-----prot-opt-in-----out-----source---------------destination"}},[e._v("iptables -nvL -t natChain PREROUTING (policy ACCEPT 304 packets, 38526 bytes) pkts bytes target     prot opt in     out     source               destination          Chain POSTROUTING (policy ACCEPT 7 packets, 483 bytes) pkts bytes target     prot opt in     out     source               destination             0     0 MASQUERADE  tcp  --  *      *       192.168.122.0/24    !192.168.122.0/24    masq ports: 1024-65535     0     0 MASQUERADE  udp  --  *      *       192.168.122.0/24    !192.168.122.0/24    masq ports: 1024-65535     0     0 MASQUERADE  all  --  *      *       192.168.122.0/24    !192.168.122.0/24     Chain OUTPUT (policy ACCEPT 7 packets, 483 bytes) pkts bytes target     prot opt in     out     source               destination")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#kvm%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA"}},[e._v("kvm创建虚拟机")])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#netstat--ntlpgrep-5900tcp--------0------0-00005900----------------0000-------------------listen------2504qemu-kvm"}},[e._v("netstat -ntlp|grep 5900tcp        0      0 0.0.0.0:5900                0.0.0.0:*                   LISTEN      2504/qemu-kvm")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6"}},[e._v("虚拟机远程管理软件")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#kvm%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AE%A1%E7%90%86"}},[e._v("KVM虚拟机管理")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#libvirt%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6"}},[e._v("libvirt虚拟机配置文件")])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#lltotal-8-rw--------1-root-root-3047-oct-19--2016-centos-66-x68_64xmldrwx-------3-root-root-4096-oct-17--2016-networks"}},[e._v("lltotal 8-rw-------. 1 root root 3047 Oct 19  2016 Centos-6.6-x68_64.xmldrwx------. 3 root root 4096 Oct 17  2016 networks")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E7%9B%91%E6%8E%A7kvm%E8%99%9A%E6%8B%9F%E6%9C%BA"}},[e._v("监控kvm虚拟机")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#kvm%E4%BF%AE%E6%94%B9nat%E6%A8%A1%E5%BC%8F%E4%B8%BA%E6%A1%A5%E6%8E%A5%5B%E6%A1%88%E4%BE%8B%5D"}},[e._v("KVM修改NAT模式为桥接[案例]")])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#virsh-edit-centos-66-x68_64---%E5%91%BD%E4%BB%A4-52-----interface-typenetwork-----53-------mac-address5254002a2d60-----54-------source-networkdefault-----55------------56-----interface-%E4%BF%AE%E6%94%B9%E4%B8%BA%EF%BC%9A52-----interface-typebridge-----53-------mac-address5254002a2d60-----54-------source-bridgebr0-----55------------56-----interface"}},[e._v("virsh edit Centos-6.6-x68_64  # 命令 52     "),s("interface",{attrs:{type:"network"}},[e._v("     53       "),s("mac",{attrs:{address:"52:54:00:2a:2d:60"}}),e._v("     54       "),s("source",{attrs:{network:"default"}}),e._v("     55            56     ")],1),e._v(" 修改为：52     "),s("interface",{attrs:{type:"bridge"}},[e._v("     53       "),s("mac",{attrs:{address:"52:54:00:2a:2d:60"}}),e._v("     54       "),s("source",{attrs:{bridge:"br0"}}),e._v("     55            56     ")],1)],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"#brctl-showbridge-name-----bridge-id---------------stp-enabled-----interfacesbr0-------------8000000c29f824c9-------no--------------eth0virbr0----------8000525400353d8e-------yes-------------virbr0-nic"}},[e._v("brctl showbridge name     bridge id               STP enabled     interfacesbr0             8000.000c29f824c9       no              eth0virbr0          8000.525400353d8e       yes             virbr0-nic")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#virsh-start-centos-66-x86_64domain-centos-66-x86_64-started--brctl-show-------------------bridge-name-----bridge-id---------------stp-enabled-----interfacesbr0-------------8000000c29f824c9-------no--------------eth0--------------------------------------------------------vnet0virbr0----------8000525400353d8e-------yes-------------virbr0-nic"}},[e._v("virsh start CentOS-6.6-x86_64Domain CentOS-6.6-x86_64 started # brctl show                   bridge name     bridge id               STP enabled     interfacesbr0             8000.000c29f824c9       no              eth0                                                        vnet0virbr0          8000.525400353d8e       yes             virbr0-nic")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#ifup-eth0"}},[e._v("ifup eth0")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#ssh-1921682108root1921682108s-password-last-login-sat-jan-30-124028-2016"}},[e._v("ssh 192.168.2.108root@192.168.2.108's password: Last login: Sat Jan 30 12:40:28 2016")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E6%80%BB%E7%BB%93"}},[e._v("总结")])])])])]),e._v(" "),s("h1",{attrs:{id:"qemu-kvm-virsh傻傻的分不清"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qemu-kvm-virsh傻傻的分不清"}},[e._v("#")]),e._v(" "),s("a",{attrs:{href:"https://www.cnblogs.com/popsuper1982/p/8522535.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Qemu，KVM，Virsh傻傻的分不清"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("本文转载自"),s("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fwww.itweet.cn",target:"_blank",rel:"noopener noreferrer"}},[e._v("Itweet"),s("OutboundLink")],1),e._v("的博客")]),e._v(" "),s("p",[e._v("本系列文章将整理到我在GitHub上的《Java面试指南》仓库，更多精彩内容请到我的仓库里查看")]),e._v(" "),s("blockquote",[s("p",[e._v("https://github.com/h2pl/Java-Tutorial")])]),e._v(" "),s("p",[e._v("喜欢的话麻烦点下Star哈")]),e._v(" "),s("p",[e._v("本系列文章将整理到我的个人博客")]),e._v(" "),s("blockquote",[s("p",[e._v("www.how2playlife.com")])]),e._v(" "),s("p",[e._v("更多Java技术文章会更新在我的微信公众号【Java技术江湖】上，欢迎关注\n该系列博文会介绍常见的后端技术，这对后端工程师来说是一种综合能力，我们会逐步了解搜索技术，云计算相关技术、大数据研发等常见的技术喜提，以便让你更完整地了解后端技术栈的全貌，为后续参与分布式应用的开发和学习做好准备。")]),e._v(" "),s("p",[e._v("如果对本系列文章有什么建议，或者是有什么疑问的话，也可以关注公众号【Java技术江湖】联系我，欢迎你参与本系列博文的创作和修订。")]),e._v(" "),s("p",[e._v("当你安装了一台Linux，想启动一个KVM虚拟机的时候，你会发现需要安装不同的软件，启动虚拟机的时候，有多种方法：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("virsh start")])]),e._v(" "),s("li",[s("p",[e._v("kvm命令")])]),e._v(" "),s("li",[s("p",[e._v("qemu命令")])]),e._v(" "),s("li",[s("p",[e._v("qemu-kvm命令")])]),e._v(" "),s("li",[s("p",[e._v("qemu-system-x86_64命令")])])]),e._v(" "),s("p",[e._v("这些之间是什么关系呢？请先阅读上一篇《"),s("a",{attrs:{href:"https://blog.csdn.net/a724888/article/details/80996570",target:"_blank",rel:"noopener noreferrer"}},[e._v("白话虚拟化技术"),s("OutboundLink")],1),e._v("》")]),e._v(" "),s("p",[e._v("有了上一篇的基础，我们就能说清楚来龙去脉。")]),e._v(" "),s("p",[e._v("KVM（Kernel-based Virtual Machine的英文缩写）是内核内建的虚拟机。有点类似于 Xen ，但更追求更简便的运作，比如运行此虚拟机，仅需要加载相应的 kvm 模块即可后台待命。和 Xen 的完整模拟不同的是，KVM 需要芯片支持虚拟化技术（英特尔的 VT 扩展或者 AMD 的 AMD-V 扩展）。")]),e._v(" "),s("p",[e._v("首先看qemu，其中关键字emu，全称emulator，模拟器，所以单纯使用qemu是采用的完全虚拟化的模式。")]),e._v(" "),s("p",[e._v("Qemu向Guest OS模拟CPU，也模拟其他的硬件，GuestOS认为自己和硬件直接打交道，其实是同Qemu模拟出来的硬件打交道，Qemu将这些指令转译给真正的硬件。由于所有的指令都要从Qemu里面过一手，因而性能比较差")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://images2018.cnblogs.com/blog/635909/201803/635909-20180307150620008-108720261.jpg",alt:""}})]),e._v(" "),s("p",[e._v("按照上一次的理论，完全虚拟化是非常慢的，所以要使用硬件辅助虚拟化技术Intel-VT，AMD-V，所以需要CPU硬件开启这个标志位，一般在BIOS里面设置。查看是否开启")]),e._v(" "),s("p",[e._v('对于Intel CPU 可用命令 grep "vmx" /proc/cpuinfo 判断')]),e._v(" "),s("p",[e._v('对于AMD CPU 可用命令 grep "svm" /proc/cpuinfo 判断')]),e._v(" "),s("p",[e._v("当确认开始了标志位之后，通过KVM，GuestOS的CPU指令不用经过Qemu转译，直接运行，大大提高了速度。")]),e._v(" "),s("p",[e._v("所以KVM在内核里面需要有一个模块，来设置当前CPU是Guest OS在用，还是Host OS在用。")]),e._v(" "),s("p",[e._v("查看内核模块中是否含有kvm, ubuntu默认加载这些模块")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://images2018.cnblogs.com/blog/635909/201803/635909-20180307150634298-628102674.png",alt:""}})]),e._v(" "),s("p",[e._v("KVM内核模块通过/dev/kvm暴露接口，用户态程序可以通过ioctl来访问这个接口，例如书写下面的程序")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://images2018.cnblogs.com/blog/635909/201803/635909-20180307150654328-1662633336.png",alt:""}})]),e._v(" "),s("p",[e._v("Qemu将KVM整合进来，通过ioctl调用/dev/kvm接口，将有关CPU指令的部分交由内核模块来做，就是qemu-kvm (qemu-system-XXX)")]),e._v(" "),s("p",[e._v("Qemu-kvm对kvm的整合从release_0_5_1开始有branch，在1.3.0正式merge到master")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://images2018.cnblogs.com/blog/635909/201803/635909-20180307150710177-1591777831.png",alt:""}})]),e._v(" "),s("p",[e._v("qemu和kvm整合之后，CPU的性能问题解决了，另外Qemu还会模拟其他的硬件，如Network, Disk，同样全虚拟化的方式也会影响这些设备的性能。")]),e._v(" "),s("p",[e._v("于是qemu采取半虚拟化或者类虚拟化的方式，让Guest OS加载特殊的驱动来做这件事情。")]),e._v(" "),s("p",[e._v("例如网络需要加载virtio_net，存储需要加载virtio_blk，Guest需要安装这些半虚拟化驱动，GuestOS知道自己是虚拟机，所以数据直接发送给半虚拟化设备，经过特殊处理，例如排队，缓存，批量处理等性能优化方式，最终发送给真正的硬件，一定程度上提高了性能。")]),e._v(" "),s("p",[e._v("至此整个关系如下：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://images2018.cnblogs.com/blog/635909/201803/635909-20180307150733042-369996016.jpg",alt:""}})]),e._v(" "),s("p",[e._v("qemu-kvm会创建Guest OS，当需要执行CPU指令的时候，通过/dev/kvm调用kvm内核模块，通过硬件辅助虚拟化方式加速。如果需要进行网络和存储访问，则通过类虚拟化或者直通Pass through的方式，通过加载特殊的驱动，加速访问网络和存储资源。")]),e._v(" "),s("p",[e._v("然而直接用qemu或者qemu-kvm或者qemu-system-xxx的少，大多数还是通过virsh启动，virsh属于libvirt工具，libvirt是目前使用最为广泛的对KVM虚拟机进行管理的工具和API，可不止管理KVM。")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://images2018.cnblogs.com/blog/635909/201803/635909-20180307150801681-1586679180.jpg",alt:""}})]),e._v(" "),s("p",[e._v("Libvirt分服务端和客户端，Libvirtd是一个daemon进程，是服务端，可以被本地的virsh调用，也可以被远程的virsh调用，virsh相当于客户端。")]),e._v(" "),s("p",[e._v("Libvirtd调用qemu-kvm操作虚拟机，有关CPU虚拟化的部分，qemu-kvm调用kvm的内核模块来实现")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://images2018.cnblogs.com/blog/635909/201803/635909-20180307150815111-1223973253.jpg",alt:""}})]),e._v(" "),s("p",[e._v("这下子，整个相互关系才搞清楚了。")]),e._v(" "),s("p",[e._v("虽然使用virsh创建虚拟机相对简单，但是为了探究虚拟机的究竟如何使用，下一次，我们来解析一下如何裸使用qemu-kvm来创建一台虚拟机，并且能上网。")]),e._v(" "),s("p",[e._v("如果搭建使用过vmware桌面版或者virtualbox桌面版，创建一个能上网的虚拟机非常简单，但是其实背后做了很多事情，下一次我们裸用qemu-kvm，全部使用手工配置，看创建虚拟机都做了哪些事情。")]),e._v(" "),s("p",[e._v("本章节我们主要介绍通过VMware技术虚拟出相关的Linux软件环境，在Linux系统中，安装KVM虚拟化软件，实实在在的去实践一下KVM到底是一个什么样的技术？")]),e._v(" "),s("h2",{attrs:{id:"kvm虚拟化技术实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kvm虚拟化技术实践"}},[e._v("#")]),e._v(" Kvm虚拟化技术实践")]),e._v(" "),s("h3",{attrs:{id:"vmware虚拟机支持kvm虚拟化技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vmware虚拟机支持kvm虚拟化技术"}},[e._v("#")]),e._v(" VMware虚拟机支持Kvm虚拟化技术？")]),e._v(" "),s("p",[e._v("在VMware创建的虚拟机中，默认不支持Kvm虚拟化技术，需要芯片级的扩展支持，幸好VMware提供完整的解决方案，可以通过修改虚拟化引擎。")]),e._v(" "),s("p",[e._v("VMware软件版本信息，"),s("code",[e._v("VMware® Workstation 11.0.0 build-2305329")])]),e._v(" "),s("p",[e._v("首先，你需要启动VMware软件，新建一个"),s("code",[e._v("CentOS 6.x")]),e._v("类型的虚拟机，正常安装完成，这个虚拟机默认的"),s("code",[e._v("虚拟化引擎")]),e._v("，"),s("code",[e._v("首选模式")]),e._v("为”自动”。")]),e._v(" "),s("p",[e._v("如果想让我们的VMware虚拟化出来的CentOS虚拟机支持KVM虚拟化，我们需要修改它支持的"),s("code",[e._v("虚拟化引擎")]),e._v(",打开新建的虚拟机，虚拟机状态必须处于"),s("code",[e._v("关闭")]),e._v("状态，通过双击"),s("code",[e._v("编辑虚拟机设置")]),e._v(" > "),s("code",[e._v("硬件")]),e._v(" ，选择"),s("code",[e._v("处理器")]),e._v("菜单，右边会出现"),s("code",[e._v("虚拟化引擎")]),e._v("区域，选择"),s("code",[e._v("首选模式")]),e._v("为 "),s("em",[e._v("Intel Tv-x/EPT或AMD-V/RVI")]),e._v(",接下来勾选"),s("code",[e._v("虚拟化Intel Tv-x/EPT或AMD-V/RVI(v)")]),e._v("，点击"),s("code",[e._v("确定")]),e._v("。")]),e._v(" "),s("p",[e._v("KVM需要虚拟机宿主（host）的处理器带有虚拟化支持（对于Intel处理器来说是VT-x，对于AMD处理器来说是AMD-V）。你可以通过以下命令来检查你的处理器是否支持虚拟化：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" grep --color -E '(vmx|svm)' /proc/cpuinfo\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("如果运行后没有显示，那么你的处理器不支持硬件虚拟化，你不能使用KVM。")]),e._v(" "),s("ul",[s("li",[e._v("注意: 如果是硬件服务器，您可能需要在BIOS中启用虚拟化支持，参考 "),s("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fwww.itweet.cn%2Fblog%2F2016%2F06%2F14%2FPrivate%2520Cloud%2520personal%2520workstation",target:"_blank",rel:"noopener noreferrer"}},[e._v("Private Cloud personal workstation"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"安装kvm虚拟化软件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装kvm虚拟化软件"}},[e._v("#")]),e._v(" 安装Kvm虚拟化软件")]),e._v(" "),s("p",[e._v("安装kvm虚拟化软件，我们需要一个Linux操作系统环境，这里我们选择的Linux版本为"),s("code",[e._v("CentOS release 6.8 (Final)")]),e._v("，在这个VMware虚拟化出来的虚拟机中安装kvm虚拟化软件，具体步骤如下：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("首选安装epel源")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("sudo rpm -ivh http://mirrors.ustc.edu.cn/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("安装kvm虚拟化软件")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("sudo yum install qemu-kvm qeum-kvm-tools virt-manager libvirt\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("启动kvm虚拟化软件")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("sudo /etc/init.d/libvirtd start\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])])])]),e._v(" "),s("p",[e._v("启动成功之后你可以通过"),s("code",[e._v("/etc/init.d/libvirtd status")]),e._v("查看启动状态，这个时候，kvm会自动生成一个本地网桥 "),s("code",[e._v("virbr0")]),e._v("，可以通过命令查看他的详细信息")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# ifconfig virbr0virbr0    Link encap:Ethernet  HWaddr 52:54:00:D7:23:AD            inet addr:192.168.122.1  Bcast:192.168.122.255  Mask:255.255.255.0          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:0 errors:0 dropped:0 overruns:0 frame:0          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:0           RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("KVM默认使用NAT网络模式。虚拟机获取一个私有 IP（例如 192.168.122.0/24 网段的），并通过本地主机的NAT访问外网。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# brctl showbridge name     bridge id               STP enabled     interfacesvirbr0          8000.525400d723ad       yes             virbr0-nic\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("创建一个本地网桥virbr0，包括两个端口：virbr0-nic 为网桥内部端口，vnet0 为虚拟机网关端口（192.168.122.1）。")]),e._v(" "),s("p",[e._v("虚拟机启动后，配置 192.168.122.1（vnet0）为网关。所有网络操作均由本地主机系统负责。")]),e._v(" "),s("p",[e._v("DNS/DHCP的实现，本地主机系统启动一个 dnsmasq 来负责管理。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("ps aux|grep dnsmasq\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[s("code",[e._v("注意：")]),e._v(" 启动libvirtd之后自动启动iptables，并且写上一些默认规则。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# iptables -nvL -t natChain PREROUTING (policy ACCEPT 304 packets, 38526 bytes) pkts bytes target     prot opt in     out     source               destination          Chain POSTROUTING (policy ACCEPT 7 packets, 483 bytes) pkts bytes target     prot opt in     out     source               destination             0     0 MASQUERADE  tcp  --  *      *       192.168.122.0/24    !192.168.122.0/24    masq ports: 1024-65535     0     0 MASQUERADE  udp  --  *      *       192.168.122.0/24    !192.168.122.0/24    masq ports: 1024-65535     0     0 MASQUERADE  all  --  *      *       192.168.122.0/24    !192.168.122.0/24     Chain OUTPUT (policy ACCEPT 7 packets, 483 bytes) pkts bytes target     prot opt in     out     source               destination\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"kvm创建虚拟机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kvm创建虚拟机"}},[e._v("#")]),e._v(" kvm创建虚拟机")]),e._v(" "),s("p",[e._v("上传一个镜像文件："),s("code",[e._v("CentOS-6.6-x86_64-bin-DVD1.iso")])]),e._v(" "),s("p",[e._v("通过"),s("code",[e._v("qemu")]),e._v("创建一个raw格式的文件(注：QEMU使用的镜像文件：qcow2与raw，它们都是QEMU(KVM)虚拟机使用的磁盘文件格式)，大小为5G。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("qemu-img create -f raw /data/Centos-6.6-x68_64.raw 5G\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("查看创建的raw磁盘格式文件信息")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("qemu-img info /data/Centos-6.6-x68_64.raw  image: /data/Centos-6.6-x68_64.rawfile format: rawvirtual size: 5.0G (5368709120 bytes)disk size: 0\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("启动，kvm虚拟机，进行操作系统安装")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("virt-install  --virt-type kvm --name CentOS-6.6-x86_64 --ram 512 --cdrom /data/CentOS-6.6-x86_64-bin-DVD1.iso --disk path=/data/Centos-6.6-x68_64.raw --network network=default --graphics vnc,listen=0.0.0.0 --noautoconsole\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("启动之后，通过命令查看启动状态，默认会在操作系统开一个"),s("code",[e._v("5900")]),e._v("的端口，可以通过虚拟机远程管理软件"),s("code",[e._v("vnc")]),e._v("客户端连接，然后可视化的方式安装操作系统。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# netstat -ntlp|grep 5900tcp        0      0 0.0.0.0:5900                0.0.0.0:*                   LISTEN      2504/qemu-kvm\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("code",[e._v("注意")]),e._v("：kvm安装的虚拟机，不确定是那一台，在后台就是一个进程，每增加一台端口号+1，第一次创建的为5900！")]),e._v(" "),s("h3",{attrs:{id:"虚拟机远程管理软件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机远程管理软件"}},[e._v("#")]),e._v(" 虚拟机远程管理软件")]),e._v(" "),s("p",[e._v("我们可以使用虚拟机远程管理软件VNC进行操作系统的安装，我使用过的两款不错的虚拟机远程管理终端软件，一个是Windows上使用，一个在Mac上为了方便安装一个Google Chrome插件后即可开始使用，软件信息 "),s("code",[e._v("Tightvnc")]),e._v(" 或者 "),s("code",[e._v('VNC[@Viewer](https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FViewer "@Viewer") for Google Chrome')])]),e._v(" "),s("p",[e._v("如果你和我一样使用的是"),s("code",[e._v("Google Chrome")]),e._v("提供的VNC插件，使用方式，在"),s("code",[e._v("Address")]),e._v("输入框中输入，宿主机IP:59000,"),s("code",[e._v("Picture Quality")]),e._v("选择框使用默认选项，点击"),s("code",[e._v("Connect")]),e._v("进入到安装操作系统的界面，你可以安装常规的方式进行安装，等待系统安装完成重启，然后就可以正常使用kvm虚拟化出来的操作系统了。")]),e._v(" "),s("p",[s("code",[e._v("Tightvnc")]),e._v("软件的使用，请参考官方手册。")]),e._v(" "),s("ul",[s("li",[e._v("Tightvnc下载地址："),s("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fwww.tightvnc.com%2Fdownload.php",target:"_blank",rel:"noopener noreferrer"}},[e._v("www.tightvnc.com/download.ph…"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("Tightvnc下载地址："),s("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fwww.tightvnc.com%2Fdownload%2F2.7.10%2Ftightvnc-2.7.10-setup-64bit.msi",target:"_blank",rel:"noopener noreferrer"}},[e._v("www.tightvnc.com/download/2.…"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("Tightvnc下载地址："),s("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fwww.tightvnc.com%2Fdownload%2F2.7.10%2Ftightvnc-2.7.10-setup-32bit.msi",target:"_blank",rel:"noopener noreferrer"}},[e._v("www.tightvnc.com/download/2.…"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"kvm虚拟机管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kvm虚拟机管理"}},[e._v("#")]),e._v(" KVM虚拟机管理")]),e._v(" "),s("p",[e._v("kvm虚拟机是通过virsh命令进行管理的，libvirt是Linux上的虚拟化库，是长期稳定的C语言API，支持KVM/QEMU、Xen、LXC等主流虚拟化方案。链接："),s("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Flibvirt.org%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("libvirt.org/"),s("OutboundLink")],1),e._v("\nvirsh是Libvirt对应的shell命令。")]),e._v(" "),s("p",[e._v("查看所有虚拟机状态")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("virsh list --all\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("启动虚拟机")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("virsh start [NAME]\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("列表启动状态的虚拟机")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("virsh list\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("ul",[s("li",[s("p",[e._v("常用命令查看")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("virsh --help|more less\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])])])]),e._v(" "),s("h3",{attrs:{id:"libvirt虚拟机配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#libvirt虚拟机配置文件"}},[e._v("#")]),e._v(" libvirt虚拟机配置文件")]),e._v(" "),s("p",[e._v("虚拟机libvirt配置文件在"),s("code",[e._v("/etc/libvirt/qemu")]),e._v("路径下，生产中我们需要去修改它的网络信息。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# lltotal 8-rw-------. 1 root root 3047 Oct 19  2016 Centos-6.6-x68_64.xmldrwx------. 3 root root 4096 Oct 17  2016 networks\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("code",[e._v("注意")]),e._v("：不能直接修改xml文件，需要通过提供的命令！")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" virsh edit Centos-6.6-x68_64\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("kvm三种网络类型,桥接、NAT、仅主机模式，默认NAT模式,其他机器无法登陆，生产中一般选择桥接。")]),e._v(" "),s("h3",{attrs:{id:"监控kvm虚拟机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#监控kvm虚拟机"}},[e._v("#")]),e._v(" 监控kvm虚拟机")]),e._v(" "),s("ul",[s("li",[e._v("安装软件监控虚拟机")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("yum install virt-top -y\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("ul",[s("li",[e._v("查看虚拟机资源使用情况")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("virt-top virt-top 23:46:39 - x86_64 1/1CPU 3392MHz 3816MB1 domains, 1 active, 1 running, 0 sleeping, 0 paused, 0 inactive D:0 O:0 X:0CPU: 5.6%  Mem: 2024 MB (2024 MB by guests)    ID S RDRQ WRRQ RXBY TXBY %CPU %MEM    TIME   NAME                                                                                                     1 R    0    1   52    0  5.6 53.0   5:16.15 centos-6.8\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"kvm修改nat模式为桥接-案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kvm修改nat模式为桥接-案例"}},[e._v("#")]),e._v(" KVM修改NAT模式为桥接[案例]")]),e._v(" "),s("p",[e._v("在开始案例之前，需要知道的必要信息，宿主机IP是"),s("code",[e._v("192.168.2.200")]),e._v("，操作系统版本"),s("code",[e._v("Centos-6.6-x68_64")]),e._v("。")]),e._v(" "),s("p",[e._v("启动虚拟网卡")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("ifup eth0\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("这里网卡是NAT模式，可以上网，ping通其他机器，但是其他机器无法登陆！")]),e._v(" "),s("p",[e._v("宿主机查看网卡信息")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("brctl show ifconfig virbr0 ifconfig vnet0\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("em",[e._v("实现网桥，在kvm宿主机完成")])]),e._v(" "),s("ul",[s("li",[e._v("步骤1，创建一个网桥，新建网桥连接到eth0,删除eth0,让新的网桥拥有eth0的ip")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("brctl addbr br0  #创建一个网桥 brctl show       #显示网桥信息 brctl addif br0 eth0 && ip addr del dev eth0 192.168.2.200/24 && ifconfig br0 192.168.2.200/24 up brctl show      #查看结果ifconfig br0    #验证br0是否成功取代了eth0的IP\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("code",[e._v("注意")]),e._v(": 这里的IP地址为 "),s("em",[e._v("宿主机ip")])]),e._v(" "),s("ul",[s("li",[e._v("修改虚拟机桥接到br0网卡，在宿主机修改")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("virsh list --all ps aux |grep kvm virsh stop Centos-6.6-x68_64 virsh list --all\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("修改虚拟机桥接到宿主机，修改52行type为"),s("code",[e._v("bridge")]),e._v("，第54行bridge为"),s("code",[e._v("br0")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# virsh edit Centos-6.6-x68_64  # 命令 52     <interface type='network'>     53       <mac address='52:54:00:2a:2d:60'/>     54       <source network='default'/>     55            56     </interface> 修改为：52     <interface type='bridge'>     53       <mac address='52:54:00:2a:2d:60'/>     54       <source bridge='br0'/>     55            56     </interface>\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("启动虚拟机，看到启动前后，桥接变化，vnet0被桥接到了br0")]),e._v(" "),s("p",[e._v("启动前：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# brctl showbridge name     bridge id               STP enabled     interfacesbr0             8000.000c29f824c9       no              eth0virbr0          8000.525400353d8e       yes             virbr0-nic\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("启动后：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# virsh start CentOS-6.6-x86_64Domain CentOS-6.6-x86_64 started # brctl show                   bridge name     bridge id               STP enabled     interfacesbr0             8000.000c29f824c9       no              eth0                                                        vnet0virbr0          8000.525400353d8e       yes             virbr0-nic\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("Vnc登陆后，修改ip地址，看到dhcp可以使用，被桥接到现有的ip段，ip是自动获取,而且是和宿主机在同一个IP段.")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# ifup eth0\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("从宿主机登陆此服务器，可以成功。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# ssh 192.168.2.108root@192.168.2.108's password: Last login: Sat Jan 30 12:40:28 2016\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("从同一网段其他服务器登陆此虚拟机,也可以成功,至此让kvm管理的服务器能够桥接上网就完成了，在生产环境中，桥接上网是非常必要的。")]),e._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),s("p",[e._v("通过kvm相关的命令来创建虚拟机，安装和调试是非常必要的，因为现有的很多私有云，公有云产品都使用到了kvm这样的技术，学习基本的kvm使用对维护"),s("code",[e._v("openstack")]),e._v("集群有非常要的作用，其次所有的"),s("code",[e._v("openstack image")]),e._v("制作也得通过kvm这样的底层技术来完成，最后上传到"),s("code",[e._v("openstack")]),e._v("的镜像管理模块，才能开始通过"),s("code",[e._v("openstack image")]),e._v("生成云主机。")]),e._v(" "),s("p",[e._v("到此，各位应该能够体会到，其实kvm是一个非常底层和核心的虚拟化技术，而openstack就是对"),s("code",[e._v("kvm")]),e._v("这样的技术进行了一个上层封装，可以非常方便，可视化的操作和维护"),s("code",[e._v("kvm")]),e._v("虚拟机，这就是现在"),s("code",[e._v("牛")]),e._v("上天的"),s("code",[e._v("云计算")]),e._v("技术最底层技术栈，具体怎么实现请看下图。")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/6/19/69d6aeff29b1a8ff1d9a62579ad91afb?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"Libvirt_support"}})]),e._v(" "),s("p",[e._v("如上图，没有"),s("code",[e._v("openstack")]),e._v("我们依然可以通过，"),s("code",[e._v("libvirt")]),e._v("来对虚拟机进行操作，只不过比较繁琐和难以维护。通过openstack就可以非常方便的进行底层虚拟化技术的管理、维护、使用。")])])}),[],!1,null,null,null);t.default=r.exports}}]);