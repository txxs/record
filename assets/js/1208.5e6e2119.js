(window.webpackJsonp=window.webpackJsonp||[]).push([[1208],{1609:function(s,a,t){"use strict";t.r(a);var e=t(13),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("除了B-Tree 索引，MySQL还提供了如下索引：")]),s._v(" "),t("ul",[t("li",[s._v("Hash索引\n只有Memory引擎支持，场景简单")]),s._v(" "),t("li",[s._v("R-Tree索引\nMyISAM的一个特殊索引类型，主要用于地理空间数据类型")]),s._v(" "),t("li",[s._v("Full-text\nMyISAM的一个特殊索引，主要用于全文索引，从MySQL 5.6开始InnoDB支持全文索引")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("索引 / 存储引擎")]),s._v(" "),t("th",[s._v("MyISAM")]),s._v(" "),t("th",[s._v("InnoDB")]),s._v(" "),t("th",[s._v("Memory")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("B-Tree索引")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")])]),s._v(" "),t("tr",[t("td",[s._v("HASH索引")]),s._v(" "),t("td",[t("code",[s._v("不支持")])]),s._v(" "),t("td",[t("code",[s._v("不支持")])]),s._v(" "),t("td",[s._v("支持")])]),s._v(" "),t("tr",[t("td",[s._v("R-Tree索引")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[t("code",[s._v("不支持")])])]),s._v(" "),t("tr",[t("td",[s._v("Full-text索引")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[t("code",[s._v("不支持")])])])])]),s._v(" "),t("p",[s._v("最常用的索引也就是B-tree索引和Hash索引，且只有"),t("code",[s._v("Memory")]),s._v("，"),t("code",[s._v("NDB")]),s._v("两种引擎支持Hash索引。\nHash索引适于key-value查询，通过Hash索引比B-tree索引查询更加迅速。但Hash索引不支持范围查找例如<><==,>==等。\n"),t("strong",[s._v('Memory只有在"="的条件下才会使用hash索引')])]),s._v(" "),t("p",[s._v("MySQL在 8.0才支持函数索引，在此之前是能对列的前面某一部分进行索引，例如标题title字段，可以只取title的前10个字符索引，这样的特性大大缩小了索引文件的大小，但前缀索引也有缺点，在order by和group by操作时失效。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx_title "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" film"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("title"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h1",{attrs:{id:"_1-特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-特点"}},[s._v("#")]),s._v(" 1 特点")]),s._v(" "),t("p",[s._v("值存在数组，用一个hash函数把key转换成一个确定的内存位置，然后把value放在数组的该位置。使用 hash 自然会有哈希冲突可能，MySQL 采取拉链法解决。")]),s._v(" "),t("p",[s._v("Hash索引基于Hash表实现，只有查询条件精确匹配Hash索引中的列时，才能够使用到hash索引。对于Hash索引中的所有列，存储引擎会为每行计算一个hashcode，Hash索引中存储的就是hashcode。")]),s._v(" "),t("ul",[t("li",[s._v("例如一个维护了身份证号和姓名的表，根据身份证号查找对应名字，其hash索引如下：\n"),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/2020083018125272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70#pic_center",alt:""}})])]),s._v(" "),t("p",[s._v("比如我们想查"),t("code",[s._v("ID_card_n4")]),s._v("对应username：")]),s._v(" "),t("ol",[t("li",[s._v("将"),t("code",[s._v("ID_card_n4")]),s._v("通过hash函数算出A")]),s._v(" "),t("li",[s._v("按顺序遍历，找到User4")])]),s._v(" "),t("p",[s._v("四个"),t("code",[s._v("ID_card_n")]),s._v("值并不一定递增，这样即使增加新的User，速度也快，只需在后追加。\n当然缺点也很明显，不是有序，所以hash索引做区间查询速度很慢。比如要找身份证号在[ID_card_X, ID_card_Y]区间的所有用户，就须全表扫描。")]),s._v(" "),t("h1",{attrs:{id:"_2-hash索引的缺陷"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-hash索引的缺陷"}},[s._v("#")]),s._v(" 2 Hash索引的缺陷")]),s._v(" "),t("ul",[t("li",[s._v("必须二次查找")]),s._v(" "),t("li",[s._v("不支持部分索引查找、范围查找")]),s._v(" "),t("li",[s._v("哈希码可能存在哈希冲突，如果hash 算法设计不好，碰撞过多，性能也会变差")]),s._v(" "),t("li",[s._v("索引存放的是hash值,所以仅支持 < = > 以及 IN")]),s._v(" "),t("li",[s._v("无法通过操作索引来排序，因为存放的时候会经过hash计算，但是计算的hash值和存放的不一定相等，所以无法排序")]),s._v(" "),t("li",[s._v("不能避免全表扫描，只是由于在memory表里支持非唯一值hash索引，即不同的索引键，可能存在相同hash值")]),s._v(" "),t("li",[s._v("因为哈希表是一种根据关键字直接访问内存存储位置的数据结构 ，所以利用其原理的hash 索引，也就需要将所有数据文件添加到内存，这就很耗内存")]),s._v(" "),t("li",[s._v("如果所有的查询都是等值查询，那么hash确实快，但实际上范围查找数据更多")]),s._v(" "),t("li",[s._v("只能处理键值的全值匹配查询")]),s._v(" "),t("li",[s._v("Hash函数决定着索引键的大小")])]),s._v(" "),t("blockquote",[t("p",[s._v("要使InnoDB或MyISAM支持哈希索引，可以通过伪哈希索引来实现，叫自适应哈希索引。\n可通过增加一个字段，存储hash值，将hash值建立索引，在插入和更新的时候，建立触发器，自动添加计算后的hash到表里。")])]),s._v(" "),t("p",[s._v("哈希表这种结构适用于只有等值查询的场景，比如Memcached。")]),s._v(" "),t("h1",{attrs:{id:"_3-案例应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-案例应用"}},[s._v("#")]),s._v(" 3 案例应用")]),s._v(" "),t("p",[s._v("假如有一个非常非常大的表，比如用户登录时需要通过email检索出用户，如果直接在email列建索引，除了索引区间匹配，还要进行字符串匹配比对，email短还好，如果长的话这个查询代价就比较大。\n若此时，在email建立哈希索引，查询以int查询，性能就比字符串比对查询快多了。")]),s._v(" "),t("h3",{attrs:{id:"hash-算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-算法"}},[s._v("#")]),s._v(" Hash 算法")]),s._v(" "),t("p",[s._v("建立哈希索引，首先就要选定哈希算法，《高性能MySQL》说到的CRC32算法。")]),s._v(" "),t("h3",{attrs:{id:"insert-update-select-操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#insert-update-select-操作"}},[s._v("#")]),s._v(" INSERT UPDATE SELECT 操作")]),s._v(" "),t("p",[s._v("在表中添加hash值的字段：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("User")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLUMN")]),s._v(" email_hash "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("接下来就是在UPDATE和INSERT时，自动更新 "),t("code",[s._v("email_hash")]),s._v(" 字段，通过触发器实现：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELIMITER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRIGGER")]),s._v(" user_hash_insert BEFORE "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("User")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR EACH ROW")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" NEW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email_hash"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("crc32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NEW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRIGGER")]),s._v(" user_hash_update BEFORE "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("User")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR EACH ROW")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" NEW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email_hash"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("crc32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NEW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELIMITER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("这样SELECT请求就会变成：")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[s._v("SELECT `email`"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" `email_hash` FROM `User` WHERE \n\temail_hash "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CRC32")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("“xxoo@gmail"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com”"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n\t\t\tAND `email`"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" “xxoo@gmail"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com”"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("+----------------------------+------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" email                      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" email_hash "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+----------------------------+------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" xxoo@gmail.com             "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2765311122")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+----------------------------+------------+\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("code",[s._v('AND email = "xxoo@gmail.com"')]),s._v(" 是为了防止哈希碰撞时数据不准确。")])])}),[],!1,null,null,null);a.default=n.exports}}]);