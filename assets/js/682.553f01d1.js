(window.webpackJsonp=window.webpackJsonp||[]).push([[682],{1081:function(t,s,a){"use strict";a.r(s);var _=a(13),r=Object(_.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("要想实现多个线程之间的协同，如：线程执行先后顺序、获取某个线程执行的结果等。\n涉及到线程之间相互通信，分为如下四类：")]),t._v(" "),a("h1",{attrs:{id:"_1-文件共享"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-文件共享"}},[t._v("#")]),t._v(" 1 文件共享")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191008023446691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_1,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h1",{attrs:{id:"_2-网络共享"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-网络共享"}},[t._v("#")]),t._v(" 2 网络共享")]),t._v(" "),a("p",[t._v("socket编程")]),t._v(" "),a("h1",{attrs:{id:"_3-共享变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-共享变量"}},[t._v("#")]),t._v(" 3 共享变量")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191008023621435.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_1,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h1",{attrs:{id:"_4-线程协作-jdk-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-线程协作-jdk-api"}},[t._v("#")]),t._v(" 4 线程协作（JDK API）")]),t._v(" "),a("p",[t._v("细分为: "),a("s",[t._v("suspend/resume")]),t._v(" 、 wait/notify、 park/unpark")]),t._v(" "),a("p",[t._v("JDK中对于需要多线程协作完成某一任务的场景，提供了对应API支持。\n多线程协作的典型场景是:生产者-消费者模型。(线程阻塞、 线程唤醒)")]),t._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("ul",[a("li",[t._v("线程-1去买包子，没有包子，则不再执行")]),t._v(" "),a("li",[t._v("线程-2生产出包子，通知线程-1继续执行\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2019100802383347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_1,color_FFFFFF,t_70",alt:""}})])]),t._v(" "),a("h2",{attrs:{id:"_4-1-suspend、resume-废弃"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-suspend、resume-废弃"}},[t._v("#")]),t._v(" 4.1 suspend、resume（废弃）")]),t._v(" "),a("ul",[a("li",[t._v("调用suspend挂起目标线程")]),t._v(" "),a("li",[t._v("resume恢复线程执行\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021071910523538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n但该组合很容易写出")])]),t._v(" "),a("h3",{attrs:{id:"死锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#死锁"}},[t._v("#")]),t._v(" 死锁")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("同步代码中使用\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2019100802572960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_1,color_FFFFFF,t_70",alt:""}}),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210719133903312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_16,color_FFFFFF,t_70",alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("先后顺序：suspend比resume后执行\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2019100803021180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_1,color_FFFFFF,t_70",alt:""}}),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191008030515787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_1,color_FFFFFF,t_70",alt:""}}),t._v("\n所以用如下机制替代")])])]),t._v(" "),a("h2",{attrs:{id:"_4-2-wait-notify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-wait-notify"}},[t._v("#")]),t._v(" 4.2 wait/notify")]),t._v(" "),a("p",[t._v("这些方法只能由"),a("strong",[t._v("同一对象锁")]),t._v("的持有者线程调用，也就是写在同步块里面，否则抛IllegalMonitorStateException。")]),t._v(" "),a("p",[a("strong",[t._v("wait")]),t._v(" 方法导致当前线程等待，加入该对象的等待集合中，并且"),a("strong",[t._v("放弃当前持有的对象锁")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("notify")]),t._v("/"),a("strong",[t._v("notifyAll")]),t._v(" 方法唤醒"),a("strong",[t._v("一个")]),t._v("/"),a("strong",[t._v("所有")]),t._v("正在等待这个对象锁的线程。")]),t._v(" "),a("blockquote",[a("p",[t._v("虽然wait会自动解锁，但"),a("strong",[t._v("对顺序有要求")]),t._v("。若在notify被调用后， 才调用wait，则线程会永远处于"),a("strong",[t._v("WAITING")]),t._v("态。")])]),t._v(" "),a("h3",{attrs:{id:"正常使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正常使用"}},[t._v("#")]),t._v(" 正常使用")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191008031659529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_1,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"死锁-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#死锁-2"}},[t._v("#")]),t._v(" 死锁")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191008032042659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_1,color_FFFFFF,t_70",alt:""}}),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191008032138968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_1,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_4-3-park-unpark"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-park-unpark"}},[t._v("#")]),t._v(" 4.3 park/unpark")]),t._v(" "),a("p",[t._v("LockSupport用来创建锁和其他同步类的基本线程阻塞原语：")]),t._v(" "),a("ul",[a("li",[t._v("线程调用"),a("code",[t._v("LockSupport.park")]),t._v("，则等待“许可”")]),t._v(" "),a("li",[t._v("线程调用"),a("code",[t._v("LockSupport.unpark")]),t._v("，必须把等待获得许可的线程作为参数进行传递，好让此线程继续运行，为指定线程提供“许可(permit)”")])]),t._v(" "),a("p",[a("strong",[t._v("不要求park和unpark方法的调用顺序")]),t._v("。")]),t._v(" "),a("p",[t._v("多次调用unpark之后，再调用park，线程会直接运行，"),a("strong",[t._v("不会叠加")]),t._v("，即连续多次调用park，第一次会拿到“许可”直接运行，后续调用会进入等待。")]),t._v(" "),a("h3",{attrs:{id:"正常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正常"}},[t._v("#")]),t._v(" 正常"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191008033156471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_1,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"死锁-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#死锁-3"}},[t._v("#")]),t._v(" 死锁")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191008033327469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_1,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h1",{attrs:{id:"_5-伪唤醒"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-伪唤醒"}},[t._v("#")]),t._v(" 5 伪唤醒")]),t._v(" "),a("p",[a("strong",[t._v("之前代码中用if语句来判断，是否进入等待状态，是错误的")]),t._v("。")]),t._v(" "),a("p",[t._v("官方推荐"),a("code",[t._v("应该在循环中检查等待条件")]),t._v("，因为处于等待状态的线程可能会收到"),a("strong",[t._v("错误警报和伪唤醒")]),t._v("，如果不在循环中检查等待条件，程序就可能在没有满足结束条件的情况下退出。")]),t._v(" "),a("p",[t._v("伪唤醒是指线程并非因为notify、notifyall、 unpark等API调用而唤醒，而是更底层原因导致的。\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191008034349825.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNTg5NTEw,size_1,color_FFFFFF,t_70",alt:""}})])])}),[],!1,null,null,null);s.default=r.exports}}]);