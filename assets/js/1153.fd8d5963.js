(window.webpackJsonp=window.webpackJsonp||[]).push([[1153],{1546:function(s,t,a){"use strict";a.r(t);var e=a(13),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"分布式服务化与-soa-esb-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式服务化与-soa-esb-区别"}},[s._v("#")]),s._v(" 分布式服务化与 SOA/ESB 区别")]),s._v(" "),a("p",[s._v("服务汇聚到ESB：")]),s._v(" "),a("ul",[a("li",[s._v("暴露和调用")]),s._v(" "),a("li",[s._v("增强和中介")]),s._v(" "),a("li",[s._v("统计和监控")])]),s._v(" "),a("p",[s._v("分布式服务化作为SOA的另一种选择，以不同方式把ESB的一些功能重做了一遍。\nSOA/ESB：代理调用，直接增强。")]),s._v(" "),a("h1",{attrs:{id:"_1-rpc是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-rpc是什么"}},[s._v("#")]),s._v(" 1 RPC是什么")]),s._v(" "),a("p",[s._v("RPC，Remote Procedure Call，远程"),a("code",[s._v("过程")]),s._v("调用。\n"),a("code",[s._v("过程")]),s._v(" 就是业务处理、计算任务，也就是程序，像调用本地方法一样调用远程方法。")]),s._v(" "),a("p",[s._v("RPC的概念与技术早在1981年由Nelson提出。1984年，Birrell和Nelson把其用于支持异构型分布式系统间的通讯。Birrell的RPC 模型引入存根进程( stub) 作为远程的本地代理，调用RPC运行时库来传输网络中的调用。\nStub和RPC runtime屏蔽了网络调用所涉及的许多细节，特别是，参数的编码/译码及网络通讯是由stub和RPC runtime完成的，因此这一模式被各类RPC所采用。")]),s._v(" "),a("p",[s._v("这到底是如何能做到本地方法调用时转换成远程呢？\nRPC采用Client-Server结构，通过request-response消息模式实现。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("RPC VS RMI\nRMI，remote method invocation，远程方法调用是OOP领域中RPC的一种具体实现。")])]),s._v(" "),a("li",[a("p",[s._v("webservice、restfull接口调用是RPC吗?\n都是RPC，仅消息的组织方式及消息协议不同。")])])]),s._v(" "),a("p",[s._v("远程过程调用较本地调用区别：")]),s._v(" "),a("ul",[a("li",[s._v("速度相对慢")]),s._v(" "),a("li",[s._v("可靠性减弱")])]),s._v(" "),a("h1",{attrs:{id:"rpc原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rpc原理"}},[s._v("#")]),s._v(" RPC原理")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 本地")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserService")]),s._v(" service "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("findById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RPC")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserService")]),s._v(" service "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rpcfx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("findById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191114011312532.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_16,color_FFFFFF,t_70",alt:""}})]),s._v(" "),a("ol",[a("li",[s._v("客户端处理过程中"),a("code",[s._v("调用")]),s._v("Client stub (就像调用本地方法一样)，传递参数")]),s._v(" "),a("li",[s._v("Client stub将参数"),a("code",[s._v("编组")]),s._v("为消息，然后通过系统调用向服务端发送消息")]),s._v(" "),a("li",[s._v("客户端本地操作系统将消息从客户端机器"),a("code",[s._v("发送")]),s._v("到服务端机器")]),s._v(" "),a("li",[s._v("服务端操作系统将接收到的数据包"),a("code",[s._v("传递")]),s._v("给Server stub")]),s._v(" "),a("li",[s._v("Server stub "),a("code",[s._v("解组")]),s._v("消息为参数")]),s._v(" "),a("li",[s._v("Sever stub"),a("code",[s._v("再调用")]),s._v("服务端的过程，过程执行结果以反方向的相同步骤响应给客户端")])]),s._v(" "),a("p",[s._v("核心是代理机制：")]),s._v(" "),a("ol",[a("li",[s._v("本地代理存根Stub，通过动态代理或 AOP 拦截请求")]),s._v(" "),a("li",[s._v("本地序列化反序列化")]),s._v(" "),a("li",[s._v("网络通信")]),s._v(" "),a("li",[s._v("远程序列化反序列化")]),s._v(" "),a("li",[s._v("远程服务存根Skeleton")]),s._v(" "),a("li",[s._v("调用实际业务服务")]),s._v(" "),a("li",[s._v("原路返回服务结果")]),s._v(" "),a("li",[s._v("返回给本地调用方\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210217185336743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_16,color_FFFFFF,t_70",alt:""}})])]),s._v(" "),a("p",[s._v("流程需要解决什么问题呢?")]),s._v(" "),a("h1",{attrs:{id:"_3-rpc协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-rpc协议"}},[s._v("#")]),s._v(" 3 RPC协议")]),s._v(" "),a("p",[s._v("RPC调用过程中需要将参数编组为消息进行发送，接收方需要解组消息为参数，过程处理结果同样需要经编组、解组。")]),s._v(" "),a("p",[s._v("消息由哪些部分构成及消息的表示形式就构成了消息协议。\n"),a("code",[s._v("RPC调用过程中采用的消息协议称为RPC协议。")])]),s._v(" "),a("p",[s._v("RPC协议规定请求、响应消息的格式在TCP (网络传输控制协议)上可选用或自定义消息协议来完成RPC消息交互")]),s._v(" "),a("p",[s._v("我们可以选用通用的标准协议(如: http、 https) ，也可根据自身的需要定义自己的消息协议!")]),s._v(" "),a("ul",[a("li",[s._v("常见的RPC协议\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191114130245795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_16,color_FFFFFF,t_70",alt:""}})])]),s._v(" "),a("h1",{attrs:{id:"_4-rpc框架-java领域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-rpc框架-java领域"}},[s._v("#")]),s._v(" 4 RPC框架(Java领域)")]),s._v(" "),a("p",[s._v("封装好参数编组、消息解组、底层网络通信的RPC程序开发框架，带来的便捷是可以直接在其基础上只需专注于过程代码编写。")]),s._v(" "),a("p",[s._v("➢ 传统的webservice框架")]),s._v(" "),a("ul",[a("li",[s._v("Apache CXF\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191114130600432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_16,color_FFFFFF,t_70",alt:""}})]),s._v(" "),a("li",[s._v("Apache Axis2\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191114130702279.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_16,color_FFFFFF,t_70",alt:""}})]),s._v(" "),a("li",[s._v("Java 自带的JAX-WS\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191114130758130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_16,color_FFFFFF,t_70",alt:""}}),s._v("\nwebService框架大多基于标准的SOAP协议。")])]),s._v(" "),a("p",[s._v("➢ 新兴的微服务框架:")]),s._v(" "),a("ul",[a("li",[s._v("Dubbo\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191114130841739.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_16,color_FFFFFF,t_70",alt:""}})]),s._v(" "),a("li",[s._v("spring cloud alibaba\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191114131014282.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_16,color_FFFFFF,t_70",alt:""}})]),s._v(" "),a("li",[s._v("Apache Thrift\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191114131042186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_16,color_FFFFFF,t_70",alt:""}})])]),s._v(" "),a("h2",{attrs:{id:"为何使用rpc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为何使用rpc"}},[s._v("#")]),s._v(" 为何使用RPC")]),s._v(" "),a("ul",[a("li",[s._v("服务化")]),s._v(" "),a("li",[s._v("可重用")]),s._v(" "),a("li",[s._v("系统间交互调用")])]),s._v(" "),a("h1",{attrs:{id:"_5-rpc相关术语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-rpc相关术语"}},[s._v("#")]),s._v(" 5 RPC相关术语")]),s._v(" "),a("ul",[a("li",[s._v("Client、 Server、 calls、 replies、service、programs、procedures、version、marshalling(编组)、unmarshalling(解组)")]),s._v(" "),a("li",[s._v("一个网络服务由一个或多个远程程序集构成")]),s._v(" "),a("li",[s._v("一个远程程序实现一个或多个远程过程")]),s._v(" "),a("li",[s._v("过程、过程的参数、结果在程序协议说明书中定义说明")]),s._v(" "),a("li",[s._v("为兼容程序协议变更、一个服务端可能支持多个版本的远程程序")])])])}),[],!1,null,null,null);t.default=r.exports}}]);