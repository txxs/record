(window.webpackJsonp=window.webpackJsonp||[]).push([[1233],{1626:function(e,a,s){"use strict";s.r(a);var t=s(13),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"table-of-contents"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[e._v("#")]),e._v(" Table of Contents")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E5%89%8D%E8%A8%80"}},[e._v("前言")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E7%99%BB%E5%BD%95mysql"}},[e._v("登录MySQL")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93"}},[e._v("创建数据库")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8"}},[e._v("创建数据库表")])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5"}},[e._v("增删改查")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#select"}},[e._v("SELECT")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#update"}},[e._v("UPDATE")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#insert"}},[e._v("INSERT")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#delete"}},[e._v("DELETE")])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#where"}},[e._v("WHERE")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#and-%E5%92%8C-or"}},[e._v("AND 和 OR")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#and"}},[e._v("AND")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#or"}},[e._v("OR")])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#order-by"}},[e._v("ORDER BY")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#in"}},[e._v("IN")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#not"}},[e._v("NOT")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#union"}},[e._v("UNION")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#as"}},[e._v("AS")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#join"}},[e._v("JOIN")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#sql-%E5%87%BD%E6%95%B0"}},[e._v("SQL 函数")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#count"}},[e._v("COUNT")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#max"}},[e._v("MAX")])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E8%A7%A6%E5%8F%91%E5%99%A8"}},[e._v("触发器")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E6%B7%BB%E5%8A%A0%E7%B4%A2%E5%BC%95"}},[e._v("添加索引")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E6%99%AE%E9%80%9A%E7%B4%A2%E5%BC%95index"}},[e._v("普通索引(INDEX)")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E4%B8%BB%E9%94%AE%E7%B4%A2%E5%BC%95primary-key"}},[e._v("主键索引(PRIMARY key)")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95unique"}},[e._v("唯一索引(UNIQUE)")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E5%85%A8%E6%96%87%E7%B4%A2%E5%BC%95fulltext"}},[e._v("全文索引(FULLTEXT)")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E6%B7%BB%E5%8A%A0%E5%A4%9A%E5%88%97%E7%B4%A2%E5%BC%95"}},[e._v("添加多列索引")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E5%BB%BA%E7%AB%8B%E7%B4%A2%E5%BC%95%E7%9A%84%E6%97%B6%E6%9C%BA"}},[e._v("建立索引的时机")])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E5%90%8E%E8%A1%A8%E7%9A%84%E4%BF%AE%E6%94%B9"}},[e._v("创建后表的修改")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E6%B7%BB%E5%8A%A0%E5%88%97"}},[e._v("添加列")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E4%BF%AE%E6%94%B9%E5%88%97"}},[e._v("修改列")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E5%88%A0%E9%99%A4%E5%88%97"}},[e._v("删除列")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E9%87%8D%E5%91%BD%E5%90%8D%E8%A1%A8"}},[e._v("重命名表")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E6%B8%85%E7%A9%BA%E8%A1%A8%E6%95%B0%E6%8D%AE"}},[e._v("清空表数据")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E5%88%A0%E9%99%A4%E6%95%B4%E5%BC%A0%E8%A1%A8"}},[e._v("删除整张表")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E5%88%A0%E9%99%A4%E6%95%B4%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93"}},[e._v("删除整个数据库")])])])])]),e._v(" "),s("p",[e._v("本文转自互联网")]),e._v(" "),s("p",[e._v("本系列文章将整理到我在GitHub上的《Java面试指南》仓库，更多精彩内容请到我的仓库里查看")]),e._v(" "),s("blockquote",[s("p",[e._v("https://github.com/h2pl/Java-Tutorial")])]),e._v(" "),s("p",[e._v("喜欢的话麻烦点下Star哈")]),e._v(" "),s("p",[e._v("本也将整理到我的个人博客：")]),e._v(" "),s("blockquote",[s("p",[e._v("www.how2playlife.com")])]),e._v(" "),s("p",[e._v("更多Java技术文章将陆续在微信公众号【Java技术江湖】更新，敬请关注。")]),e._v(" "),s("p",[e._v("本文是《重新学习MySQL数据库》系列其中一篇，本文部分内容来源于网络，为了把本文主题讲得清晰透彻，也整合了很多我认为不错的技术博客内容，引用其中了一些比较好的博客文章，如有侵权，请联系作者。")]),e._v(" "),s("p",[e._v("该系列博文会告诉你如何从入门到进阶，从sql基本的使用方法，从MySQL执行引擎再到索引、事务等知识，一步步地学习MySQL相关技术的实现原理，更好地了解如何基于这些知识来优化sql，减少SQL执行时间，通过执行计划对SQL性能进行分析，再到MySQL的主从复制、主备部署等内容，以便让你更完整地了解整个MySQL方面的技术体系，形成自己的知识框架。")]),e._v(" "),s("p",[e._v("如果对本系列文章有什么建议，或者是有什么疑问的话，也可以关注公众号【Java技术江湖】联系作者，欢迎你参与本系列博文的创作和修订。")]),e._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),s("p",[e._v("开始使用")]),e._v(" "),s("p",[e._v("我下面所有的SQL语句是基于MySQL 5.6+运行。")]),e._v(" "),s("p",[e._v("MySQL 为关系型数据库(Relational Database Management System)，一个关系型数据库由一个或数个表格组成, 如图所示的一个表格：")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("表头(header)")]),e._v(": 每一列的名称;")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("列(col)")]),e._v(": 具有相同数据类型的数据的集合;")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("行(row)")]),e._v(": 每一行用来描述某个人/物的具体信息;")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("值(value)")]),e._v(": 行的具体信息, 每个值必须与该列的数据类型相同;")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("键(key)")]),e._v(": 表中用来识别某个特定的人物的方法, 键的值在当前列中具有唯一性。")])])]),e._v(" "),s("h3",{attrs:{id:"登录mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#登录mysql"}},[e._v("#")]),e._v(" 登录MySQL")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("mysql -h 127.0.0.1 -u 用户名 -pmysql -D 所选择的数据库名 -h 主机名 -u 用户名 -pmysql> exit # 退出 使用 “quit;” 或 “\\q;” 一样的效果mysql> status;  # 显示当前mysql的version的各种信息mysql> select version(); # 显示当前mysql的version信息mysql> show global variables like 'port'; # 查看MySQL端口号\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"创建数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建数据库"}},[e._v("#")]),e._v(" 创建数据库")]),e._v(" "),s("p",[e._v("对于表的操作需要先进入库"),s("code",[e._v("use 库名;")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 创建一个名为 samp_db 的数据库，数据库字符编码指定为 gbkcreate database samp_db character set gbk;drop database samp_db; -- 删除 库名为samp_db的库show databases;        -- 显示数据库列表。use samp_db;     -- 选择创建的数据库samp_dbshow tables;     -- 显示samp_db下面所有的表名字describe 表名;    -- 显示数据表的结构delete from 表名; -- 清空表中记录\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"创建数据库表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建数据库表"}},[e._v("#")]),e._v(" 创建数据库表")]),e._v(" "),s("blockquote",[s("p",[e._v("使用 create table 语句可完成对表的创建, create table 的常见形式:\n语法：create table 表名称(列声明);")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("CREATE TABLE `user_accounts` (  `id`             int(100) unsigned NOT NULL AUTO_INCREMENT primary key,  `password`       varchar(32)       NOT NULL DEFAULT '' COMMENT '用户密码',  `reset_password` tinyint(32)       NOT NULL DEFAULT 0 COMMENT '用户类型：0－不需要重置密码；1-需要重置密码',  `mobile`         varchar(20)       NOT NULL DEFAULT '' COMMENT '手机',  `create_at`      timestamp(6)      NOT NULL DEFAULT CURRENT_TIMESTAMP(6),  `update_at`      timestamp(6)      NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),  -- 创建唯一索引，不允许重复  UNIQUE INDEX idx_user_mobile(`mobile`))ENGINE=InnoDB DEFAULT CHARSET=utf8COMMENT='用户表信息';\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("数据类型的属性解释")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("NULL")]),e._v("：数据列可包含NULL值；")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("NOT NULL")]),e._v("：数据列不允许包含NULL值；")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("DEFAULT")]),e._v("：默认值；")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("PRIMARY")]),e._v("：KEY 主键；")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("AUTO_INCREMENT")]),e._v("：自动递增，适用于整数类型；")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("UNSIGNED")]),e._v("：是指数值类型只能为正数；")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("CHARACTER SET name")]),e._v("：指定一个字符集；")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("COMMENT")]),e._v("：对表或者字段说明；")])])]),e._v(" "),s("h2",{attrs:{id:"增删改查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#增删改查"}},[e._v("#")]),e._v(" 增删改查")]),e._v(" "),s("h3",{attrs:{id:"select"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[e._v("#")]),e._v(" SELECT")]),e._v(" "),s("blockquote",[s("p",[e._v("SELECT 语句用于从表中选取数据。 \n语法："),s("code",[e._v("SELECT 列名称 FROM 表名称")]),e._v(" \n语法："),s("code",[e._v("SELECT * FROM 表名称")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 表station取个别名叫s，表station中不包含 字段id=13或者14 的，并且id不等于4的 查询出来，只显示idSELECT s.id from station s WHERE id in (13,14) and user_id not in (4); -- 从表 Persons 选取 LastName 列的数据SELECT LastName FROM Persons -- 结果集中会自动去重复数据SELECT DISTINCT Company FROM Orders -- 表 Persons 字段 Id_P 等于 Orders 字段 Id_P 的值，-- 结果集显示 Persons表的 LastName、FirstName字段，Orders表的OrderNo字段SELECT p.LastName, p.FirstName, o.OrderNo FROM Persons p, Orders o WHERE p.Id_P = o.Id_P  -- gbk 和 utf8 中英文混合排序最简单的办法 -- ci是 case insensitive, 即 “大小写不敏感”SELECT tag, COUNT(tag) from news GROUP BY tag order by convert(tag using gbk) collate gbk_chinese_ci;SELECT tag, COUNT(tag) from news GROUP BY tag order by convert(tag using utf8) collate utf8_unicode_ci;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[e._v("#")]),e._v(" UPDATE")]),e._v(" "),s("blockquote",[s("p",[e._v("Update 语句用于修改表中的数据。 \n语法："),s("code",[e._v("UPDATE 表名称 SET 列名称 = 新值 WHERE 列名称 = 某值")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- update语句设置字段值为另一个结果取出来的字段update user set name = (select name from user1 where user1 .id = 1 )where id = (select id from user2 where user2 .name='小苏');-- 更新表 orders 中 id=1 的那一行数据更新它的 title 字段UPDATE `orders` set title='这里是标题' WHERE id=1;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"insert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insert"}},[e._v("#")]),e._v(" INSERT")]),e._v(" "),s("blockquote",[s("p",[e._v("INSERT INTO 语句用于向表格中插入新的行。 \n语法："),s("code",[e._v("INSERT INTO 表名称 VALUES (值1, 值2,....)")]),e._v(" \n语法："),s("code",[e._v("INSERT INTO 表名称 (列1, 列2,...) VALUES (值1, 值2,....)")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 向表 Persons 插入一条字段 LastName = JSLite 字段 Address = shanghaiINSERT INTO Persons (LastName, Address) VALUES ('JSLite', 'shanghai');-- 向表 meeting 插入 字段 a=1 和字段 b=2INSERT INTO meeting SET a=1,b=2;-- -- SQL实现将一个表的数据插入到另外一个表的代码-- 如果只希望导入指定字段，可以用这种方法：-- INSERT INTO 目标表 (字段1, 字段2, ...) SELECT 字段1, 字段2, ... FROM 来源表;INSERT INTO orders (user_account_id, title) SELECT m.user_id, m.title FROM meeting m where m.id=1;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"delete"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[e._v("#")]),e._v(" DELETE")]),e._v(" "),s("blockquote",[s("p",[e._v("DELETE 语句用于删除表中的行。 \n语法："),s("code",[e._v("DELETE FROM 表名称 WHERE 列名称 = 值")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 在不删除table_name表的情况下删除所有的行，清空表。DELETE FROM table_name-- 或者DELETE * FROM table_name-- 删除 Person表字段 LastName = 'JSLite' DELETE FROM Person WHERE LastName = 'JSLite' -- 删除 表meeting id 为2和3的两条数据DELETE from meeting where id in (2,3);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"where"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#where"}},[e._v("#")]),e._v(" WHERE")]),e._v(" "),s("blockquote",[s("p",[e._v("WHERE 子句用于规定选择的标准。 \n语法："),s("code",[e._v("SELECT 列名称 FROM 表名称 WHERE 列 运算符 值")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 从表 Persons 中选出 Year 字段大于 1965 的数据SELECT * FROM Persons WHERE Year>1965\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"and-和-or"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#and-和-or"}},[e._v("#")]),e._v(" AND 和 OR")]),e._v(" "),s("blockquote",[s("p",[e._v("AND - 如果第一个条件和第二个条件都成立； \nOR - 如果第一个条件和第二个条件中只要有一个成立；")])]),e._v(" "),s("h3",{attrs:{id:"and"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#and"}},[e._v("#")]),e._v(" AND")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 删除 meeting 表字段 -- id=2 并且 user_id=5 的数据  和-- id=3 并且 user_id=6 的数据 DELETE from meeting where id in (2,3) and user_id in (5,6); -- 使用 AND 来显示所有姓为 \"Carter\" 并且名为 \"Thomas\" 的人：SELECT * FROM Persons WHERE FirstName='Thomas' AND LastName='Carter';\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"or"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#or"}},[e._v("#")]),e._v(" OR")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 使用 OR 来显示所有姓为 \"Carter\" 或者名为 \"Thomas\" 的人：SELECT * FROM Persons WHERE firstname='Thomas' OR lastname='Carter'\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"order-by"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#order-by"}},[e._v("#")]),e._v(" ORDER BY")]),e._v(" "),s("blockquote",[s("p",[e._v("语句默认按照升序对记录进行排序。 \n"),s("code",[e._v("ORDER BY")]),e._v(" - 语句用于根据指定的列对结果集进行排序。 \n"),s("code",[e._v("DESC")]),e._v(" - 按照降序对记录进行排序。 \n"),s("code",[e._v("ASC")]),e._v(" - 按照顺序对记录进行排序。")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- Company在表Orders中为字母，则会以字母顺序显示公司名称SELECT Company, OrderNumber FROM Orders ORDER BY Company -- 后面跟上 DESC 则为降序显示SELECT Company, OrderNumber FROM Orders ORDER BY Company DESC -- Company以降序显示公司名称，并OrderNumber以顺序显示SELECT Company, OrderNumber FROM Orders ORDER BY Company DESC, OrderNumber ASC\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"in"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#in"}},[e._v("#")]),e._v(" IN")]),e._v(" "),s("blockquote",[s("p",[e._v("IN - 操作符允许我们在 WHERE 子句中规定多个值。 \nIN - 操作符用来指定范围，范围中的每一条，都进行匹配。IN取值规律，由逗号分割，全部放置括号中。\n语法："),s("code",[e._v('SELECT "字段名"FROM "表格名"WHERE "字段名" IN (\'值一\', \'值二\', ...);')])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 从表 Persons 选取 字段 LastName 等于 Adams、CarterSELECT * FROM Persons WHERE LastName IN ('Adams','Carter')\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"not"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#not"}},[e._v("#")]),e._v(" NOT")]),e._v(" "),s("blockquote",[s("p",[e._v("NOT - 操作符总是与其他操作符一起使用，用在要过滤的前面。")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("SELECT vend_id, prod_name FROM Products WHERE NOT vend_id = 'DLL01' ORDER BYprod_name;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"union"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#union"}},[e._v("#")]),e._v(" UNION")]),e._v(" "),s("blockquote",[s("p",[e._v("UNION - 操作符用于合并两个或多个 SELECT 语句的结果集。")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 列出所有在中国表（Employees_China）和美国（Employees_USA）的不同的雇员名SELECT E_Name FROM Employees_China UNION SELECT E_Name FROM Employees_USA -- 列出 meeting 表中的 pic_url，-- station 表中的 number_station 别名设置成 pic_url 避免字段不一样报错-- 按更新时间排序SELECT id,pic_url FROM meeting UNION ALL SELECT id,number_station AS pic_url FROM station  ORDER BY update_at;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"as"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#as"}},[e._v("#")]),e._v(" AS")]),e._v(" "),s("blockquote",[s("p",[e._v("as - 可理解为：用作、当成，作为；别名 \n一般是重命名列名或者表名。 \n语法："),s("code",[e._v("select column_1 as 列1,column_2 as 列2 from table as 表")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("SELECT * FROM Employee AS emp-- 这句意思是查找所有Employee 表里面的数据，并把Employee表格命名为 emp。-- 当你命名一个表之后，你可以在下面用 emp 代替 Employee.-- 例如 SELECT * FROM emp. SELECT MAX(OrderPrice) AS LargestOrderPrice FROM Orders-- 列出表 Orders 字段 OrderPrice 列最大值，-- 结果集列不显示 OrderPrice 显示 LargestOrderPrice -- 显示表 users_profile 中的 name 列SELECT t.name from (SELECT * from users_profile a) AS t; -- 表 user_accounts 命名别名 ua，表 users_profile 命名别名 up-- 满足条件 表 user_accounts 字段 id 等于 表 users_profile 字段 user_id-- 结果集只显示mobile、name两列SELECT ua.mobile,up.name FROM user_accounts as ua INNER JOIN users_profile as up ON ua.id = up.user_id;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"join"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[e._v("#")]),e._v(" JOIN")]),e._v(" "),s("blockquote",[s("p",[e._v("用于根据两个或多个表中的列之间的关系，从这些表中查询数据。")])]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("JOIN")]),e._v(": 如果表中有至少一个匹配，则返回行")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("INNER JOIN")]),e._v(":在表中存在至少一个匹配时，INNER JOIN 关键字返回行。")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("LEFT JOIN")]),e._v(": 即使右表中没有匹配，也从左表返回所有的行")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("RIGHT JOIN")]),e._v(": 即使左表中没有匹配，也从右表返回所有的行")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("FULL JOIN")]),e._v(": 只要其中一个表中存在匹配，就返回行")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("SELECT Persons.LastName, Persons.FirstName, Orders.OrderNoFROM PersonsINNER JOIN OrdersON Persons.Id_P = Orders.Id_PORDER BY Persons.LastName;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"sql-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-函数"}},[e._v("#")]),e._v(" SQL 函数")]),e._v(" "),s("h3",{attrs:{id:"count"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#count"}},[e._v("#")]),e._v(" COUNT")]),e._v(" "),s("blockquote",[s("p",[e._v("COUNT 让我们能够数出在表格中有多少笔资料被选出来。 \n语法："),s("code",[e._v('SELECT COUNT("字段名") FROM "表格名";')])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('-- 表 Store_Information 有几笔 store_name 栏不是空白的资料。-- "IS NOT NULL" 是 "这个栏位不是空白" 的意思。SELECT COUNT (Store_Name) FROM Store_Information WHERE Store_Name IS NOT NULL; -- 获取 Persons 表的总数SELECT COUNT(1) AS totals FROM Persons;-- 获取表 station 字段 user_id 相同的总数select user_id, count(*) as totals from station group by user_id;\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"max"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#max"}},[e._v("#")]),e._v(" MAX")]),e._v(" "),s("blockquote",[s("p",[e._v("MAX 函数返回一列中的最大值。NULL 值不包括在计算中。 \n语法："),s("code",[e._v('SELECT MAX("字段名") FROM "表格名"')])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 列出表 Orders 字段 OrderPrice 列最大值，-- 结果集列不显示 OrderPrice 显示 LargestOrderPriceSELECT MAX(OrderPrice) AS LargestOrderPrice FROM Orders\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"触发器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#触发器"}},[e._v("#")]),e._v(" 触发器")]),e._v(" "),s("blockquote",[s("p",[e._v("语法：\ncreate trigger <触发器名称>\n{ before | after} # 之前或者之后出发\ninsert | update | delete # 指明了激活触发程序的语句的类型\non <表名> # 操作哪张表\nfor each row # 触发器的执行间隔，for each row 通知触发器每隔一行执行一次动作，而不是对整个表执行一次。\n<触发器SQL语句>")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("DELIMITER $ -- 自定义结束符号CREATE TRIGGER set_userdate BEFORE INSERT on `message`for EACH ROWBEGIN  UPDATE `user_accounts` SET status=1 WHERE openid=NEW.openid;END$DELIMITER ; -- 恢复结束符号\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("OLD和NEW不区分大小写")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("NEW 用NEW.col_name，没有旧行。在DELETE触发程序中，仅能使用OLD.col_name，没有新行。")])]),e._v(" "),s("li",[s("p",[e._v("OLD 用OLD.col_name来引用更新前的某一行的列")])])]),e._v(" "),s("h2",{attrs:{id:"添加索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加索引"}},[e._v("#")]),e._v(" 添加索引")]),e._v(" "),s("h3",{attrs:{id:"普通索引-index"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#普通索引-index"}},[e._v("#")]),e._v(" 普通索引(INDEX)")]),e._v(" "),s("blockquote",[s("p",[e._v("语法：ALTER TABLE "),s("code",[e._v("表名字")]),e._v(" ADD INDEX 索引名字 ( "),s("code",[e._v("字段名字")]),e._v(" )")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- –直接创建索引CREATE INDEX index_user ON user(title)-- –修改表结构的方式添加索引ALTER TABLE table_name ADD INDEX index_name ON (column(length))-- 给 user 表中的 name字段 添加普通索引(INDEX)ALTER TABLE `table` ADD INDEX index_name (name)-- –创建表的时候同时创建索引CREATE TABLE `table` (    `id` int(11) NOT NULL AUTO_INCREMENT ,    `title` char(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL ,    `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL ,    `time` int(10) NULL DEFAULT NULL ,    PRIMARY KEY (`id`),    INDEX index_name (title(length)))-- –删除索引DROP INDEX index_name ON table\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"主键索引-primary-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主键索引-primary-key"}},[e._v("#")]),e._v(" 主键索引(PRIMARY key)")]),e._v(" "),s("blockquote",[s("p",[e._v("语法：ALTER TABLE "),s("code",[e._v("表名字")]),e._v(" ADD PRIMARY KEY ( "),s("code",[e._v("字段名字")]),e._v(" )")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 给 user 表中的 id字段 添加主键索引(PRIMARY key)ALTER TABLE `user` ADD PRIMARY key (id);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"唯一索引-unique"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#唯一索引-unique"}},[e._v("#")]),e._v(" 唯一索引(UNIQUE)")]),e._v(" "),s("blockquote",[s("p",[e._v("语法：ALTER TABLE "),s("code",[e._v("表名字")]),e._v(" ADD UNIQUE ("),s("code",[e._v("字段名字")]),e._v(")")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 给 user 表中的 creattime 字段添加唯一索引(UNIQUE)ALTER TABLE `user` ADD UNIQUE (creattime);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"全文索引-fulltext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全文索引-fulltext"}},[e._v("#")]),e._v(" 全文索引(FULLTEXT)")]),e._v(" "),s("blockquote",[s("p",[e._v("语法：ALTER TABLE "),s("code",[e._v("表名字")]),e._v(" ADD FULLTEXT ("),s("code",[e._v("字段名字")]),e._v(")")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 给 user 表中的 description 字段添加全文索引(FULLTEXT)ALTER TABLE `user` ADD FULLTEXT (description);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"添加多列索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加多列索引"}},[e._v("#")]),e._v(" 添加多列索引")]),e._v(" "),s("blockquote",[s("p",[e._v("语法：")])]),e._v(" "),s("p",[e._v("ALTER TABLE "),s("code",[e._v("table_name")]),e._v(" ADD INDEX index_name ( "),s("code",[e._v("column1")]),e._v(", "),s("code",[e._v("column2")]),e._v(", "),s("code",[e._v("column3")]),e._v(")")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 给 user 表中的 name、city、age 字段添加名字为name_city_age的普通索引(INDEX)ALTER TABLE user ADD INDEX name_city_age (name(10),city,age); \n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"建立索引的时机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#建立索引的时机"}},[e._v("#")]),e._v(" 建立索引的时机")]),e._v(" "),s("p",[e._v("在"),s("code",[e._v("WHERE")]),e._v("和"),s("code",[e._v("JOIN")]),e._v("中出现的列需要建立索引，但也不完全如此：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("MySQL只对"),s("code",[e._v("<")]),e._v("，"),s("code",[e._v("<=")]),e._v("，"),s("code",[e._v("=")]),e._v("，"),s("code",[e._v(">")]),e._v("，"),s("code",[e._v(">=")]),e._v("，"),s("code",[e._v("BETWEEN")]),e._v("，"),s("code",[e._v("IN")]),e._v("使用索引")])]),e._v(" "),s("li",[s("p",[e._v("某些时候的"),s("code",[e._v("LIKE")]),e._v("也会使用索引。")])]),e._v(" "),s("li",[s("p",[e._v("在"),s("code",[e._v("LIKE")]),e._v("以通配符%和_开头作查询时，MySQL不会使用索引。")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 此时就需要对city和age建立索引，-- 由于mytable表的userame也出现在了JOIN子句中，也有对它建立索引的必要。SELECT t.Name  FROM mytable t LEFT JOIN mytable m ON t.Name=m.username WHERE m.age=20 AND m.city='上海'; SELECT * FROM mytable WHERE username like'admin%'; -- 而下句就不会使用：SELECT * FROM mytable WHEREt Name like'%admin'; -- 因此，在使用LIKE时应注意以上的区别。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("索引的注意事项")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("索引不会包含有NULL值的列")])]),e._v(" "),s("li",[s("p",[e._v("使用短索引")])]),e._v(" "),s("li",[s("p",[e._v("不要在列上进行运算 索引会失效")])])]),e._v(" "),s("h2",{attrs:{id:"创建后表的修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建后表的修改"}},[e._v("#")]),e._v(" 创建后表的修改")]),e._v(" "),s("h3",{attrs:{id:"添加列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加列"}},[e._v("#")]),e._v(" 添加列")]),e._v(" "),s("blockquote",[s("p",[e._v("语法："),s("code",[e._v("alter table 表名 add 列名 列数据类型 [after 插入位置];")])])]),e._v(" "),s("p",[e._v("示例:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('-- 在表students的最后追加列 address: alter table students add address char(60);-- 在名为 age 的列后插入列 birthday: alter table students add birthday date after age;-- 在名为 number_people 的列后插入列 weeks: alter table students add column `weeks` varchar(5) not null default "" after `number_people`;\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"修改列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改列"}},[e._v("#")]),e._v(" 修改列")]),e._v(" "),s("blockquote",[s("p",[e._v("语法："),s("code",[e._v("alter table 表名 change 列名称 列新名称 新数据类型;")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('-- 将表 tel 列改名为 telphone: alter table students change tel telphone char(13) default "-";-- 将 name 列的数据类型改为 char(16): alter table students change name name char(16) not null;-- 修改 COMMENT 前面必须得有类型属性alter table students change name name char(16) COMMENT \'这里是名字\';-- 修改列属性的时候 建议使用modify,不需要重建表-- change用于修改列名字，这个需要重建表alter table meeting modify `weeks` varchar(20) NOT NULL DEFAULT "" COMMENT "开放日期 周一到周日：0~6，间隔用英文逗号隔开";\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"删除列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除列"}},[e._v("#")]),e._v(" 删除列")]),e._v(" "),s("blockquote",[s("p",[e._v("语法："),s("code",[e._v("alter table 表名 drop 列名称;")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 删除表students中的 birthday 列: alter table students drop birthday;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"重命名表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重命名表"}},[e._v("#")]),e._v(" 重命名表")]),e._v(" "),s("blockquote",[s("p",[e._v("语法："),s("code",[e._v("alter table 表名 rename 新表名;")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 重命名 students 表为 workmates: alter table students rename workmates;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"清空表数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#清空表数据"}},[e._v("#")]),e._v(" 清空表数据")]),e._v(" "),s("blockquote",[s("p",[e._v("方法一："),s("code",[e._v("delete from 表名;")]),e._v("\n方法二："),s("code",[e._v('truncate from "表名";')])])]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("DELETE:")]),e._v("1. DML语言;2. 可以回退;3. 可以有条件的删除;")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("TRUNCATE:")]),e._v("1. DDL语言;2. 无法回退;3. 默认所有的表内容都删除;4. 删除速度比delete快。")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 清空表为 workmates 里面的数据，不删除表。 delete from workmates;-- 删除workmates表中的所有数据，且无法恢复truncate from workmates;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"删除整张表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除整张表"}},[e._v("#")]),e._v(" 删除整张表")]),e._v(" "),s("blockquote",[s("p",[e._v("语法："),s("code",[e._v("drop table 表名;")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 删除 workmates 表: drop table workmates;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"删除整个数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除整个数据库"}},[e._v("#")]),e._v(" 删除整个数据库")]),e._v(" "),s("blockquote",[s("p",[e._v("语法："),s("code",[e._v("drop database 数据库名;")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 删除 samp_db 数据库: drop database samp_db;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);