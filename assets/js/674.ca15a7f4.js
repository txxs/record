(window.webpackJsonp=window.webpackJsonp||[]).push([[674],{1066:function(a,s,t){"use strict";t.r(s);var n=t(13),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"_1-在线程中执行任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-在线程中执行任务"}},[a._v("#")]),a._v(" 1. 在线程中执行任务")]),a._v(" "),t("p",[a._v("##1.1 串行的执行任务\n这是最经典的一个最简单的Socket server的例子，服务器的资源利用率非常低，因为单线程在等待I/O操作完成时，CPU处于空闲状态。从而阻塞了当前请求的延迟，还彻底阻止了其他等待中的请求被处理。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("public class SingleThreadWebServer {\n    public static void main(String[] args) throws IOException {\n        ServerSocket socket = new ServerSocket(80);\n        while (true) {\n            Socket connection = socket.accept();\n            handleRequest(connection);\n        }\n    }\n\n    private static void handleRequest(Socket connection) {\n        // request-handling logic here\n    }\n}\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br")])]),t("p",[a._v("##1.2 显式地为任务创建线程\n任务处理从主线程中分离出来，主循环可以快速等待下一个连接，提高响应性。同时任务可以并行处理了，吞吐量也提高了。")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadPerTaskWebServer")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IOException")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ServerSocket")]),a._v(" socket "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ServerSocket")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Socket")]),a._v(" connection "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" socket"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("accept")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Runnable")]),a._v(" task "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("handleRequest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("connection"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("task"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("handleRequest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Socket")]),a._v(" connection"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// request-handling logic here")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br")])]),t("p",[a._v("##1.3 无限制创建线程的不足")]),a._v(" "),t("ul",[t("li",[a._v("线程的生命周期开销非常高")]),a._v(" "),t("li",[a._v("资源消耗。大量的空闲线程占用内存，给GC带来压力，同时线程数量过多，竞争CPU资源开销太大。\n稳定性。容易引起GC问题，甚至OOM\n#2  Executor框架\n任务就是一组逻辑工作单元（unit of work），而线程则是使任务异步执行的机制。")])]),a._v(" "),t("p",[a._v("Executor接口，是代替Thread来做异步执行的入口，接口虽然简单，却为非常灵活强大的异步任务执行框架提供了基础。\n提供了一种标准的方法将任务的提交与执行过程解耦，并用Runnable（无返回时）或者Callable（有返回值）表示任务。")]),a._v(" "),t("p",[a._v("Executor基于生产者-消费者模式\n提交任务/执行任务分别相当于生产者/消费者,通常是最简单的实现生产者-消费者设计的方式了")]),a._v(" "),t("p",[a._v("##2.1 基于Executor改造后的样例如下\n"),t("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4685968-1f600dab8e78cc3b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),a._v("\n将请求处理任务的提交与任务的实际执行解耦,并且只需采用另一种不同的Executor实现,就可以改变服务器的行为,其影响远远小于修改任务提交方式带来的影响\n##2.2 执行策略\n这一节主要介绍做一个Executor框架需要靠那些点？")]),a._v(" "),t("p",[a._v("在什么线程中执行任务？\n任务按照什么顺序执行？FIFO/LIFO/优先级\n有多少个任务可以并发执行？\n队列中允许多少个任务等待？\n如果系统过载了要拒绝一个任务，那么选择拒绝哪一个？如何通知客户端任务被拒绝了？\n在执行任务过程中能不能有些别的动作before/after或者回调？\n各种执行策略都是一种资源管理工具，最佳的策略取决于可用的计算资源以及对服务质量的要求。")]),a._v(" "),t("p",[a._v("因此每当看到\nnew Thread(runnable).start();\n并且希望有一种灵活的执行策略的时候，请考虑使用Executor来代替\n##2.3 线程池\n在线程池中执行任务比为每个任务分配一个线程优势明显：")]),a._v(" "),t("p",[a._v("重用线程，减少开销。\n延迟低，线程是等待任务到达。\n最大化挖掘系统资源以及保证稳定性。CPU忙碌但是又不会出现线程竞争资源而耗尽内存或者失败的情况。\nExecutors可以看做一个工厂，提供如下几种Executor的创建：")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("newCachedThreadPool\nnewFixedThreadPool\nnewSingleThreadExecutor\nnewScheduledThreadPool\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("##2.4 Executor的生命周期\n为解决执行服务的生命周期问题,Executor扩展了ExecutorService接口,添加了一些用于生命周期管理的方法\n"),t("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4685968-d8f5761de7cb23f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),t("p",[a._v("一个优雅停止的例子：\n"),t("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4685968-218fcddabcf94772.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),a._v("\n增加生命周期扩展Web服务器的功能")]),a._v(" "),t("ul",[t("li",[a._v("调用stop")]),a._v(" "),t("li",[a._v("客户端请求形式")])]),a._v(" "),t("p",[a._v("关闭\n##2.5 延迟任务与周期任务\n使用Timer的弊端在于")]),a._v(" "),t("ul",[t("li",[a._v("如果某个任务执行时间过长，那么将破坏其他TimerTask的定时精确性(执行所有定时任务时只会创建一个线程),只支持基于绝对时间的调度机制,所以对系统时钟变化敏感")]),a._v(" "),t("li",[a._v("TimerTask抛出未检查异常后就会终止定时线程(不会捕获异常)")])]),a._v(" "),t("p",[a._v("更加合理的做法是使用ScheduledThreadPoolExecutor,只支持基于相对时间的调度\n它是DelayQueue的应用场景")]),a._v(" "),t("h1",{attrs:{id:"_3-找出可利用的并行性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-找出可利用的并行性"}},[a._v("#")]),a._v(" 3 找出可利用的并行性")]),a._v(" "),t("p",[a._v("##3.1 携带结果的任务Callable和Future\nExecutor框架支持Runnable，同时也支持Callable(它将返回一个值或者抛出一个异常)\n在Executor框架中，已提交但是尚未开始的任务可以取消，但是对于那些已经开始执行的任务，只有他们能响应中断时，才能取消。\nFuture非常实用，他的API如下\n"),t("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4685968-5ae3dabd24462546.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),a._v("\n内部get的阻塞是靠LockSupport.park来做的，在任务完成后Executor回调finishCompletion方法会依次唤醒被阻塞的线程。")]),a._v(" "),t("p",[a._v("ExecutorService的submit方法接受Runnable和Callable，返回一个Future。ThreadPoolExecutor框架留了一个口子，子类可以重写newTaskFor来决定创建什么Future的实现，默认是FutureTask类。\n##3.2  示例：使用Future实现页面的渲染器\n"),t("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4685968-1e87b014583e01ff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),a._v("\n##3.3 CompletionService: Executor与BlockingQueue\n计算完成后FutureTask会调用done方法，而CompletionService集成了FutureTask，对于计算完毕的结果直接放在自己维护的BlockingQueue里面，这样上层调用者就可以一个个take或者poll出来。\n"),t("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4685968-c19070c09477a763.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),t("h2",{attrs:{id:"_3-3-示例-使用completionservice提高渲染性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-示例-使用completionservice提高渲染性能"}},[a._v("#")]),a._v(" 3.3 示例：使用CompletionService提高渲染性能")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("void renderPage(CharSequence source) {\n        final List<ImageInfo> info = scanForImageInfo(source);\n        CompletionService<ImageData> completionService =\n                new ExecutorCompletionService<ImageData>(executor);\n        for (final ImageInfo imageInfo : info)\n            completionService.submit(new Callable<ImageData>() {\n                public ImageData call() {\n                    return imageInfo.downloadImage();\n                }\n            });\n\n        renderText(source);\n\n        try {\n            for (int t = 0, n = info.size(); t < n; t++) {\n                Future<ImageData> f = completionService.take();\n                ImageData imageData = f.get();\n                renderImage(imageData);\n            }\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n        } catch (ExecutionException e) {\n            throw launderThrowable(e.getCause());\n        }\n    }\n\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br"),t("span",{staticClass:"line-number"},[a._v("18")]),t("br"),t("span",{staticClass:"line-number"},[a._v("19")]),t("br"),t("span",{staticClass:"line-number"},[a._v("20")]),t("br"),t("span",{staticClass:"line-number"},[a._v("21")]),t("br"),t("span",{staticClass:"line-number"},[a._v("22")]),t("br"),t("span",{staticClass:"line-number"},[a._v("23")]),t("br"),t("span",{staticClass:"line-number"},[a._v("24")]),t("br"),t("span",{staticClass:"line-number"},[a._v("25")]),t("br"),t("span",{staticClass:"line-number"},[a._v("26")]),t("br")])]),t("h4",{attrs:{id:"_6-3-7-为任务设置时限"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-7-为任务设置时限"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#637-%E4%B8%BA%E4%BB%BB%E5%8A%A1%E8%AE%BE%E7%BD%AE%E6%97%B6%E9%99%90"}}),a._v("6.3.7 为任务设置时限")]),a._v(" "),t("p",[a._v("Future的get支持timeout。")]),a._v(" "),t("h4",{attrs:{id:"_6-3-8-批量提交任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-8-批量提交任务"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#638-%E6%89%B9%E9%87%8F%E6%8F%90%E4%BA%A4%E4%BB%BB%E5%8A%A1"}}),a._v("6.3.8 批量提交任务")]),a._v(" "),t("p",[a._v("使用invokeAll方法提交"),t("code",[a._v("List<Callable>")]),a._v("，返回一个"),t("code",[a._v("List<Future>")])])])}),[],!1,null,null,null);s.default=e.exports}}]);