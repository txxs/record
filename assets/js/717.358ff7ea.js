(window.webpackJsonp=window.webpackJsonp||[]).push([[717],{1119:function(s,a,t){"use strict";t.r(a);var n=t(13),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("(PS：扫描"),t("RouterLink",{attrs:{to:"/java/jvm/"}},[s._v("首页里面的二维码")]),s._v("进群，分享我自己在看的技术资料给大家，希望和大家一起学习进步！)")],1),s._v(" "),t("p",[s._v("目前还只是买了最新版的"),t("a",{attrs:{href:"backend/bookRecommend%EF%BC%9F#%E3%80%8A%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Java%E8%99%9A%E6%8B%9F%E6%9C%BA-%E7%AC%AC%E4%B8%89%E7%89%88%E3%80%8B"}},[s._v("《深入理解JVM虚拟机 第三版》")]),s._v(",还没有完全看完，看完之后会从网上的面经中找一些实际的面试题，然后自己通过翻书查资料，写面试题解答。")]),s._v(" "),t("h4",{attrs:{id:"_1-java内存区域怎么划分的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-java内存区域怎么划分的"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"#Java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E6%80%8E%E4%B9%88%E5%88%92%E5%88%86%E7%9A%84%EF%BC%9F"}},[s._v("1.Java内存区域怎么划分的？")])]),s._v(" "),t("h4",{attrs:{id:"_2-java中对象的创建过程是怎么样的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-java中对象的创建过程是怎么样的"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"#Java%E4%B8%AD%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E8%BF%87%E7%A8%8B%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84%EF%BC%9F"}},[s._v("2.Java中对象的创建过程是怎么样的？")])]),s._v(" "),t("h4",{attrs:{id:"_3-java对象的内存布局是怎么样的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-java对象的内存布局是怎么样的"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"#Java%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84%EF%BC%9F"}},[s._v("3.Java对象的内存布局是怎么样的？")])]),s._v(" "),t("h4",{attrs:{id:"_4-垃圾回收有哪些特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-垃圾回收有哪些特点"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"#%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%89%E5%93%AA%E4%BA%9B%E7%89%B9%E7%82%B9%EF%BC%9F"}},[s._v("4.垃圾回收有哪些特点？")])]),s._v(" "),t("h4",{attrs:{id:"_5-在垃圾回收机制中-对象在内存中的状态有哪几种"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-在垃圾回收机制中-对象在内存中的状态有哪几种"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"#%E5%9C%A8%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E4%B8%AD%EF%BC%8C%E5%AF%B9%E8%B1%A1%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E7%8A%B6%E6%80%81%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%EF%BC%9F"}},[s._v("5.在垃圾回收机制中，对象在内存中的状态有哪几种？")])]),s._v(" "),t("h4",{attrs:{id:"_6-对象的强引用-软引用-弱引用和虚引用的区别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-对象的强引用-软引用-弱引用和虚引用的区别是什么"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"#%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BC%BA%E5%BC%95%E7%94%A8%EF%BC%8C%E8%BD%AF%E5%BC%95%E7%94%A8%EF%BC%8C%E5%BC%B1%E5%BC%95%E7%94%A8%E5%92%8C%E8%99%9A%E5%BC%95%E7%94%A8%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F"}},[s._v("6.对象的强引用，软引用，弱引用和虚引用的区别是什么？")])]),s._v(" "),t("h4",{attrs:{id:"_7-双亲委派机制是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-双亲委派机制是什么"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"#%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%9C%BA%E5%88%B6%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F"}},[s._v("7.双亲委派机制是什么？")])]),s._v(" "),t("h4",{attrs:{id:"_8-怎么自定义一个类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-怎么自定义一个类加载器"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"#%E6%80%8E%E4%B9%88%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%EF%BC%9F"}},[s._v("8.怎么自定义一个类加载器？")])]),s._v(" "),t("h4",{attrs:{id:"_9-垃圾回收算法有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-垃圾回收算法有哪些"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"#%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F"}},[s._v("9.垃圾回收算法有哪些？")])]),s._v(" "),t("h4",{attrs:{id:"_10-minor-gc和full-gc是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-minor-gc和full-gc是什么"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"#MinorGC%E5%92%8CFullGC%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F"}},[s._v("10.Minor GC和Full GC是什么？")])]),s._v(" "),t("h4",{attrs:{id:"_11-如何确定一个对象可以回收"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-如何确定一个对象可以回收"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"#%E5%A6%82%E4%BD%95%E7%A1%AE%E5%AE%9A%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E8%A2%AB%E5%9B%9E%E6%94%B6%EF%BC%9F"}},[s._v("11.如何确定一个对象可以回收？")])]),s._v(" "),t("h4",{attrs:{id:"_12-目前通常使用的是什么垃圾收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-目前通常使用的是什么垃圾收集器"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"#%E7%9B%AE%E5%89%8D%E9%80%9A%E5%B8%B8%E4%BD%BF%E7%94%A8%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8%EF%BC%9F"}},[s._v("12.目前通常使用的是什么垃圾收集器？")])]),s._v(" "),t("h3",{attrs:{id:"java内存区域怎么划分的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java内存区域怎么划分的"}},[s._v("#")]),s._v(" Java内存区域怎么划分的？")]),s._v(" "),t("p",[s._v("运行时数据区域包含以下五个区域：程序计数器，Java虚拟机栈，本地方法栈，堆，方法区（其中前三个区域各线程私有，相互独立，后面两个区域所有线程共享）\n"),t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/16f98e68c8fed611.png",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"线程私用的部分-java虚拟机栈-本地方法栈-程序计数器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程私用的部分-java虚拟机栈-本地方法栈-程序计数器"}},[s._v("#")]),s._v(" 线程私用的部分(Java虚拟机栈,本地方法栈,程序计数器)")]),s._v(" "),t("h4",{attrs:{id:"java虚拟机栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java虚拟机栈"}},[s._v("#")]),s._v(" Java虚拟机栈")]),s._v(" "),t("p",[s._v("执行一个Java方法时，虚拟机都会创建一个栈帧，来存储局部变量表，操作数栈等，方法调用完毕后会对栈帧从虚拟机栈中移除。")]),s._v(" "),t("p",[s._v("局部变量表中存储了Java基本类型，对象引用（可以是对象的存储地址，也可以是代表对象的句柄等）和returnAddress类型（存储了一条字节码指令的地址）。")]),s._v(" "),t("h4",{attrs:{id:"本地方法栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地方法栈"}},[s._v("#")]),s._v(" 本地方法栈")]),s._v(" "),t("p",[s._v("本地方法栈与Java虚拟机栈类似，只不过是执行Native方法（C++方法等）。")]),s._v(" "),t("h4",{attrs:{id:"程序计数器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#程序计数器"}},[s._v("#")]),s._v(" 程序计数器")]),s._v(" "),t("p",[s._v("计数器存储了当前线程正在执行的字节码指令的地址（如果是当前执行的是Native方法，那么计数器为空），字节码解释器就是通过改变计数器的值来选取下一条需要执行的字节码指令。程序计数器是线程私有的，便于各个线程切换后，可以恢复到正确的执行位置。")]),s._v(" "),t("h3",{attrs:{id:"线程共享的部分-堆-方法区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程共享的部分-堆-方法区"}},[s._v("#")]),s._v(" 线程共享的部分(堆,方法区)")]),s._v(" "),t("h4",{attrs:{id:"java-堆"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-堆"}},[s._v("#")]),s._v(" Java 堆")]),s._v(" "),t("p",[s._v("堆存储了几乎所有对象实例和数组，是被所有线程进行共享的区域。在逻辑上是连续的，在物理上可以是不连续的内存空间（在存储一些类似于数组的这种大对象时，基于简单和性能考虑会使用连续的内存空间）。")]),s._v(" "),t("h4",{attrs:{id:"方法区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法区"}},[s._v("#")]),s._v(" 方法区")]),s._v(" "),t("p",[s._v("存储了被虚拟机加载的"),t("strong",[s._v("类型信息")]),s._v("，"),t("strong",[s._v("常量")]),s._v("，"),t("strong",[s._v("静态变量")]),s._v("等数据，在JDK8以后，存储在"),t("strong",[s._v("方法区的元空间")]),s._v("中（以前是存储在堆中的永久代中，JDK8以后已经没有永久代了）。")]),s._v(" "),t("p",[t("strong",[s._v("运行时常量池")]),s._v("是方法区的一部分，会存储各种字面量和符号引用。具备动态性，运行时也可以添加新的常量入池（例如调用String的intern()方法时，如果常量池没有相应的字符串，会将它添加到常量池）。")]),s._v(" "),t("h3",{attrs:{id:"直接内存区-不属于虚拟机运行时数据区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#直接内存区-不属于虚拟机运行时数据区"}},[s._v("#")]),s._v(" 直接内存区(不属于虚拟机运行时数据区)")]),s._v(" "),t("p",[s._v("直接内存区不属于虚拟机运行时数据区的一部分。它指的是使用Native方法直接分配堆外内存，然后通过Java堆中的DirectByteBuffer来对内存的引用进行操作（可以避免Java堆与Native堆之间的数据复制，提升性能）。")]),s._v(" "),t("h3",{attrs:{id:"java中对象的创建过程是怎么样的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java中对象的创建过程是怎么样的"}},[s._v("#")]),s._v(" Java中对象的创建过程是怎么样的？")]),s._v(" "),t("p",[s._v("这是网上看到的一张流程图：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/20160505123459787.jpeg",alt:"java对象创建流程"}})]),s._v(" "),t("h4",{attrs:{id:"_1-类加载检查"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-类加载检查"}},[s._v("#")]),s._v(" 1.类加载检查")]),s._v(" "),t("p",[s._v("首先代码中new关键字在编译后，会生成一条字节码new指令，当虚拟机遇到一条字节码"),t("strong",[s._v("new")]),s._v("指令时，会根据类名去方法区"),t("strong",[s._v("运行时常量池")]),s._v("找类的"),t("strong",[s._v("符号引用")]),s._v("，检查符号引用代表的类是否已加载，解析和初始化过。如果没有就执行相应的"),t("strong",[s._v("类加载")]),s._v("过程。")]),s._v(" "),t("h4",{attrs:{id:"_2-分配内存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-分配内存"}},[s._v("#")]),s._v(" 2.分配内存")]),s._v(" "),t("p",[s._v("虚拟机从Java堆中分配一块大小确定的内存（因为类加载时，创建一个此类的实例对象的所需的内存大小就确定了），并且初始化为零值。内存分配的方式有"),t("strong",[s._v("指针碰撞")]),s._v("和"),t("strong",[s._v("空闲列表")]),s._v("两种，取决于虚拟机采用的垃圾回收期是否带有空间压缩整理的功能。")]),s._v(" "),t("h5",{attrs:{id:"指针碰撞"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指针碰撞"}},[s._v("#")]),s._v(" 指针碰撞")]),s._v(" "),t("p",[s._v("如果垃圾收集器是Serial，ParNew等带有空间压缩整理的功能时，Java堆是规整的，此时通过移动内存分界点的指针，就可以分配空闲内存。")]),s._v(" "),t("h5",{attrs:{id:"空闲列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#空闲列表"}},[s._v("#")]),s._v(" 空闲列表")]),s._v(" "),t("p",[s._v("如果垃圾收集器是CMS这种基于清除算法的收集器时，Java堆中的空闲内存和已使用内存是相互交错的，虚拟机会维护一个列表，记录哪些可用，哪些不可用，分配时从表中找到一块足够大的空闲内存分配给实例对象，并且更新表。")]),s._v(" "),t("h4",{attrs:{id:"_3-对象初始化-虚拟机层面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-对象初始化-虚拟机层面"}},[s._v("#")]),s._v(" 3.对象初始化（虚拟机层面）")]),s._v(" "),t("p",[s._v("虚拟机会对对象进行必要的设置，将对象的一些信息存储在Obeject header 中。")]),s._v(" "),t("h4",{attrs:{id:"_4-对象初始化-java程序层面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-对象初始化-java程序层面"}},[s._v("#")]),s._v(" 4.对象初始化（Java程序层面）")]),s._v(" "),t("p",[s._v("在构造一个类的实例对象时，遵循的原则是先静后动，先父后子，先变量，后代码块，构造器。在Java程序层面会依次进行以下操作：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("初始化父类的静态变量（如果是首次使用此类）")])]),s._v(" "),t("li",[t("p",[s._v("初始化子类的静态变量（如果是首次使用此类）")])]),s._v(" "),t("li",[t("p",[s._v("执行父类的静态代码块（如果是首次使用此类）")])]),s._v(" "),t("li",[t("p",[s._v("执行子类的静态代码块（如果是首次使用此类）")])]),s._v(" "),t("li",[t("p",[s._v("初始化父类的实例变量")])]),s._v(" "),t("li",[t("p",[s._v("初始化子类的实例变量")])]),s._v(" "),t("li",[t("p",[s._v("执行父类的普通代码块")])]),s._v(" "),t("li",[t("p",[s._v("执行子类的普通代码块")])]),s._v(" "),t("li",[t("p",[s._v("执行父类的构造器")])]),s._v(" "),t("li",[t("p",[s._v("执行子类的构造器")])])]),s._v(" "),t("h4",{attrs:{id:"ps-如何解决内存分配时的多线程并发竞争问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ps-如何解决内存分配时的多线程并发竞争问题"}},[s._v("#")]),s._v(" PS:如何解决内存分配时的多线程并发竞争问题？")]),s._v(" "),t("p",[s._v("内存分配不是一个线程安全的操作，在多个线程进行内存分配是，可能会存在数据不同步的问题。所以有两种方法解决：")]),s._v(" "),t("h5",{attrs:{id:"添加cas锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加cas锁"}},[s._v("#")]),s._v(" 添加CAS锁")]),s._v(" "),t("p",[s._v("对内存分配的操作进行同步处理，添加CAS锁，配上失败重试的方式来保证原子性。（默认使用这种方式）。")]),s._v(" "),t("h5",{attrs:{id:"预先给各线程分配tlab"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预先给各线程分配tlab"}},[s._v("#")]),s._v(" 预先给各线程分配TLAB")]),s._v(" "),t("p",[s._v("预先在Java堆中给各个线程分配一块TLAB（本地线程缓冲区）内存，每个线程先在各自的缓冲区中分配内存，使用完了再通过第一种添加CAS锁的方式来分配内存。（是否启动取决于-XX：+/-UseTLAB参数）。")]),s._v(" "),t("h3",{attrs:{id:"java对象的内存布局是怎么样的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java对象的内存布局是怎么样的"}},[s._v("#")]),s._v(" Java对象的内存布局是怎么样的？")]),s._v(" "),t("p",[s._v("对象在内存中存储布局主要分为对象头，实例数据和对齐填充三部分。")]),s._v(" "),t("p",[s._v("这是网上看到的一张图：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/5401975-4c082ac80e1c042c.png",alt:"5401975-4c082ac80e1c042c"}})]),s._v(" "),t("h4",{attrs:{id:"对象头"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象头"}},[s._v("#")]),s._v(" 对象头")]),s._v(" "),t("p",[s._v("对象头主要包含对象自身的"),t("strong",[s._v("运行时数据")]),s._v("(也就是图中Mark Word)，"),t("strong",[s._v("类型指针")]),s._v("(图中的Class Pointer，指向对象所属的类)。如果对象是数组，还需要包含数组长度(否则无法确定数组对象的大小)。")]),s._v(" "),t("p",[t("strong",[s._v("Mark Word")]),s._v("：存储对象自身的运行时数据，例如hashCode，GC分代年龄，锁状态标志，线程持有的锁等等。在32位系统占4字节，在64位系统中占8字节。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5NDY4NTcz,size_16,color_FFFFFF,t_70.jpeg",alt:"在这里插入图片描述"}})]),s._v(" "),t("p",[t("strong",[s._v("Class Pointer")]),s._v("：用来指向对象对应的Class对象（其对应的元数据对象）的内存地址。在开启了指针压缩时，占4字节。（默认是开启的）")]),s._v(" "),t("p",[t("strong",[s._v("Length")]),s._v("：如果是数组对象，还有一个保存数组长度的空间，占4个字节。")]),s._v(" "),t("h4",{attrs:{id:"实例数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例数据"}},[s._v("#")]),s._v(" 实例数据")]),s._v(" "),t("p",[s._v("保存对象的非静态成员变量数据。实例数据存储的是真正的有效数据，即各个字段的值。无论是子类中定义的，还是从父类继承下来的都需要记录。这部分数据的存储顺序受到虚拟机的分配策略以及字段在类中的定义顺序的影响。")]),s._v(" "),t("h4",{attrs:{id:"对齐填充"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对齐填充"}},[s._v("#")]),s._v(" 对齐填充")]),s._v(" "),t("p",[s._v("因为HotSpot虚拟机的自动内存管理系统要求对象起始地址是8字节的整数倍，所以任何对象的大小必须是8字节的整数倍，而对象头部分一般是8字节的倍数，如果实力数据部分不是8字节的整数倍，需要对齐填充来补全。")]),s._v(" "),t("h3",{attrs:{id:"如何计算一个对象在内存中占多少个字节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何计算一个对象在内存中占多少个字节"}},[s._v("#")]),s._v(" 如何计算一个对象在内存中占多少个字节？")]),s._v(" "),t("p",[s._v("由于默认是开启了指针压缩的，现在普遍的机器位数都是64位，如果对象是普通对象，非数组类型，那么就是对象头部分就是12字节(类型指针4字节，Mark Word 8字节)，假设这个对象只有一个Integer变量，那么在实例数据部分就是一个引用变量的空间4字节，总共是16字节，由于正好是8的倍数，就不需要进行对齐填充了。")]),s._v(" "),t("h3",{attrs:{id:"垃圾回收有哪些特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收有哪些特点"}},[s._v("#")]),s._v(" 垃圾回收有哪些特点？")]),s._v(" "),t("p",[s._v("垃圾回收具有以下特点：")]),s._v(" "),t("p",[s._v("1.只回收堆内存的对象，不回收其他物理资源（数据库连接等）")]),s._v(" "),t("p",[s._v("2.无法精准控制内存回收的时机，系统会在合适的时候进行内存回收。")]),s._v(" "),t("p",[s._v("3.在回收对象之前会调用对象的finalize()方法清理资源，这个方法有可能会让其他变量重新引用对象导致对象复活。")]),s._v(" "),t("h3",{attrs:{id:"在垃圾回收机制中-对象在内存中的状态有哪几种"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在垃圾回收机制中-对象在内存中的状态有哪几种"}},[s._v("#")]),s._v(" 在垃圾回收机制中，对象在内存中的状态有哪几种？")]),s._v(" "),t("p",[s._v("1."),t("strong",[s._v("可达状态")])]),s._v(" "),t("p",[s._v("有一个及以上的变量引用着对象。")]),s._v(" "),t("p",[s._v("2."),t("strong",[s._v("可恢复状态")])]),s._v(" "),t("p",[s._v("已经没有变量引用对象了，但是还没有被调用finalize()方法。系统在回收前会调用finalize()方法，如果在执行finalize()方法时，重新让一个变量引用了对象，那么对象会变成可达状态，否则会变成不可达状态。")]),s._v(" "),t("p",[s._v("3."),t("strong",[s._v("不可达状态")])]),s._v(" "),t("p",[s._v("执行finalize()方法后，对象还是没有被其他变量引用，那么对象就变成了不可达状态。")]),s._v(" "),t("h3",{attrs:{id:"对象的强引用-软引用-弱引用和虚引用的区别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象的强引用-软引用-弱引用和虚引用的区别是什么"}},[s._v("#")]),s._v(" 对象的强引用，软引用，弱引用和虚引用的区别是什么？")]),s._v(" "),t("h5",{attrs:{id:"强引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强引用"}},[s._v("#")]),s._v(" 强引用")]),s._v(" "),t("p",[s._v("就是普通的变量对对象的引用，强引用的对象不会被系统回收。")]),s._v(" "),t("h5",{attrs:{id:"软引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软引用"}},[s._v("#")]),s._v(" 软引用")]),s._v(" "),t("p",[s._v("当内存空间足够时，软引用的对象不会被系统回收。当内存空间不足时，软引用的对象可能被系统回收。通常用于内存敏感的程序中。")]),s._v(" "),t("h5",{attrs:{id:"弱引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#弱引用"}},[s._v("#")]),s._v(" 弱引用")]),s._v(" "),t("p",[s._v("引用级别比软引用低，对于只有软引用的对象，不管内存是否足够，在垃圾回收时， 都可能会被系统回收。")]),s._v(" "),t("h5",{attrs:{id:"虚引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#虚引用"}},[s._v("#")]),s._v(" 虚引用")]),s._v(" "),t("p",[s._v("虚引用主要用于跟踪对象被垃圾回收的状态，在垃圾回收时可以收到一个通知。")]),s._v(" "),t("h3",{attrs:{id:"双亲委派机制是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#双亲委派机制是什么"}},[s._v("#")]),s._v(" 双亲委派机制是什么？")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/4491294-8edc15f60a58bd0b.png",alt:"img"}})]),s._v(" "),t("p",[s._v("就是类加载器一共有三种：")]),s._v(" "),t("p",[t("strong",[s._v("启动类加载器")]),s._v("：主要是在加载JAVA_HOME/lib目录下的特定名称jar包，例如rt.jar包，像java.lang就在这个jar包中。")]),s._v(" "),t("p",[t("strong",[s._v("扩展类加载器")]),s._v("：主要是加载JAVA_HOME/lib/ext目录下的具备通用性的类库。")]),s._v(" "),t("p",[t("strong",[s._v("应用程序类加载器")]),s._v("：加载用户类路径下所有的类库，也就是程序中默认的类加载器。")]),s._v(" "),t("p",[s._v("工作流程：")]),s._v(" "),t("p",[s._v("除启动类加载器以外，所有类加载器都有自己的父类加载器，类加载器收到一个类加载请求时，首先会判断类是否已经加载过了，没有的话会调用父类加载器的的loadClass方法，将请求委派为父加载器，当父类加载器无法完成类加载请求时，子加载器才尝试去加载这个类。\n目的是为了保证每个类只加载一次，并且是由特定的类加载器进行加载（都是首先让启动类来进行加载）。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("？"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("？"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用synchronized加锁，保证不会重复加载")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoadingLock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//判断这个类是否已加载")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("？"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findLoadedClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//有父类加载器，让父类加载器先尝试加载")]),s._v("\n                        c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findBootstrapClassOrNull")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\t\t\t\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用当前类加载器进行类加载")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n                    c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// do some stats")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolveClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("？"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br")])]),t("h3",{attrs:{id:"怎么自定义一个类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#怎么自定义一个类加载器"}},[s._v("#")]),s._v(" 怎么自定义一个类加载器？")]),s._v(" "),t("p",[s._v("加载一个类时，一般是调用类加载器的loadClass()方法来加载一个类，loadClass()方法的工作流程如下：")]),s._v(" "),t("p",[s._v("1.先调用findLoadedClass(className)来获取这个类，判断类是否已加载。")]),s._v(" "),t("p",[s._v("2.如果未加载，如果父类加载器不为空，调用父类加载器的loadClass()来加载这个类，父类加载器为空，就调用父类加载器加载这个类。")]),s._v(" "),t("p",[s._v("3.父类加载器加载失败，那么调用该类加载器findClass(className)方法来加载这个类。")]),s._v(" "),t("p",[s._v("所以我们一般自定义类加载器都是"),t("strong",[s._v("继承ClassLoader，重写findClass()方法")]),s._v("，来实现类加载，这样不会违背双亲委派类加载机制，也可以通过重写loadClass()方法进行类加载，但是这样会违背双亲委派类加载机制。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DelegationClassLoader")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" classpath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DelegationClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" classpath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("classpath "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" classpath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("？"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InputStream")]),s._v(" is "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" classFilePath "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("classpath "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('".class"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      is "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FileInputStream")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("classFilePath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" buf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("is"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("available")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      is"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("read")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("buf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("defineClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" buf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" buf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("is "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          is"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOError")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IllegalAccessException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InstantiationException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MalformedURLException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("sun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("applet"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Main")]),s._v(" main1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("sun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("applet"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DelegationClassLoader")]),s._v(" cl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DelegationClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java-study/target/classes/"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSystemClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sun.applet.Main"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("？"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" clz "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" cl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" main2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" clz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main1 class: "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" main1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main2 class: "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" main2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main1 classloader: "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" main1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main2 classloader: "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" main2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" itrCl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" cl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("itrCl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("itrCl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      itrCl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" itrCl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br")])]),t("h3",{attrs:{id:"类加载的过程是什么样的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类加载的过程是什么样的"}},[s._v("#")]),s._v(" 类加载的过程是什么样的？")]),s._v(" "),t("h4",{attrs:{id:"类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类加载器"}},[s._v("#")]),s._v(" 类加载器")]),s._v(" "),t("p",[s._v("类加载器是 Java 运行时环境（Java Runtime Environment）的一部分，负责动态加载 Java 类到 Java 虚拟机的内存空间中。"),t("strong",[s._v("类通常是按需加载，即第一次使用该类时才加载。")]),s._v(" 由于有了类加载器，Java 运行时系统不需要知道文件与文件系统。每个 Java 类必须由某个类加载器装入到内存。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/jvm_classlaoder_architecture.svg",alt:"jvm_classloader_architecture"}})]),s._v(" "),t("p",[s._v("类装载器除了要定位和导入二进制 class 文件外，还必须负责验证被导入类的正确性，为变量分配初始化内存，以及帮助解析符号引用。这些动作必须严格按一下顺序完成：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("装载")]),s._v("：查找并装载类型的二进制数据。")]),s._v(" "),t("li",[t("strong",[s._v("链接")]),s._v("：执行验证、准备以及解析(可选) -\n-"),t("strong",[s._v("验证")]),s._v("：确保被导入类型的正确性\n-"),t("strong",[s._v("准备")]),s._v("：为类变量分配内存，并将其初始化为默认值。")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("解析")]),s._v("：把类型中的符号引用转换为直接引用。")])]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[t("strong",[s._v("初始化")]),s._v("：把类变量初始化为正确的初始值。")])]),s._v(" "),t("h4",{attrs:{id:"装载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#装载"}},[s._v("#")]),s._v(" 装载")]),s._v(" "),t("h5",{attrs:{id:"类加载器分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类加载器分类"}},[s._v("#")]),s._v(" 类加载器分类")]),s._v(" "),t("p",[s._v("在Java虚拟机中存在多个类装载器，Java应用程序可以使用两种类装载器：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Bootstrap ClassLoader")]),s._v("：此装载器是 Java 虚拟机实现的一部分。由原生代码（如C语言）编写，不继承自 "),t("code",[s._v("java.lang.ClassLoader")]),s._v(" 。负责加载核心 Java 库，启动类装载器通常使用某种默认的方式从本地磁盘中加载类，包括 Java API。")]),s._v(" "),t("li",[t("strong",[s._v("Extention Classloader")]),s._v("：用来在"),t("code",[s._v("<JAVA_HOME>/jre/lib/ext")]),s._v(" ,或 "),t("code",[s._v("java.ext.dirs")]),s._v(" 中指明的目录中加载 Java 的扩展库。 Java 虚拟机的实现会提供一个扩展库目录。")]),s._v(" "),t("li",[t("strong",[s._v("Application Classloader")]),s._v("：根据 Java应用程序的类路径（ "),t("code",[s._v("java.class.path")]),s._v(" 或 "),t("code",[s._v("CLASSPATH")]),s._v(" 环境变量）来加载 Java 类。一般来说，Java 应用的类都是由它来完成加载的。可以通过 "),t("code",[s._v("ClassLoader.getSystemClassLoader()")]),s._v(" 来获取它。")]),s._v(" "),t("li",[t("strong",[s._v("自定义类加载器")]),s._v("：可以通过继承 "),t("code",[s._v("java.lang.ClassLoader")]),s._v(" 类的方式实现自己的类加载器，以满足一些特殊的需求而不需要完全了解 Java 虚拟机的类加载的细节。")])]),s._v(" "),t("h5",{attrs:{id:"全盘负责双亲委托机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全盘负责双亲委托机制"}},[s._v("#")]),s._v(" 全盘负责双亲委托机制")]),s._v(" "),t("p",[s._v("在一个 JVM 系统中，至少有 3 种类加载器，那么这些类加载器如何配合工作？在 JVM 种类加载器通过 "),t("strong",[s._v("全盘负责双亲委托机制")]),s._v(" 来协调类加载器。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("全盘负责")]),s._v("：指当一个 "),t("code",[s._v("ClassLoader")]),s._v(" 装载一个类的时，除非显式地使用另一个 "),t("code",[s._v("ClassLoader")]),s._v(" ，该类所依赖及引用的类也由这个 "),t("code",[s._v("ClassLoader")]),s._v(" 载入。")]),s._v(" "),t("li",[t("strong",[s._v("双亲委托机制")]),s._v("：指先委托父装载器寻找目标类，只有在找不到的情况下才从自己的类路径中查找并装载目标类。")])]),s._v(" "),t("p",[s._v("全盘负责双亲委托机制只是 Java 推荐的机制，并不是强制的机制。实现自己的类加载器时，如果想保持双亲委派模型，就应该重写 "),t("code",[s._v("findClass(name)")]),s._v(" 方法；如果想破坏双亲委派模型，可以重写 "),t("code",[s._v("loadClass(name)")]),s._v(" 方法。")]),s._v(" "),t("h5",{attrs:{id:"装载入口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#装载入口"}},[s._v("#")]),s._v(" 装载入口")]),s._v(" "),t("p",[s._v("所有Java虚拟机实现必须在每个类或接口首次主动使用时初始化。以下六种情况符合主动使用的要求：")]),s._v(" "),t("ul",[t("li",[s._v("当创建某个类的新实例时(new、反射、克隆、序列化)")]),s._v(" "),t("li",[s._v("调用某个类的静态方法")]),s._v(" "),t("li",[s._v("使用某个类或接口的静态字段，或对该字段赋值(用final修饰的静态字段除外，它被初始化为一个编译时常量表达式)")]),s._v(" "),t("li",[s._v("当调用Java API的某些反射方法时。")]),s._v(" "),t("li",[s._v("初始化某个类的子类时。")]),s._v(" "),t("li",[s._v("当虚拟机启动时被标明为启动类的类。")])]),s._v(" "),t("p",[s._v("除以上六种情况，所有其他使用Java类型的方式都是被动的，它们不会导致Java类型的初始化。\n当类是被动引用时，不会触发初始化：")]),s._v(" "),t("p",[s._v("1.通过子类去调用父类的静态变量，不会触发子类的初始化，只会触发包含这个静态变量的类初始化，例如执行这样的代码"),t("code",[s._v("SubClass.fatherStaticValue")]),s._v("只会触发FatherClass的初始化，不会触发SubClass的初始化，因为fatherStaticValue是FatherClass的变量")]),s._v(" "),t("p",[s._v("2.通过数组定义类引用类，SuperClass[] array = new SuperClass[10];")]),s._v(" "),t("p",[s._v("不会触发SuperClass类的初始化，但是执行字节码指令newarray会触发另外一个类[Lorg.fenixsoft.classloading.SuperClass的初始化，这个类继承于Object类，是一个包装类，里面包含了访问数组的所有方法，")]),s._v(" "),t("p",[s._v("3.只引用类的常量不会触发初始化,因为常量在编译阶段进入常量池")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SuperClass")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//引用常量编译时会直接存入常量池")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SuperClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("对于接口来说，只有在某个接口声明的非常量字段被使用时，该接口才会初始化，而不会因为事先这个接口的子接口或类要初始化而被初始化。")]),s._v(" "),t("p",[t("strong",[s._v("父类需要在子类初始化之前被初始化")]),s._v("。当实现了接口的类被初始化的时候，不需要初始化父接口。然而，当实现了父接口的子类(或者是扩展了父接口的子接口)被装载时，父接口也要被装载。(只是被装载，没有初始化)")]),s._v(" "),t("h4",{attrs:{id:"验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[s._v("#")]),s._v(" 验证")]),s._v(" "),t("p",[s._v("确认装载后的类型符合Java语言的语义，并且不会危及虚拟机的完整性。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("装载时验证")]),s._v("：检查二进制数据以确保数据全部是预期格式、确保除 Object 之外的每个类都有父类、确保该类的所有父类都已经被装载。")]),s._v(" "),t("li",[t("strong",[s._v("正式验证阶段")]),s._v("：检查 final 类不能有子类、确保 final 方法不被覆盖、确保在类型和超类型之间没有不兼容的方法声明(比如拥有两个名字相同的方法，参数在数量、顺序、类型上都相同，但返回类型不同)。")]),s._v(" "),t("li",[t("strong",[s._v("符号引用的验证")]),s._v("：当虚拟机搜寻一个被符号引用的元素(类型、字段或方法)时，必须首先确认该元素存在。如果虚拟机发现元素存在，则必须进一步检查引用类型有访问该元素的权限。")])]),s._v(" "),t("h4",{attrs:{id:"准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[s._v("#")]),s._v(" 准备")]),s._v(" "),t("p",[s._v("在准备阶段，Java虚拟机为类变量分配内存，"),t("strong",[s._v("设置默认初始值")]),s._v("。但在到到初始化阶段之前，类变量都没有被初始化为真正的初始值。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("类型")]),s._v(" "),t("th",[s._v("默认值")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("int")]),s._v(" "),t("td",[s._v("0")])]),s._v(" "),t("tr",[t("td",[s._v("long")]),s._v(" "),t("td",[s._v("0L")])]),s._v(" "),t("tr",[t("td",[s._v("short")]),s._v(" "),t("td",[s._v("(short)0")])]),s._v(" "),t("tr",[t("td",[s._v("char")]),s._v(" "),t("td",[s._v("’\\u0000’")])]),s._v(" "),t("tr",[t("td",[s._v("byte")]),s._v(" "),t("td",[s._v("(byte)0")])]),s._v(" "),t("tr",[t("td",[s._v("blooean")]),s._v(" "),t("td",[s._v("false")])]),s._v(" "),t("tr",[t("td",[s._v("float")]),s._v(" "),t("td",[s._v("0.0f")])]),s._v(" "),t("tr",[t("td",[s._v("double")]),s._v(" "),t("td",[s._v("0.0d")])]),s._v(" "),t("tr",[t("td",[s._v("reference")]),s._v(" "),t("td",[s._v("null")])])])]),s._v(" "),t("h4",{attrs:{id:"解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解析"}},[s._v("#")]),s._v(" 解析")]),s._v(" "),t("p",[s._v("https://www.zhihu.com/question/30300585")]),s._v(" "),t("p",[s._v("解析的过程就是在类型的常量池总寻找类、接口、字段和方法的符号引用，"),t("strong",[s._v("把这些符号引用替换为直接引用的过程")]),s._v("。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("类或接口的解析")]),s._v("：判断所要转化成的直接引用是数组类型，还是普通的对象类型的引用，从而进行不同的解析。")]),s._v(" "),t("li",[t("code",[s._v("字段解析")]),s._v("：对字段进行解析时，会先在本类中查找是否包含有简单名称和字段描述符都与目标相匹配的字段，如果有，则查找结束；如果没有，则会按照继承关系从上往下递归搜索该类所实现的各个接口和它们的父接口，还没有，则按照继承关系从上往下递归搜索其父类，直至查找结束，")])]),s._v(" "),t("h4",{attrs:{id:"初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[s._v("#")]),s._v(" 初始化")]),s._v(" "),t("p",[t("strong",[s._v("所有的类变量(即静态量)初始化语句和类型的静态初始化器都被Java编译器收集在一起，放到一个特殊的方法中，这个步骤就是初始化类静态变量和执行静态代码块。")]),s._v(" 对于类来说，这个方法被称作类初始化方法；对于接口来说，它被称为接口初始化方法。在类和接口的 class 文件中，这个方法被称为"),t("code",[s._v("<clinit>")]),s._v("。")]),s._v(" "),t("ol",[t("li",[s._v("如果存在直接父类，且直接父类没有被初始化，先初始化直接父类。")]),s._v(" "),t("li",[s._v("如果类存在一个类初始化方法，执行此方法。")])]),s._v(" "),t("p",[s._v("这个步骤是递归执行的，即第一个初始化的类一定是"),t("code",[s._v("Object")]),s._v("。")]),s._v(" "),t("p",[t("strong",[s._v("Java虚拟机必须确保初始化过程被正确地同步。")]),s._v(" 如果多个线程需要初始化一个类，仅仅允许一个线程来进行初始化，其他线程需等待。")]),s._v(" "),t("blockquote",[t("p",[s._v("这个特性可以用来写单例模式。")])]),s._v(" "),t("h5",{attrs:{id:"clinit-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#clinit-方法"}},[s._v("#")]),s._v(" Clinit 方法")]),s._v(" "),t("ul",[t("li",[s._v("对于静态变量和静态初始化语句来说：执行的顺序和它们在类或接口中出现的顺序有关。")]),s._v(" "),t("li",[t("strong",[s._v("并非所有的类都需要在它们的class文件中拥有"),t("clinit",[s._v("()方法，")])],1),s._v(" 如果类没有声明任何类变量，也没有静态初始化语句，那么它就不会有"),t("code",[s._v("<clinit>()")]),s._v("方法。如果类声明了类变量，但没有明确的使用类变量初始化语句或者静态代码块来初始化它们，也不会有"),t("code",[s._v("<clinit>()")]),s._v("方法。如果类仅包含静态"),t("code",[s._v("final")]),s._v("常量的类变量初始化语句，而且这些类变量初始化语句采用编译时常量表达式，类也不会有"),t("code",[s._v("<clinit>()")]),s._v("方法。"),t("strong",[s._v("只有那些需要执行Java代码来赋值的类才会有"),t("clinit",[s._v("()")])],1)]),s._v(" "),t("li",[t("code",[s._v("final")]),s._v("常量：Java虚拟机在使用它们的任何类的常量池或字节码中直接存放的是它们表示的常量值。")])]),s._v(" "),t("h3",{attrs:{id:"jvm-内存区域分布是什么样的-gc-发生在哪些部分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm-内存区域分布是什么样的-gc-发生在哪些部分"}},[s._v("#")]),s._v(" JVM 内存区域分布是什么样的？gc 发生在哪些部分？")]),s._v(" "),t("p",[s._v("Java虚拟机的内存区域主要分为"),t("strong",[s._v("虚拟机栈")]),s._v("，"),t("strong",[s._v("本地方法栈")]),s._v("，"),t("strong",[s._v("程序计数器")]),s._v("，堆，"),t("strong",[s._v("方法区")]),s._v("。垃圾回收主要是对"),t("strong",[s._v("堆")]),s._v("中的对象进行回收，方法区里面也会进行一些垃圾回收，但是方法区中的内存回收出现的频率会比较低，主要是针对"),t("strong",[s._v("常量池的回收")]),s._v(" 和 "),t("strong",[s._v("对类型的卸载")]),s._v("，判定一个常量是否是“废弃常量”比较简单，不被引用就行了，而要判定一个类是否是“无用的类”的条件则相对苛刻许多。类需要同时满足下面3个条件才能算是“无用的类”：")]),s._v(" "),t("p",[s._v("1.该类所有的实例都已经被回收，也就是Java堆中不存在该类的任何实例；")]),s._v(" "),t("p",[s._v("2.加载该类的ClassLoader已经被回收；")]),s._v(" "),t("p",[s._v("3.该类对应的 java.lang.Class 对象没有在任何地方被引用，无法在任何地方通过反射访问该类的方法；")]),s._v(" "),t("h5",{attrs:{id:"虚拟机栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机栈"}},[s._v("#")]),s._v(" 虚拟机栈")]),s._v(" "),t("p",[s._v("是Java方法执行的内存模型，主要是用于方法执行的，每次执行方法时就会创建一个栈帧来压入栈中，每个栈帧存储了方法调用需要的数据，例如局部变量表，操作数栈等。")]),s._v(" "),t("p",[s._v("局部变量表主要是存储方法的参数和创建的局部变量（基本类型或者引用类型），它的大小在编译时就固定了，方法有一个Code属性记录了需要的局部变量表的大小。")]),s._v(" "),t("p",[s._v("操作数栈是一个栈，主要用来做算术运算及调用其他方法时存储传参，调用其他方法时，当前方法栈帧的操作数栈会跟其他方法的局部变量表有一定的重叠，主要便于共享这些传递参数，节约内存空间。（最大深度也是编译时就计算好的。）")]),s._v(" "),t("h5",{attrs:{id:"本地方法栈-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地方法栈-2"}},[s._v("#")]),s._v(" 本地方法栈")]),s._v(" "),t("p",[s._v("线程在调用native方法时使用的栈。")]),s._v(" "),t("h5",{attrs:{id:"程序计数器-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#程序计数器-2"}},[s._v("#")]),s._v(" 程序计数器")]),s._v(" "),t("p",[s._v("跟虚拟机栈，本地方法栈一样，程序计数器也是线程私有的，主要用来记录当前线程执行的字节码指令的行号，字节码解释器通过改变这个计数器来选取下一条需要执行的字节码指令。")]),s._v(" "),t("h5",{attrs:{id:"堆"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#堆"}},[s._v("#")]),s._v(" 堆")]),s._v(" "),t("p",[s._v("用来存储对象和数据的区域，被所有线程共享，在物理上可以是不连续的。")]),s._v(" "),t("h5",{attrs:{id:"方法区-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法区-2"}},[s._v("#")]),s._v(" 方法区")]),s._v(" "),t("p",[s._v("方法区也是被线程共享的，主要存放类型信息，常量，静态变量，方法去中有一个运行时常量池。")]),s._v(" "),t("p",[s._v("Java中的类在编译后会生成class文件，class文件除了包含变量，方法，接口信息外还包含一个常量池表，用于存放编译时生成的各种字面量和符号引用，在类加载后，字符流常量池会被存放在方法区中的运行时常量池中，运行期间也会可以将新的常量添加到运行时常量池，例如对String的实例调用intern方法。")]),s._v(" "),t("h3",{attrs:{id:"垃圾回收算法有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收算法有哪些"}},[s._v("#")]),s._v(" 垃圾回收算法有哪些？")]),s._v(" "),t("p",[s._v("垃圾回收算法一般有四种")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/1581500802565.jpg",alt:"1581500802565"}})]),s._v(" "),t("h4",{attrs:{id:"标记-清除算法-一般用于老年代"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标记-清除算法-一般用于老年代"}},[s._v("#")]),s._v(" 标记-清除算法(一般用于老年代)")]),s._v(" "),t("p",[s._v("就是对要回收的对象进行标记，标记完成后统一回收。（CMS垃圾收集器使用这种）")]),s._v(" "),t("p",[s._v("缺点：")]),s._v(" "),t("p",[t("strong",[s._v("效率不稳定")])]),s._v(" "),t("p",[s._v("执行效率不稳定，有大量对象时，并且有大量对象需要回收时，执行效率会降低。")]),s._v(" "),t("p",[t("strong",[s._v("内存碎片化")])]),s._v(" "),t("p",[s._v("内存碎片化，会产生大量不连续的内存碎片。（内存碎片只能通过使用分区空闲分配链表来分配内存）")]),s._v(" "),t("h4",{attrs:{id:"标记-复制算法-一般用于新生代"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标记-复制算法-一般用于新生代"}},[s._v("#")]),s._v(" 标记-复制算法(一般用于新生代)")]),s._v(" "),t("p",[s._v("就是将内存分为两块，每次只用其中一块，垃圾回收时将存活对象，拷贝到另一块内存。（serial new，parallel new和parallel scanvage垃圾收集器）")]),s._v(" "),t("p",[s._v("缺点：")]),s._v(" "),t("p",[t("strong",[s._v("不适合存活率高的老年代")])]),s._v(" "),t("p",[s._v("存活率较高时需要很多复制操作，效率会降低，所以老年代一般不使用这种算法。")]),s._v(" "),t("p",[t("strong",[s._v("浪费内存")])]),s._v(" "),t("p",[s._v("会浪费一半的内存，")]),s._v(" "),t("p",[s._v("解决方案是新生代的内存配比是Eden:From Survivor: To Survivor = 8比1比1")]),s._v(" "),t("p",[s._v("每次使用时，Eden用来分配新的对象，From Survivor存放上次垃圾回收后存活的对象，只使用Eden和From Survivor的空间，To Survivor是空的，垃圾回收时将存活对象拷贝到To Survivor，当空间不够时，从老年代进行分配担保。")]),s._v(" "),t("h4",{attrs:{id:"标记-整理算法-一般用于老年代"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标记-整理算法-一般用于老年代"}},[s._v("#")]),s._v(" 标记-整理算法(一般用于老年代)")]),s._v(" "),t("p",[s._v("标记-整理算法跟标记-清除算法适用的场景是一样的，都是用于老年代，也就是存活对象比较多的情况。标记-整理算法的流程就是让存活对象往内存空间一端移动，然后直接清理掉边界以外的内存。（parallel Old和Serial old收集器就是采用该算法进行回收的）")]),s._v(" "),t("p",[t("strong",[s._v("吞吐量高")])]),s._v(" "),t("p",[s._v("移动时内存操作会比较复杂，需要移动存活对象并且更新所有对象的引用，会是一种比较重的操作，但是如果不移动的话，会有内存碎片，内存分配时效率会变低，所以由于内存分配的频率会比垃圾回收的频率高很多，所以从吞吐量方面看，标记-整理法高于标记-清除法。")]),s._v(" "),t("p",[t("strong",[s._v("延迟高")])]),s._v(" "),t("p",[s._v("但是由于需要移动对象，停顿时间会比较长，垃圾回收时延迟会高一些，强调低延迟的CMS收集器一般是大部分时候用标记-清除算法，当内存碎片化程度达到一定程度时，触发Full GC，会使用标记-整理算法清理一次。")]),s._v(" "),t("h4",{attrs:{id:"分代收集算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分代收集算法"}},[s._v("#")]),s._v(" 分代收集算法")]),s._v(" "),t("p",[s._v("弱分代假说：就是绝大部分对象都是朝生夕灭。")]),s._v(" "),t("p",[s._v("强分代假说：熬过越多次垃圾收集的对象就越难以消忙。")]),s._v(" "),t("p",[s._v("就是现在的系统一般都比较复杂，堆中的对象也会比较多，如果使用对所有对象都分析是否需要回收，那么效率会比较低，所以有了分代收集算法，就是对熬过垃圾回收次数不同的对象进行分类，分为新生代和老年代，采用不同回收策略。")]),s._v(" "),t("p",[s._v("新生代存活率低，使用标记-复制算法。新生代发生的垃圾收集交Minor GC，发生频率较高")]),s._v(" "),t("p",[s._v("老年代存活率高，使用标记-清除算法，或者标记-整理算法。（CMS垃圾收集器一般是多数时间采用标记-清除算法，内存碎片化程度较高时，使用标记-整理算法收集一次）。老年代内存满时会触发Major GC（Full GC），一般触发的频率比较低。")]),s._v(" "),t("h4",{attrs:{id:"如何确定一个对象是否可以被回收"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何确定一个对象是否可以被回收"}},[s._v("#")]),s._v(" 如何确定一个对象是否可以被回收？")]),s._v(" "),t("p",[s._v("有两种算法，一种是引用计数法，可以记录每个对象被引用的数量来确定，当被引用的数量为0时，代表可以回收。\n一种是可达性分析法。就是判断对象的引用链是否可达来确定对象是否可以回收。就是把所有对象之间的引用关系看成是一个图，通过从一些GC Roots对象作为起点，根据这些对象的引用关系一直向下搜索，走过的路径就是引用链，当所有的GCRoots对象的引用链都到达不了这个对象，说明这个对象不可达，可以回收。\nGCRoots对象一般是当前肯定不会被回收的对象，一般是虚拟机栈中局部变量表中的对象，方法区的类静态变量引用的对象，方法区常量引用的对象，本地方法栈中Native方法引用的对象。")]),s._v(" "),t("h3",{attrs:{id:"内存分配策略有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存分配策略有哪些"}},[s._v("#")]),s._v(" 内存分配策略有哪些？")]),s._v(" "),t("h4",{attrs:{id:"内存划分策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存划分策略"}},[s._v("#")]),s._v(" 内存划分策略：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200303152150129.png",alt:"image-20200303152150129"}})]),s._v(" "),t("p",[s._v("Serial收集器中，新生代与老年代的内存分配是1：2，然后新生代分为Eden区，From区，To区，比例是8:1:1。")]),s._v(" "),t("h5",{attrs:{id:"新生代"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新生代"}},[s._v("#")]),s._v(" 新生代")]),s._v(" "),t("p",[s._v("分为Eden，From Survivor，To Survivor，8：1：1")]),s._v(" "),t("p",[s._v("Eden用来分配新对象，满了时会触发Minor GC。")]),s._v(" "),t("p",[s._v("From Survivor是上次Minor GC后存活的对象。")]),s._v(" "),t("p",[s._v("To Survivor是用于下次Minor GC时存放存活的对象。")]),s._v(" "),t("h5",{attrs:{id:"老年代"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#老年代"}},[s._v("#")]),s._v(" 老年代")]),s._v(" "),t("p",[s._v("用于存放存活时间比较长的对象，大的对象，当容量满时会触发Major GC（Full GC）")]),s._v(" "),t("h4",{attrs:{id:"内存分配策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存分配策略"}},[s._v("#")]),s._v(" 内存分配策略：")]),s._v(" "),t("ol",[t("li",[s._v("对象优先在Eden分配")])]),s._v(" "),t("p",[s._v("当Eden区没有足够空间进行分配时，虚拟机将发起一次MinorGC。现在的商业虚拟机一般都采用复制算法来回收新生代，将内存分为一块较大的Eden空间和两块较小的Survivor空间，每次使用Eden和其中一块Survivor。 当进行垃圾回收时，将Eden和Survivor中还存活的对象一次性地复制到另外一块空闲的Survivor空间上，最后处理掉Eden和刚才的Survivor空间。（HotSpot虚拟机默认Eden和Survivor的大小比例是8:1）当Survivor空间不够用时，需要依赖老年代进行分配担保。")]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("大对象直接进入老年代")])]),s._v(" "),t("p",[s._v("所谓的大对象是指，需要大量连续内存空间的Java对象，最典型的大对象就是那种很长的字符串以及数组，为了避免大对象在Eden和两个Survivor区之间进行来回复制，所以当对象超过-XX:+PrintTenuringDistribution参数设置的大小时，直接从老年代分配")]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[s._v("长期存活的对象将进入老年代")])]),s._v(" "),t("p",[s._v("当对象在新生代中经历过一定次数（XX:MaxTenuringThreshold参数设置的次数，默认为15）的Minor GC后，就会被晋升到老年代中。")]),s._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[s._v("动态对象年龄判定")])]),s._v(" "),t("p",[s._v("为了更好地适应不同程序的内存状况，虚拟机并不是永远地要求对象年龄必须达到了MaxTenuringThreshold才能晋升老年代，如果在Survivor空间中某个年龄所有对象大小的总和>Survivor空间的50%，年龄大于或等于该年龄的对象就可以直接进入老年代，无须等到MaxTenuringThreshold中要求的年龄。")]),s._v(" "),t("h3",{attrs:{id:"minorgc和fullgc是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#minorgc和fullgc是什么"}},[s._v("#")]),s._v(" MinorGC和FullGC是什么？")]),s._v(" "),t("p",[s._v("Minor GC：对新生代进行回收，不会影响到年老代。因为新生代的 Java 对象大多死亡频繁，所以 Minor GC 非常频繁，一般在这里使用速度快、效率高的算法，使垃圾回收能尽快完成。")]),s._v(" "),t("p",[s._v("Full GC：也叫 Major GC，对整个堆进行回收，包括新生代和老年代。由于Full GC需要对整个堆进行回收，所以比Minor GC要慢，因此应该尽可能减少Full GC的次数，导致Full GC的原因包括：老年代被写满和System.gc()被显式调用等。")]),s._v(" "),t("h3",{attrs:{id:"触发minor-gc的条件有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#触发minor-gc的条件有哪些"}},[s._v("#")]),s._v(" 触发Minor GC的条件有哪些？")]),s._v(" "),t("p",[s._v("1.为新对象分配内存时，新生代的Eden区空间不足。\n新生代回收日志：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("05")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("T16"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.736")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0800")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.803")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("GC "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Allocation")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Failure")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("05")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("T16"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.736")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0800")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.803")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ParNew")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("838912")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("22016K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("943744")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0982676")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("838912")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("22016K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1992320")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0983280")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Times")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.19")]),s._v(" sys"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.01")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" real"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.10")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"触发full-gc的条件有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#触发full-gc的条件有哪些"}},[s._v("#")]),s._v(" 触发Full GC的条件有哪些？")]),s._v(" "),t("p",[s._v("主要分为三种：")]),s._v(" "),t("h4",{attrs:{id:"_1-system-gc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-system-gc"}},[s._v("#")]),s._v(" 1.system.gc()")]),s._v(" "),t("p",[s._v("代码中调用system.gc()方法，建议JVM进行垃圾回收。")]),s._v(" "),t("h4",{attrs:{id:"_2-方法区空间不足"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-方法区空间不足"}},[s._v("#")]),s._v(" 2.方法区空间不足")]),s._v(" "),t("p",[s._v("方法区中存放的是一些类的信息，当系统中要加载的类、反射的类和调用的方法较多时，方法区可能会被占满，触发 Full GC")]),s._v(" "),t("h4",{attrs:{id:"_3-老年代空间不足"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-老年代空间不足"}},[s._v("#")]),s._v(" 3.老年代空间不足")]),s._v(" "),t("p",[s._v("而老年代空间不足又有很多种情况：\n"),t("strong",[s._v("3.1 Minor GC后，老年代存放不下晋升对象")]),s._v("\n在进行 MinorGC 时， Survivor Space 放不下存活的对象，此时会让这些对象晋升，只能将它们放入老年代，而此时老年代也放不下时造成的。\n还有一些情况也会导致新生代对象晋升，例如存活对象经历的垃圾回收次数超过一定次数（XX:MaxTenuringThreshold参数设置的次数，默认为15），那么会导致晋升，\n或者在Survivor空间中相同年龄所有对象大小的总和大于Survivor空间的一半，年龄大于或等于该年龄的对象就可以直接进入老年代，无须等到MaxTenuringThreshold中要求的年龄。\n"),t("strong",[s._v("3.2 Concurrent Mode Failure")]),s._v("\n在执行 CMS GC 的过程中，同时有对象要放入老年代，而此时老年代空间不足造成的。\n"),t("strong",[s._v("3.3 历次晋升的对象平均大小>老年代的剩余空间")]),s._v("\n这是一个较为复杂的触发情况， HotSpot为了避免由于新生代对象晋升到老年代导致老年代空间不足的现象，\n在进行 Minor GC时，做了一个判断，如果之前统计所得到的 MinorGC 晋升到老年代的平均大小大于老年代的剩余空间，那么就直接触发 Full GC。\n"),t("strong",[s._v("3.4 老年代空间不足以为大对象分配内存")]),s._v("\n因为超过阀值(-XX:+PrintTenuringDistribution参数设置的大小时)的大对象，会直接分配到老年代，如果老年代空间不足，会触发Full GC。")]),s._v(" "),t("h3",{attrs:{id:"垃圾收集器有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集器有哪些"}},[s._v("#")]),s._v(" 垃圾收集器有哪些？")]),s._v(" "),t("p",[s._v("一般老年代使用的就是"),t("strong",[s._v("标记-整理")]),s._v("，或者"),t("strong",[s._v("标记-清除")]),s._v("+标记-整理结合（例如CMS）")]),s._v(" "),t("p",[s._v("新生代就是"),t("strong",[s._v("标记-复制")]),s._v("算法")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("垃圾收集器")]),s._v(" "),t("th",[s._v("特点")]),s._v(" "),t("th",[s._v("算法")]),s._v(" "),t("th",[s._v("适用内存区域")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("Serial")]),s._v(" "),t("td",[s._v("单个GC线程进行垃圾回收，简单高效")]),s._v(" "),t("td",[s._v("标记-复制")]),s._v(" "),t("td",[s._v("新生代")])]),s._v(" "),t("tr",[t("td",[s._v("Serial Old")]),s._v(" "),t("td",[s._v("单个GC线程进行垃圾回收")]),s._v(" "),t("td",[s._v("标记-整理")]),s._v(" "),t("td",[s._v("老年代")])]),s._v(" "),t("tr",[t("td",[s._v("ParNew")]),s._v(" "),t("td",[s._v("是Serial的改进版，就是可以多个GC线程一起进行垃圾回收")]),s._v(" "),t("td",[s._v("标记-复制")]),s._v(" "),t("td",[s._v("新生代")])]),s._v(" "),t("tr",[t("td",[s._v("Parallel Scanvenge收集器（吞吐量优先收集器)")]),s._v(" "),t("td",[s._v("高吞吐量，吞吐量=执行用户线程的时间/CPU执行总时间")]),s._v(" "),t("td",[s._v("标记-复制")]),s._v(" "),t("td",[s._v("新生代")])]),s._v(" "),t("tr",[t("td",[s._v("Parallel Old收集器")]),s._v(" "),t("td",[s._v("支持多线程收集")]),s._v(" "),t("td",[s._v("标记-整理")]),s._v(" "),t("td",[s._v("老年代")])]),s._v(" "),t("tr",[t("td",[s._v("CMS收集器（并发低停顿收集器）")]),s._v(" "),t("td",[s._v("低停顿")]),s._v(" "),t("td",[s._v("标记-清除+标记-整理")]),s._v(" "),t("td",[s._v("老年代")])]),s._v(" "),t("tr",[t("td",[s._v("G1收集器")]),s._v(" "),t("td",[s._v("低停顿，高吞吐量")]),s._v(" "),t("td",[s._v("标记-复制算法")]),s._v(" "),t("td",[s._v("老年代，新生代")])])])]),s._v(" "),t("h4",{attrs:{id:"serial收集器-标记-复制算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#serial收集器-标记-复制算法"}},[s._v("#")]),s._v(" Serial收集器（标记-复制算法）")]),s._v(" "),t("p",[s._v("就是最简单的垃圾收集器，也是目前 JVM 在 Client 模式默认的垃圾收集器，在进行垃圾收集时会停止用户线程，然后使用一个收集线程进行垃圾收集。主要用于新生代，使用标记-复制算法。")]),s._v(" "),t("p",[s._v("优点是简单高效（与其他收集器的单线程比），内存占用小，因为垃圾回收时就暂停所有用户线程，然后使用一个单线程进行垃圾回收，不用进行线程切换。")]),s._v(" "),t("p",[s._v("缺点是收集时必须停止其他用户线程。")]),s._v(" "),t("h4",{attrs:{id:"serial-old收集器-标记-整理算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#serial-old收集器-标记-整理算法"}},[s._v("#")]),s._v(" Serial Old收集器（标记-整理算法）")]),s._v(" "),t("p",[s._v("跟Serial收集器一样，不过是应用于老年代，使用标记-整理算法。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200228184419205.png",alt:"image-20200228184419205"}})]),s._v(" "),t("h4",{attrs:{id:"parnew收集器-标记-复制算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parnew收集器-标记-复制算法"}},[s._v("#")]),s._v(" ParNew收集器（标记-复制算法）")]),s._v(" "),t("p",[s._v("ParNew收集器是Serial收集器的多线程并行版本，在进行垃圾收集时可以使用多个线程进行垃圾收集。")]),s._v(" "),t("p",[s._v("与Serial收集器主要区别就是支持多线程收集，ParNew收集器应用广泛（JDK9以前，服务端模式垃圾收集组合官方推荐的是ParNew+CMS），因为只有Serial和ParNew才能配合CMS收集器(应用于老年代的并发收集器)一起工作。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200228185412716.png",alt:"image-20200228185412716"}})]),s._v(" "),t("h4",{attrs:{id:"parallel-scanvenge收集器-吞吐量优先收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parallel-scanvenge收集器-吞吐量优先收集器"}},[s._v("#")]),s._v(" Parallel Scanvenge收集器（吞吐量优先收集器）")]),s._v(" "),t("p",[s._v("也支持多线程收集，它的目标是达到一个可控制的吞吐量，就是运行用户代码的时间/(运行用户代码的时间+垃圾回收的时间)比值。高吞吐量可以最高效率地利用处理器资源，尽快完成程序运算任务，适合不需要太多的交互分析任务。不支持并发收集，进行垃圾回收时会暂停用户线程，使用多个垃圾回收线程进行垃圾回收。")]),s._v(" "),t("h4",{attrs:{id:"parallel-old收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parallel-old收集器"}},[s._v("#")]),s._v(" Parallel Old收集器")]),s._v(" "),t("p",[s._v("是Parallel Scanvenge老年代版本，支持多线程收集，使用标记整理法实现的。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200228191619466.png",alt:"image-20200228191619466"}})]),s._v(" "),t("h4",{attrs:{id:"cms-收集器-老年代并发低停顿收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cms-收集器-老年代并发低停顿收集器"}},[s._v("#")]),s._v(" CMS 收集器（老年代并发低停顿收集器）")]),s._v(" "),t("p",[s._v("CMS收集器是第一个支持并发收集的垃圾收集器，在垃圾收集时，用户线程可以和收集线程一起工作，它的执行目标是达到最短回收停顿时间，以获得更好的用户体验。")]),s._v(" "),t("p",[s._v("CMS英文是Concurrent Mark Sweep，是基于标记-清除法+标记-整理算法实现的，步骤如下：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200228195544758.png",alt:"image-20200228195544758"}})]),s._v(" "),t("h4",{attrs:{id:"_1-初始标记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-初始标记"}},[s._v("#")]),s._v(" 1.初始标记")]),s._v(" "),t("p",[s._v("标记那些GC Roots可以直接关联到的对象。")]),s._v(" "),t("h4",{attrs:{id:"_2-并发标记-可以与用户线程并发执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-并发标记-可以与用户线程并发执行"}},[s._v("#")]),s._v(" 2.并发标记(可以与用户线程并发执行)")]),s._v(" "),t("p",[s._v("从GC Roots能关联到的对象直接向下遍历整个对象图，耗时较长，但是可以与用户线程并发执行。")]),s._v(" "),t("p",[s._v("整个标记过程是采用三色标记法来实现的：")]),s._v(" "),t("p",[t("strong",[s._v("白色")]),s._v("：代表还没有遍历的对象。")]),s._v(" "),t("p",[t("strong",[s._v("灰色")]),s._v("：代表已遍历到的对象，但是它直接引用的对象还没有遍历完。")]),s._v(" "),t("p",[t("strong",[s._v("黑色")]),s._v("：代表已遍历到的对象，它直接引用的对象也都已经遍历完。")]),s._v(" "),t("h5",{attrs:{id:"执行流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行流程"}},[s._v("#")]),s._v(" 执行流程：")]),s._v(" "),t("p",[s._v("1.先将所有对象放到白色集合，然后将GC Roots能关联的对象添加到灰色集合。")]),s._v(" "),t("p",[s._v("2.对灰色集合中对象进行遍历，假设从灰色集合中取出的对象是A，将对象A引用的所有对象添加到灰色集合，全部添加完毕后，将A添加到黑色集合。")]),s._v(" "),t("p",[s._v("3.重复第2步，直到灰色集合为空。")]),s._v(" "),t("h5",{attrs:{id:"三色标记法的一些问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三色标记法的一些问题"}},[s._v("#")]),s._v(" 三色标记法的一些问题：")]),s._v(" "),t("h5",{attrs:{id:"_1-对于多标的情况-会生成浮动垃圾"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-对于多标的情况-会生成浮动垃圾"}},[s._v("#")]),s._v(" 1.对于多标的情况，会生成浮动垃圾")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/7779607-7a5ce353116237e2.png",alt:"img"}}),s._v("\n对于这种多标的情况，对象E/F/G是“应该”被回收的。然而因为E已经变为灰色了，其仍会被当作存活对象继续遍历下去。最终的结果是：这部分对象仍会被标记为存活，即本轮GC不会回收这部分内存。\n这部分本应该回收 但是 没有回收到的内存，被称之为“浮动垃圾”。浮动垃圾并不会影响垃圾回收的正确性，只是需要等到下一轮垃圾回收中才被清除。\n另外，针对并发标记开始后的新对象，通常的做法是直接全部当成黑色，本轮不会进行清除。这部分对象期间可能会变为垃圾，这也算是浮动垃圾的一部分。")]),s._v(" "),t("h5",{attrs:{id:"_2-对于引用变动后导致漏标情况的处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-对于引用变动后导致漏标情况的处理"}},[s._v("#")]),s._v(" 2.对于引用变动后导致漏标情况的处理")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/7779607-dab8f35ecb417433.png",alt:""}})]),s._v(" "),t("h5",{attrs:{id:"增量更新法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增量更新法"}},[s._v("#")]),s._v(" 增量更新法")]),s._v(" "),t("p",[s._v("对于这种漏标的情况，CMS垃圾收集器使用的是增量更新法，就是将引用变化后的引用情况进行记录，然后之后进行标记。也就是当E->G变成了E->null,D->G，会对更改后的引用D->G进行记录，用于在重新标记阶段对这种情况进行处理。")]),s._v(" "),t("h5",{attrs:{id:"原始快照法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原始快照法"}},[s._v("#")]),s._v(" 原始快照法")]),s._v(" "),t("p",[s._v("就是对于这种E->G，然后改成D->G，正常来说，应该可能会漏掉，因为D已经是黑色对象了，就不会遍历G了，G1垃圾收集器对这种情况的处理是保存原始快照，就是在并发标记过程中，引用的变动，都会对变动前的引用情况进行记录，会按照变动前的引用情况进行标记，也就是即便E->G变成了E->null,D->G变化了，还是会记录E->G的引用情况，用于在重新标记阶段对这种情况进行处理。")]),s._v(" "),t("h4",{attrs:{id:"_3-重新标记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-重新标记"}},[s._v("#")]),s._v(" 3.重新标记")]),s._v(" "),t("p",[s._v("由于标记时，用户线程在运行，并发标记阶段存在一些标记变动的情况，这一阶段就是修正这些记录。(CMS采用增量更新算法来解决，主要是将更改后的引用关系记录，之后增量更新)")]),s._v(" "),t("h4",{attrs:{id:"_4-并发清除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-并发清除"}},[s._v("#")]),s._v(" 4.并发清除")]),s._v(" "),t("p",[s._v("清除标记阶段判断的已经死亡的对象，由于不需要移动存活对象，这个阶段也可以与用户线程并发执行。")]),s._v(" "),t("h4",{attrs:{id:"g1收集器-garbage-first收集器-标记-整理算法-老年代-新生代都进行回收"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#g1收集器-garbage-first收集器-标记-整理算法-老年代-新生代都进行回收"}},[s._v("#")]),s._v(" G1收集器（Garbage First收集器，标记-整理算法，老年代，新生代都进行回收）")]),s._v(" "),t("p",[s._v("目标是在延迟可控(用户设定的延迟时间)的情况下获得尽可能高的吞吐量。")]),s._v(" "),t("p",[s._v("JDK9以前，服务端模式默认的收集器是Parallel Scavenge+Serial Old。JDK9及之后，默认收集器是G1。G1不按照新生代，老年代进行划分，而是将Java堆划分为多个大小相等的独立Region，每一个Region可以根据需要，扮演新生代的Eden空间，Survivor空间，老年代Old空间和用于分配大对象的Humongous区。回收思路是G1持续跟踪各个Region的回收价值（回收可释放的空间和回收所需时间），然后维护一个优先级列表，在用户设定的最大收集停顿时间内，优先回收那些价值大的Region。")]),s._v(" "),t("p",[s._v("JDK 8 和9中，Region的大小是通过(最大堆大小+最小堆大小)的平均值/2048，一般是需要在1到32M之间。G1认为2048是比较理想的Region数量")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/640.jpeg",alt:"img"}})]),s._v(" "),t("p",[t("strong",[s._v("G1对象分配策略")])]),s._v(" "),t("p",[s._v("说起对象的分配，我们不得不谈谈对象的分配策略。它分为4个阶段：")]),s._v(" "),t("ol",[t("li",[s._v("栈上分配")]),s._v(" "),t("li",[s._v("TLAB(Thread Local Allocation Buffer)线程本地分配缓冲区")]),s._v(" "),t("li",[s._v("共享Eden区中分配")]),s._v(" "),t("li",[s._v("Humongous区分配（超过Region大小50%的对象）")])]),s._v(" "),t("p",[s._v("对象在分配之前会做逃逸分析，如果该对象只会被本线程使用，那么就将该对象在栈上分配。这样对象可以在函数调用后销毁，减轻堆的压力，避免不必要的gc。 如果对象在栈是上分配不成功，就会使用TLAB来分配。TLAB为线程本地分配缓冲区，它的目的为了使对象尽可能快的分配出来。如果对象在一个共享的空间中分配，我们需要采用一些同步机制来管理这些空间内的空闲空间指针。在Eden空间中，每一个线程都有一个固定的分区用于分配对象，即一个TLAB。分配对象时，线程之间不再需要进行任何的同步。")]),s._v(" "),t("p",[s._v("对TLAB空间中无法分配的对象，JVM会尝试在共享Eden空间中进行分配。如果是大对象，则直接在Humongous区分配。")]),s._v(" "),t("p",[s._v("最后，G1提供了两种GC模式，Young GC和Mixed GC，两种都是Stop The World(STW)的。下面我们将分别介绍一下这2种模式。")]),s._v(" "),t("p",[t("strong",[s._v("G1 Young GC")])]),s._v(" "),t("p",[s._v("Young GC主要是对Eden区进行GC，它在Eden空间耗尽时会被触发。在这种情况下，Eden空间的数据移动到Survivor空间中，如果Survivor空间不够，Eden空间的部分数据会直接晋升到年老代空间。Survivor区的数据移动到新的Survivor区中，也有部分数据晋升到老年代空间中。最终Eden空间的数据为空，GC停止工作，应用线程继续执行。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/640-20200510171526372.jpeg",alt:"img"}})]),s._v(" "),t("h5",{attrs:{id:"region如何解决跨代指针"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#region如何解决跨代指针"}},[s._v("#")]),s._v(" Region如何解决跨代指针？")]),s._v(" "),t("p",[s._v("因为老年代old区也会存在对新生代Eden区的引用，如果只是为了收集Eden区而对整个老年代进行扫描，那样开销太大了，所以G1其实会将每个Region分为很多个区，每个区有一个下标，当这个区有对象被其他Region引用时，那么CardTable对应下标下值为0，然后使用一个"),t("strong",[s._v("Rset来存储老年代Region对当前这个新生代Region的引用")]),s._v("，Key是别的Region的起始地址，Value是一个集合，里面的元素是Card Table的Index。对跨代引用的扫描，只需要扫描RSet就行了。")]),s._v(" "),t("p",[s._v("在CMS中，也有RSet的概念，在老年代中有一块区域用来记录指向新生代的引用。这是一种point-out，在进行Young GC时，扫描根时，仅仅需要扫描这一块区域，而不需要扫描整个老年代。")]),s._v(" "),t("p",[s._v("但在G1中，并没有使用point-out（就是记录当前Region对其他Region中对象的引用），这是由于一个Region太小，Region数量太多，如果是用point-out的话，如果需要计算一个Region的可回收的对象数量，需要把所有Region都是扫描一遍会造成大量的扫描浪费，有些根本不需要GC的分区引用也扫描了。于是G1中使用point-in来解决。point-in的意思是哪些Region引用了当前Region中的对象。这样只需要将当前Region中这些对象当做初始标记时的根对象来扫描就可以扫描出因为有跨代引用需要存活的对象，避免了无效的扫描。")]),s._v(" "),t("h5",{attrs:{id:"由于新生代有多个-那么我们需要在新生代之间记录引用吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#由于新生代有多个-那么我们需要在新生代之间记录引用吗"}},[s._v("#")]),s._v(" 由于新生代有多个，那么我们需要在新生代之间记录引用吗？")]),s._v(" "),t("p",[s._v("这是不必要的，原因在于每次GC时，所有新生代都会被扫描，所以只需要记录"),t("strong",[s._v("老年代的Region对新生代的这个Region之间的引用")]),s._v("即可。")]),s._v(" "),t("p",[s._v('需要注意的是，如果引用的对象很多，赋值器需要对每个引用做处理，赋值器开销会很大，为了解决赋值器开销这个问题，在G1 中又引入了另外一个概念，卡表（Card Table）。一个Card Table将一个分区在逻辑上划分为固定大小的连续区域，每个区域称之为卡。卡通常较小，介于128到512字节之间。CardTable通常为字节数组，由Card的索引（即数组下标）来标识每个分区的空间地址。默认情况下，每个卡都未引用。当一个地址空间有引用时，这个地址空间对应的数组索引的值被标记为"0"，即标记为脏引用，此外RSet也将这个数组下标记录下来。一般情况下，这个RSet其实是一个Hash Table集合（每个线程对应一个Hash Table，主要是为了减少多线程并发更新RSet的竞争），每个哈希表的Key是别的Region的起始地址，Value是一个集合，里面的元素是Card Table的Index。')]),s._v(" "),t("p",[s._v("如果Rset是记录每个外来Region对当前Region中对象的引用，这样数量就太多了，所以Card Table只是有很多Byte字节，每个字节记录了Region对应的一个内存区域(卡页)是否是dirty的，为1代表dirty，也就是有其他Region对这个卡页中的对象进行引用。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/2579123-e0b8898d895aee05.png",alt:"img"}})]),s._v(" "),t("p",[t("strong",[s._v("G1 MixGC")])]),s._v(" "),t("p",[s._v("MixGC不仅进行正常的新生代垃圾收集，同时也回收部分后台扫描线程标记的老年代分区。Young GC回收是把新生代活着的对象都拷贝到Survivor的特定区域（Survivor to），剩下的Eden和Survivor from就可以全部回收清理了。那么，mixed GC就是把一部分老年区的region加到Eden和Survivor from的后面，合起来称为collection set, 就是将被回收的集合，下次mixed GC evacuation把他们所有都一并清理。选old region的顺序是垃圾多的（存活对象少）优先。")]),s._v(" "),t("p",[s._v("它的GC步骤分2步：")]),s._v(" "),t("ol",[t("li",[s._v("全局并发标记（global concurrent marking）")]),s._v(" "),t("li",[s._v("拷贝存活对象（evacuation）")])]),s._v(" "),t("p",[s._v("在进行Mix GC之前，会先进行global concurrent marking（全局并发标记）。 global concurrent marking的执行过程是怎样的呢？")]),s._v(" "),t("p",[s._v("在G1 GC中，它主要是为Mixed GC提供标记服务的，并不是一次GC过程的一个必须环节。global concurrent marking的执行过程分为五个步骤：")]),s._v(" "),t("ul",[t("li",[s._v("初始标记（initial mark，STW）\n在此阶段，G1 GC 对根进行标记。该阶段与常规的(STW) 新生代垃圾回收密切相关。")]),s._v(" "),t("li",[s._v("根区域扫描（root region scan）\nG1 GC 在初始标记的存活区扫描对老年代的引用，并标记被引用的对象。该阶段与应用程序（非 STW）同时运行，并且只有完成该阶段后，才能开始下一次 STW 新生代垃圾回收。")]),s._v(" "),t("li",[s._v("并发标记（Concurrent Marking）\nG1 GC 在整个堆中查找可访问的（存活的）对象。该阶段与应用程序同时运行，可以被 STW 新生代垃圾回收中断")]),s._v(" "),t("li",[s._v("最终标记（Remark，STW）\n该阶段是 STW 回收，帮助完成标记周期。G1 GC清空 SATB 缓冲区，跟踪未被访问的存活对象，并执行引用处理。")]),s._v(" "),t("li",[s._v("清除垃圾（Cleanup，STW）\n在这个最后阶段，G1 GC 执行统计和 RSet 净化的 STW 操作。在统计期间，G1 GC 会识别完全空闲的区域和可供进行混合垃圾回收的区域。清理阶段在将空白区域重置并返回到空闲列表时为部分并发。")])]),s._v(" "),t("h5",{attrs:{id:"收集步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#收集步骤"}},[s._v("#")]),s._v(" 收集步骤：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200302181639409.png",alt:"image-20200302181639409"}})]),s._v(" "),t("p",[t("strong",[s._v("初始标记")]),s._v(" 只标记GC Roots直接引用的对象")]),s._v(" "),t("p",[t("strong",[s._v("并发标记")]),s._v(" 从GC Roots开始对堆中对象进行可达性分析，扫描整个对象图，找出要回收的对象。（可以与用户线程并发执行）")]),s._v(" "),t("p",[t("strong",[s._v("最终标记")]),s._v(" 对并发标记阶段，由于用户线程执行造成的改动进行修正，使用原始快照方法。")]),s._v(" "),t("p",[t("strong",[s._v("筛选回收")]),s._v(" 对Region进行排序，根据回收价值，选择任意多个Region构成回收集，将存活对象复制到空的Region中去，因为涉及到存活对象的移动，所以是暂停用户线程的。")]),s._v(" "),t("p",[s._v("相关资料：")]),s._v(" "),t("p",[s._v("https://www.jianshu.com/p/aef0f4765098")]),s._v(" "),t("h3",{attrs:{id:"三色标记法-引用计数-mark-sweep法-标记清除法-三者的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三色标记法-引用计数-mark-sweep法-标记清除法-三者的区别"}},[s._v("#")]),s._v(" 三色标记法，引用计数， Mark-Sweep法（标记清除法）三者的区别？")]),s._v(" "),t("p",[s._v("三色标记法可以与用户线程并发执行。")]),s._v(" "),t("p",[s._v("引用计数法主要没有办法解决循环引用的问题。")]),s._v(" "),t("p",[s._v("标记清除法主要流程就是一开始认为所有对象是0，然后从GC Roots对象开始向下遍历，"),t("strong",[s._v("递归地")]),s._v("遍历所有对象，将能遍历到的对象标记为1。然后遍历结束后，标记为0的对象被认为是可以被销毁的。主要问题在于标记过程需要Stop the world，也就是需要停止用户线程，只有标记线程能运行。")]),s._v(" "),t("p",[s._v("扩展阅读：")]),s._v(" "),t("p",[s._v("https://zhuanlan.zhihu.com/p/87790329")]),s._v(" "),t("h3",{attrs:{id:"垃圾收集器相关的参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集器相关的参数"}},[s._v("#")]),s._v(" 垃圾收集器相关的参数")]),s._v(" "),t("p",[s._v("-XX:+UseSerialGC，虚拟机运行在Client 模式下的默认值，打开此开关后，使用Serial + Serial Old 的收集器组合进行内存回收")]),s._v(" "),t("p",[s._v("-XX:+UseConcMarkSweepGC，打开此开关后，使用"),t("strong",[s._v("ParNew + CMS + Serial Old")]),s._v(" 的收集器组合进行内存回收。Serial Old 收集器将作为CMS 收集器出现Concurrent Mode Failure失败后的后备收集器使用。（我们的线上服务用的都是这个）")]),s._v(" "),t("p",[s._v("-XX:+UseParallelGC，虚拟机运行在Server 模式下的默认值，打开此开关后，使用"),t("strong",[s._v("Parallel Scavenge + Serial Old")]),s._v("（PS MarkSweep）的收集器组合进行内存回收。")]),s._v(" "),t("p",[s._v("-XX:+UseParallelOldGC，打开此开关后，使用Parallel Scavenge + Parallel Old 的收集器组合进行内存回收。")]),s._v(" "),t("p",[s._v("-XX:+UseG1GC，打开此开关后，采用 Garbage First (G1) 收集器")]),s._v(" "),t("p",[s._v("-XX:+UseParNewGC，在JDK1.8被废弃，在JDK1.7还可以使用。打开此开关后，使用ParNew + Serial Old 的收集器组合进行内存回收")]),s._v(" "),t("p",[s._v("参考链接：")]),s._v(" "),t("p",[s._v("https://www.pianshen.com/article/7390335728/")]),s._v(" "),t("h3",{attrs:{id:"目前通常使用的是什么垃圾收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目前通常使用的是什么垃圾收集器"}},[s._v("#")]),s._v(" 目前通常使用的是什么垃圾收集器？")]),s._v(" "),t("h5",{attrs:{id:"怎么查询当前jvm使用的垃圾收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#怎么查询当前jvm使用的垃圾收集器"}},[s._v("#")]),s._v(" 怎么查询当前JVM使用的垃圾收集器？")]),s._v(" "),t("p",[s._v("使用这个命令可以查询当前使用的垃圾收集器\n"),t("code",[s._v("java -XX:+PrintCommandLineFlags -version")])]),s._v(" "),t("p",[s._v("另外这个命令可以查询到更加详细的信息")]),s._v(" "),t("p",[t("code",[s._v("java -XX:+PrintFlagsFinal -version | grep GC")])]),s._v(" "),t("p",[s._v("我们在IDEA中启动的一个Springboot的项目，默认使用的垃圾收集器参数是\n-XX:+UseParallelGC")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('-XX:InitialHeapSize=134217728 -XX:MaxHeapSize=2147483648 -XX:+PrintCommandLineFlags -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseParallelGC \njava version "1.8.0_73"\nJava(TM) SE Runtime Environment (build 1.8.0_73-b02)\nJava HotSpot(TM) 64-Bit Server VM (build 25.73-b02, mixed mode)\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h5",{attrs:{id:"parallel-scavenge-serial-old"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parallel-scavenge-serial-old"}},[s._v("#")]),s._v(" Parallel Scavenge+Serial Old")]),s._v(" "),t("p",[s._v("JDK8默认情况下服务端模式下JVM垃圾回收参数是-XX:+UseParallelGC参数，也就是会使用"),t("strong",[s._v("Parallel Scavenge+Serial Old")]),s._v("的收集器组合，进行内存回收。")]),s._v(" "),t("h5",{attrs:{id:"parnew-cms"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parnew-cms"}},[s._v("#")]),s._v(" ParNew+CMS")]),s._v(" "),t("p",[s._v("但是一般如果我们的后端应用不是那种需要进行大量计算的应用，基于低延迟的考虑，可以考虑使用-XX:+UseConcMarkSweepGC进行垃圾收集，这种配置下会使用ParNew来收集新生代内存，CMS垃圾回收器收集老年代内存。")]),s._v(" "),t("h5",{attrs:{id:"g1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#g1"}},[s._v("#")]),s._v(" G1")]),s._v(" "),t("p",[s._v("在JDK9时，默认的垃圾收集器是G1收集器，也可以使用-XX:+UseG1GC参数来启动G1垃圾收集器。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/519126-20180623154635076-953076776.png",alt:"img"}})]),s._v(" "),t("h3",{attrs:{id:"容器的内存和-jvm-的内存有什么关系-参数怎么配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器的内存和-jvm-的内存有什么关系-参数怎么配置"}},[s._v("#")]),s._v(" 容器的内存和 jvm 的内存有什么关系？参数怎么配置？")]),s._v(" "),t("p",[s._v("一般在使用容器部署Java应用时，一般为了充分利用物理机的资源，会在物理机上部署多个容器应用，然后对每个容器设置最大内存的限制，但是JVM的最大堆默认值一般取得的物理机最大内存的25%，一旦应用内存超出容器的最大内存限制，容器就会把应用进程kill掉，然后重启。为了解决这个问题，有3种解决方案：")]),s._v(" "),t("p",[s._v("1.在应用的JVM参数中添加-Xmx 最大堆内存的大小，可以设置为容器最大内存限制的75%。一旦你在修改了容器的最大内存限制，每个应用的JVM参数-Xmx 也许需要同步进行修改。")]),s._v(" "),t("p",[s._v("2.就是添加这几个参数可以让Java应用感知容器的内存限制，从而在设置最大堆内存大小时，根据容器的内存限制进行设置。\n"),t("code",[s._v("-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=2")])]),s._v(" "),t("p",[s._v("下面是MaxRAMFraction取不同的值时，最大堆内存与容器最大内存限制的比例。考虑到除了内存中除了最大堆内存以外，还有方法区，线程栈等需要需要占用内存，所以MaxRAMFraction一般至少取2会比较合适。如果取值为1，在最大堆内存占满时，可能Java应用占用的总内存会超过容器最大内存限制。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20210207145307777.png",alt:"image-20210207145307777"}})]),s._v(" "),t("p",[s._v("3.在JDK8以后，JVM增加了容器感知功能，就是如果不显示指定-Xmx2048m 最大堆内存大小， -Xms2048m最小堆内存大小，会取容器所在的物理机的内存的25%作为最大堆内存大小，也可以通过这几个参数来设置堆内存占容器内存的比例\n-XX:MinRAMPercentage 最小堆内存大小占容器内存限制的比例\n-XX:MaxRAMPercentage 最大堆内存大小占容器内存限制的比例\n-XX:InitialRAMPercentage 初始堆内存大小占容器内存限制的比例")]),s._v(" "),t("h3",{attrs:{id:"如何大体估算java进程使用的内存呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何大体估算java进程使用的内存呢"}},[s._v("#")]),s._v(" 如何大体估算java进程使用的内存呢？")]),s._v(" "),t("p",[s._v("Max memory = [-Xmx] + [-XX:MaxPermSize] + number_of_threads * [-Xss]")]),s._v(" "),t("p",[s._v("-Xss128k: 设置每个线程的堆栈大小.JDK5.0以后默认每个线程的栈大小为1M。")]),s._v(" "),t("p",[s._v("-Xms 堆内存的初始大小，默认为物理内存的1/64\n-Xmx 堆内存的最大大小，默认为物理内存的1/4\n-Xmn 堆内新生代的大小。通过这个值也可以得到老生代的大小：-Xmx减去-Xmn")]),s._v(" "),t("p",[s._v("-Xss 设置每个线程可使用的内存大小，即栈的大小。在相同物理内存下，减小这个值能生成更多的线程，当然操作系统对一个进程内的线程数还是有限制的，不能无限生成。线程栈的大小是个双刃剑，如果设置过小，可能会出现栈溢出，特别是在该线程内有递归、大的循环时出现溢出的可能性更大，如果该值设置过大，就有影响到创建栈的数量，如果是多线程的应用，就会出现内存溢出的错误。")]),s._v(" "),t("h3",{attrs:{id:"怎么获取-dump-文件-怎么分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#怎么获取-dump-文件-怎么分析"}},[s._v("#")]),s._v(" 怎么获取 dump 文件？怎么分析？")]),s._v(" "),t("p",[s._v("1.启动时配置，出现OOM问题时自动生成\nJVM启动时增加两个参数:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//出现 OOME 时生成堆 dump: ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("XX"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapDumpOnOutOfMemoryError")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//生成堆文件地址：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("XX"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapDumpPath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("home"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("liuke"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("jvmlogs"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("2.执行jmap命令立即生成\n发现程序异常前通过执行指令，直接生成当前JVM的dmp文件，6214是指JVM的进程号")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("jmap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("dump"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("format"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("file"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("home"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("admin"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("logs"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("heap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hprof "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6214")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("获得heap.hprof以后，执行"),t("code",[s._v("jvisualvm")]),s._v("命令打开使用Java自带的工具Java VisualVM来打开heap.hprof文件，就可以分析你的Java线程里面对象占用堆内存的情况了")]),s._v(" "),t("p",[s._v("由于第一种方式是一种事后方式，需要等待当前JVM出现问题后才能生成dmp文件，实时性不高，第二种方式在执行时，JVM是暂停服务的，所以对"),t("strong",[s._v("线上的运行会产生影响")]),s._v("。所以建议第一种方式。")]),s._v(" "),t("h3",{attrs:{id:"gc日志怎么看"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gc日志怎么看"}},[s._v("#")]),s._v(" gc日志怎么看？")]),s._v(" "),t("p",[s._v("可以在启动Java应用的命令中添加这些参数，指定生成垃圾收集的日志的路径，可以记录垃圾收集的情况。")]),s._v(" "),t("p",[t("code",[s._v("-XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:/var/log/gc.log")])]),s._v(" "),t("p",[s._v("这是一条Minor GC的回收日志(一般GC (Allocation Failure)代表Minor GC，老年代垃圾回收一般打印的是Full GC (Metadata GC Threshold) )")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("05")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("07")]),s._v("T16"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("02.845")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0800")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("78210.469")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("GC "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Allocation")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Failure")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("05")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("07")]),s._v("T16"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("02.845")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0800")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("78210.469")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ParNew")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("68553")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("466K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("76672")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0221963")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("131148")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("63062K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2088640")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0223082")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Times")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.02")]),s._v(" sys"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" real"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.02")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("GC (Allocation Failure)")])]),s._v(" "),t("p",[s._v("代表Eden区分配内存失败触发Minor GC。\n"),t("strong",[s._v("2020-05-07T16:28:02.845+0800: 78210.469")])]),s._v(" "),t("p",[s._v("是发生的时间。\n"),t("strong",[s._v("68553K->466K(76672K)")])]),s._v(" "),t("p",[s._v("代表垃圾回收前新生代使用内存是68MB，剩余0.4MB，总内存是76MB。\n"),t("strong",[s._v("0.0221963 secs")])]),s._v(" "),t("p",[s._v("是垃圾回收耗时。\n"),t("strong",[s._v("131148K->63062K(2088640K)")])]),s._v(" "),t("p",[s._v("代表堆区回收前使用131MB，63MB，总内存是2088MB。")]),s._v(" "),t("p",[t("strong",[s._v("[Times: user=0.02 sys=0.00, real=0.02 secs]")])]),s._v(" "),t("p",[s._v("用户态耗时0.02s，内核态耗时0s，总耗时0.02s")]),s._v(" "),t("p",[s._v("PS：有一个网站，可以对上传GC.log的日志进行分析，解析日志文件，统计出垃圾收集总占用的时间，以及新生代，老年代的内存使用峰值，https://gceasy.io/")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20210208162512025.png",alt:"image-20210208162512025"}})]),s._v(" "),t("h3",{attrs:{id:"cpu-使用率特别高-怎么排查-通用方法-定位代码-cpu高的原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cpu-使用率特别高-怎么排查-通用方法-定位代码-cpu高的原因"}},[s._v("#")]),s._v(" cpu 使用率特别高，怎么排查？通用方法？定位代码？cpu高的原因？")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s%EF%BC%9Fsrc=11&timestamp=1589109647&ver=2330&signature=LegOQuRkl7V9kFT6JT3Kg-9X4VYN40OmTyVRlSOFLppbFy*PTUWPAb2iyCFqz-ka9RRCje4fXGxS3sqw1z3JYQ3MRxzuI-UTLtlx-fV8VA8CLDWOFFfIuIVwrAeUdDHb&new=1",target:"_blank",rel:"noopener noreferrer"}},[s._v("CPU飙高，频繁GC，怎么排查？"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s%EF%BC%9F__biz=MzI3ODcxMzQzMw==&mid=2247484624&idx=1&sn=a907100b51aca8bd651aebdb9aca532f&chksm=eb5381e6dc2408f092159c453a452c2781d374ca43f0984dde87688de8a1f8d9196dfd747124&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[s._v("jstack命令：教你如何排查多线程问题"),t("OutboundLink")],1)]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" jstat -gcutil 29530 1000 10\n 垃圾回收信息统计，29530是pid，1000是每1秒打印一次最新信息，10是最多打印10次\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"怎么排查cpu占用率过高的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#怎么排查cpu占用率过高的问题"}},[s._v("#")]),s._v(" 怎么排查CPU占用率过高的问题？")]),s._v(" "),t("p",[s._v("1.首先使用"),t("code",[s._v("top")]),s._v("命令查看CPU占用率高的进程的pid。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("top - 15:10:32 up 523 days,  3:47,  1 user,  load average: 0.00, 0.01, 0.05\nTasks:  95 total,   1 running,  94 sleeping,   0 stopped,   0 zombie\n%Cpu(s):  1.7 us,  0.5 sy,  0.0 ni, 95.7 id,  2.2 wa,  0.0 hi,  0.0 si,  0.0 st\nKiB Mem : 16267904 total,  6940648 free,  2025316 used,  7301940 buff/cache\nKiB Swap: 16777212 total, 16776604 free,      608 used. 13312484 avail Mem\n\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND\n14103 hadoop    20   0 2832812 203724  18392 S   3.7  1.3 977:08.04 java\n14010 hadoop    20   0 2897344 285392  18660 S   0.3  1.8 513:30.49 java\n14284 hadoop    20   0 3052556 340436  18636 S   0.3  2.1   1584:47 java\n14393 hadoop    20   0 2912460 504112  18632 S   0.3  3.1 506:43.68 java\n    1 root      20   0  190676   3404   2084 S   0.0  0.0   4:31.47 systemd\n    2 root      20   0       0      0      0 S   0.0  0.0   0:04.77 kthreadd\n    3 root      20   0       0      0      0 S   0.0  0.0   0:10.16 ksoftirqd/0\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("2.使用"),t("code",[s._v("top -Hp 进程id")]),s._v("获得该进程下各个线程的CPU占用情况，找到占用率最高的线程的pid2，\n使用"),t("code",[s._v('printf "%x\\n" pid2')]),s._v("命令将pid2转换为16进制的数number。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("top - 15:11:01 up 523 days,  3:48,  1 user,  load average: 0.00, 0.01, 0.05\nThreads:  69 total,   0 running,  69 sleeping,   0 stopped,   0 zombie\n%Cpu(s): 12.8 us,  0.1 sy,  0.0 ni, 87.0 id,  0.1 wa,  0.0 hi,  0.0 si,  0.0 st\nKiB Mem : 16267904 total,  6941352 free,  2024612 used,  7301940 buff/cache\nKiB Swap: 16777212 total, 16776604 free,      608 used. 13313188 avail Mem\n\n  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND\n14393 hadoop    20   0 2912460 504112  18632 S  0.0  3.1   0:00.01 java\n14411 hadoop    20   0 2912460 504112  18632 S  0.0  3.1   0:01.95 java\n14412 hadoop    20   0 2912460 504112  18632 S  0.0  3.1   0:16.18 java\n14413 hadoop    20   0 2912460 504112  18632 S  0.0  3.1   0:12.79 java\n14414 hadoop    20   0 2912460 504112  18632 S  0.0  3.1   8:09.10 java\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("3.使用"),t("code",[s._v("jstack pid")]),s._v("获得进程下各线程的堆栈信息，nid=0xnumber的线程即为占用率高的线程，查看它是在执行什么操作。("),t("code",[s._v("jstack 5521 | grep -20 0x1596")]),s._v("可以获得堆栈信息中，会打印匹配到0x1596的上下20行的信息。)")]),s._v(" "),t("p",[s._v("例如这个线程是在执行垃圾回收:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('"GC task thread#0 (ParallelGC)" os_prio=0 tid=0x00007f338c01f000 nid=0x1593 runnable\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h5",{attrs:{id:"jvm相关的异常"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm相关的异常"}},[s._v("#")]),s._v(" JVM相关的异常")]),s._v(" "),t("h4",{attrs:{id:"_1-stackoverflow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-stackoverflow"}},[s._v("#")]),s._v(" 1.stackoverflow")]),s._v(" "),t("p",[s._v("这种就是栈的空间不足，就会抛出这个异常，一般是递归执行一个方法时，执行方法深度太深时出现。Java执行一个方法时，会创建一个栈帧来存放局部变量表，操作数栈，如果分配栈帧时，栈空间不足，那么就会抛出这个异常。")]),s._v(" "),t("p",[s._v("（栈空间可以设置-Xss参数实现，默认为1M，如果参数）")]),s._v(" "),t("h3",{attrs:{id:"jvm调优有哪些工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm调优有哪些工具"}},[s._v("#")]),s._v(" JVM调优有哪些工具？")]),s._v(" "),t("h4",{attrs:{id:"jstat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jstat"}},[s._v("#")]),s._v(" jstat")]),s._v(" "),t("p",[s._v("jstat可以打印出当前JVM运行的各种状态信息，例如新生代内存使用情况，老年代内存使用情况，以及垃圾回收的时间。Minor GC发生总次数，总耗时，Full GC发生总次数，总耗时。(jmap -heap命令也可以打印出堆中各个分区的内存使用情况，但是不能定时监测，持续打印。例如每1s打印当前的堆中各个分区的内存使用情况，一直打印100次。)")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//5828是java进程id，1000是打印间隔，每1000毫秒打印一次，100是总共打印100次\njstat -gc 5828 1000 100\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("打印结果如下：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200725204237083.png",alt:"image-20200725204237083"}})]),s._v(" "),t("p",[s._v("各个参数的含义如下：")]),s._v(" "),t("p",[t("code",[s._v("S0C")]),s._v(" 新生代中第一个survivor（幸存区）的总容量 (字节)")]),s._v(" "),t("p",[t("code",[s._v("S1C")]),s._v("新生代中第二个survivor（幸存区）的总容量 (字节)")]),s._v(" "),t("p",[t("code",[s._v("S0U")]),s._v(" 新生代中第一个survivor（幸存区）目前已使用空间 (字节)")]),s._v(" "),t("p",[t("code",[s._v("S1U")]),s._v(" 新生代中第二个survivor（幸存区）目前已使用空间 (字节)")]),s._v(" "),t("p",[t("code",[s._v("EC")]),s._v(" 新生代中Eden区的总容量 (字节)")]),s._v(" "),t("p",[t("code",[s._v("EU")]),s._v(" 新生代中Eden区目前已使用空间 (字节)")]),s._v(" "),t("p",[t("code",[s._v("OC")]),s._v(" 老年代的总容量 (字节)")]),s._v(" "),t("p",[t("code",[s._v("OU")]),s._v(" 老年代代目前已使用空间 (字节)")]),s._v(" "),t("p",[t("code",[s._v("YGC")]),s._v(" 目前新生代垃圾回收总次数")]),s._v(" "),t("p",[t("code",[s._v("YGCT")]),s._v(" 目前新生代垃圾回收总消耗时间")]),s._v(" "),t("p",[t("code",[s._v("FGC")]),s._v(" 目前full gc次数总次数")]),s._v(" "),t("p",[t("code",[s._v("FGCT")]),s._v(" 目前full gc次数总耗时，单位是秒")]),s._v(" "),t("p",[t("code",[s._v("GCT")]),s._v(" 垃圾回收总耗时")]),s._v(" "),t("p",[s._v("一般还可以使用"),t("code",[s._v("jstat -gcutil <pid>")]),s._v(":统计gc信息，这样打印出来的结果是百分比，而不是实际使用的空间，例如jstat -gcutil 1 1000 100")]),s._v(" "),t("p",[s._v("例如，S0代表 新生代中第一个survivor区的空间使用了73.19%，E代表新生代Eden区使用了51%，O代表老年代食堂了98%")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200725204859356.png",alt:"image-20200725204859356"}})]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("参数")]),s._v(" "),t("th",[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("S0")]),s._v(" "),t("td",[s._v("年轻代中第一个survivor（幸存区）已使用的占当前容量百分比")])]),s._v(" "),t("tr",[t("td",[s._v("s1")]),s._v(" "),t("td",[s._v("年轻代中第二个survivor（幸存区）已使用的占当前容量百分比")])]),s._v(" "),t("tr",[t("td",[s._v("E")]),s._v(" "),t("td",[s._v("年轻代中Eden已使用的占当前容量百分比")])]),s._v(" "),t("tr",[t("td",[s._v("O")]),s._v(" "),t("td",[s._v("old代已使用的占当前容量百分比")])]),s._v(" "),t("tr",[t("td",[s._v("M")]),s._v(" "),t("td",[s._v("元空间(MetaspaceSize)已使用的占当前容量百分比")])]),s._v(" "),t("tr",[t("td",[s._v("CCS")]),s._v(" "),t("td",[s._v("压缩使用比例")])]),s._v(" "),t("tr",[t("td",[s._v("YGC")]),s._v(" "),t("td",[s._v("年轻代垃圾回收次数")])]),s._v(" "),t("tr",[t("td",[s._v("FGC")]),s._v(" "),t("td",[s._v("老年代垃圾回收次数")])]),s._v(" "),t("tr",[t("td",[s._v("FGCT")]),s._v(" "),t("td",[s._v("老年代垃圾回收消耗时间")])]),s._v(" "),t("tr",[t("td",[s._v("GCT")]),s._v(" "),t("td",[s._v("垃圾回收消耗总时间")])])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200731152050340.png",alt:"image-20200731152050340"}})]),s._v(" "),t("h4",{attrs:{id:"jstack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jstack"}},[s._v("#")]),s._v(" jstack")]),s._v(" "),t("p",[s._v("jstack可以生成当前JVM的线程快照，也就是当前每个线程当前的状态及正在执行的方法，锁相关的信息。"),t("code",[s._v("jstack -l 进程id")]),s._v("，-l代表除了堆栈信息外，还会打印锁的附加信息。jstack还会检测出死锁信息。一般可以用于定位线程长时间停顿，线程间死锁等问题。")]),s._v(" "),t("p",[s._v("例如在下面的例子中，第一个线程获取到lock1，再去获取lock2，第二个线程先获取到lock2，然后再去获取lock1。每个线程都只获得了一个锁，同时在获取另外一个锁，就会进入死锁状态。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" lock1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("  lock2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExecutorService")]),s._v(" executorService "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Executors")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newCachedThreadPool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        executorService"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("execute")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lock1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"线程1获得了lock1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"线程1休眠结束"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"线程1开始尝试获取lock2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lock2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"线程1获得了lock2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        executorService"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("execute")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lock2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"线程2获得了lock2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"线程2开始尝试获取lock1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lock1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"线程2获得了lock2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br")])]),t("p",[s._v("使用"),t("code",[s._v("jstack -l 进程id")]),s._v("就可以打印出当前的线程信息")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200726165954263.png",alt:"image-20200726165954263"}})]),s._v(" "),t("p",[s._v("以及各个线程的状态，执行的方法（pool-1-thread-1和pool-1-thread-2分别代表线程池的第一个线程和第二个线程）：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200726170056096.png",alt:"image-20200726170056096"}})]),s._v(" "),t("h4",{attrs:{id:"jmap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jmap"}},[s._v("#")]),s._v(" jmap")]),s._v(" "),t("h5",{attrs:{id:"jmap-heap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jmap-heap"}},[s._v("#")]),s._v(" jmap -heap")]),s._v(" "),t("p",[s._v("这个命令可以生成当前堆栈快照。使用 "),t("code",[s._v("jmap -heap 进程id")]),s._v("可以打印出当前堆各分区内存使用情况的情况，新生代(Eden区,To Survivor区,From Survivor区)，老年代区的内存使用情况。")]),s._v(" "),t("p",[s._v("使用jmap -heap查看内存使用情况的案例")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200726173723112.png",alt:"image-20200726173723112"}})]),s._v(" "),t("h5",{attrs:{id:"jmap-histo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jmap-histo"}},[s._v("#")]),s._v(" jmap -histo")]),s._v(" "),t("p",[t("strong",[s._v("jmap -histo 进程id")]),s._v(" 打印出当前堆中的对象统计信息，包括类名，每个类的实例数量，总占用内存大小。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("instances列：表示当前类有多少个实例。\nbytes列：说明当前类的实例总共占用了多少个字节\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" name列：表示的就是当前类的名称，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" name 对于基本数据类型，使用的是缩写。解读："),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v("代表"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),s._v(" ，"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C")]),s._v("代表"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" ，"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("D")]),s._v("代表"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("， "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("F")]),s._v("代表"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("I")]),s._v("代表"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("J")]),s._v("代表"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Z")]),s._v("代表"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" \n前边有"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("代表数组，"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("I")]),s._v(" 就相当于"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n对象数组用`"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("L")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("类名`表示 \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200726174009407.png",alt:"image-20200726174009407"}})]),s._v(" "),t("h5",{attrs:{id:"jmap-dump"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jmap-dump"}},[s._v("#")]),s._v(" jmap -dump")]),s._v(" "),t("p",[s._v("使用"),t("code",[s._v("jmap -dump:format=b,file=dump.hprof 进程id")]),s._v("可以生成当前的堆栈快照，堆快照和对象统计信息，对生成的堆快照进行分析，可以分析堆中对象所占用内存的情况，检查大对象等。执行"),t("code",[s._v("jvisualvm")]),s._v("命令打开使用Java自带的工具"),t("strong",[s._v("Java VisualVM")]),s._v("来打开堆栈快照文件，进行分析。可以用于排查内存溢出，内存泄露问题。在"),t("strong",[s._v("Java VisualVM")]),s._v("里面可以看到每个类的实例对象占用的内存大小，以及持有这个对象的实例所在的类等等信息。")]),s._v(" "),t("p",[s._v("也可以配置启动时的JVM参数，让发送内存溢出时，自动生成堆栈快照文件。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//出现 OOM 时生成堆 dump: ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("XX"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapDumpOnOutOfMemoryError")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//生成堆文件地址：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("XX"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapDumpPath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("home"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("liuke"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("jvmlogs"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("使用"),t("strong",[s._v("jmap -dump:format=b,file=/存放路径/heapdump.hprof 进程id")]),s._v("就可以得到堆转储文件，然后执行jvisualvm命令就可以打开JDK自带的jvisualvm软件。")]),s._v(" "),t("p",[s._v("例如在这个例子中会造成OOM问题，通过生成heapdump.hprof文件，可以使用jvisualvm查看造成OOM问题的具体代码位置。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test018")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestObject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" arrayList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestObject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test018")]),s._v(" test018 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test018")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),s._v(" random "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestObject")]),s._v(" testObject "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestObject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            test018"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("arrayList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("testObject"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestObject")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" placeholder "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//每个变量是64k")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xms20m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xmx20m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("verbose"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("gc "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("XX"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PrintGCDetails")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("XX"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapDumpOnOutOfMemoryError")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("XX"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapDumpPath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("存放路径"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("heapdump"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hprof\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[s._v("造成OOM问题的代码位置：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200726190137193.png",alt:"image-20200726190137193"}})]),s._v(" "),t("p",[s._v("堆内对象列表")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200726190451781.png",alt:"image-20200726190451781"}})]),s._v(" "),t("p",[s._v("占用内存最多的实例对象就是这个placeholder对象")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200726190549717.png",alt:"image-20200726190549717"}})]),s._v(" "),t("h4",{attrs:{id:"mat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mat"}},[s._v("#")]),s._v(" MAT")]),s._v(" "),t("p",[s._v("MAT主要可以用于分析内存泄露，可以查询dump堆转储文件中的对象列表，以及潜在的内存泄露的对象。")]),s._v(" "),t("p",[s._v("通过导入hprof文件，主页会展示潜在的内存泄露问题，比如下面这个例子中")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test018")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestObject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" arrayList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestObject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),s._v(" random "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestObject")]),s._v(" testObject "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestObject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test018")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("arrayList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("testObject"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestObject")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" placeholder "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("在详情页面Shortest Paths To the Accumulation Point表示GC root对象到内存消耗聚集点的最短路径，内存聚集点的意思就是占用了大量内存的对象，也就是可能发生； 内存泄露的对象。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200726205127282.png",alt:"image-20200726205127282"}})]),s._v(" "),t("p",[s._v("然后在主页点击Histogram，进入Histogram页面可以看到对象列表，with incomming references 也就是可以查看所有对这个对象的引用（思路一般优先看占用内存最大对象；其次看数量最多的对象。）。我们这个例子中主要是byte[]数组分配了占用了大量的内存空间，而byte[]主要来自于Test018类的静态变量arrayList的每个TestObject类型的元素的placeholder属性。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200726205515840.png",alt:"image-20200726205515840"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/image-20200726205837727.png",alt:"image-20200726205837727"}})]),s._v(" "),t("p",[s._v("同时可以点击 内存快照对比 功能对两个dump文件进行对比，判断两个dump文件生成间隔期间，各个对象的数量变化，以此来判断内存泄露问题。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/640-20200726210041919.jpeg",alt:"img"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://txxs.github.io/pic/interviewGuide-storage/640-20200726210058837.jpeg",alt:"img"}})]),s._v(" "),t("h3",{attrs:{id:"happens-before指的是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#happens-before指的是什么"}},[s._v("#")]),s._v(" happens-before指的是什么？")]),s._v(" "),t("p",[s._v("happens-before主要是为保证Java多线程操作时的有序性和可见性，防止了编译器重排序对程序结果的影响。\n因为当一个变量出现一写多读，多读多写的情况时，就是多个线程读这个变量，然后至少一个线程写这个变量，因为编译器在编译时会对指令进行重排序，如果没有happens-before原则对重排序进行一些约束，就有可能造成程序执行不正确的情况。")]),s._v(" "),t("p",[s._v("具体有8条规则：\n1."),t("strong",[s._v("程序次序性规则")]),s._v("：一个线程内，按照代码顺序，书写在前面的操作先行发生于书写在后面的操作。一段代码在单线程中执行的结果是有序的。(只在单线程有效，一写多读时，写的变量如果是没有使用volatile修饰时，是没法保证其他线程读到的变量是最新的值)")]),s._v(" "),t("p",[s._v("2."),t("strong",[s._v("锁定规则")]),s._v("：一个锁的解锁操作总是要在加锁操作之前。")]),s._v(" "),t("p",[s._v("3."),t("strong",[s._v("volatile规则")]),s._v("：如果一个写操作去写一个volatile变量，一个读操作去读volatile变量，那么写操作一定是在读操作之前。")]),s._v(" "),t("p",[s._v("4."),t("strong",[s._v("传递规则")]),s._v("：操作A happens before 操作B， B happens before C，那么A一定是happens before C的。")]),s._v(" "),t("p",[s._v("5."),t("strong",[s._v("线程启动规则")]),s._v("：线程A执行过程中修一些共享变量，然后再调用threadB.start()方法来启动线程B，那么A对那些变量的修改对线程B一定是可见的。")]),s._v(" "),t("p",[s._v("6."),t("strong",[s._v("线程终结规则")]),s._v("：线程A执行过程中调用了threadB.join()方法来等待线程B执行完毕，那么线程B在执行过程中对共享变量的修改，在join()方法返回后，对线程A可见。")]),s._v(" "),t("p",[s._v("7."),t("strong",[s._v("线程中断规则")]),s._v("：对线程interrupt()方法的调用先行发生于被中断线程的代码检测到中断事件的发生。")]),s._v(" "),t("p",[s._v("8."),t("strong",[s._v("对象终结规则")]),s._v("：一个对象的初始化完成先行发生于他的finalize()方法的开始；")]),s._v(" "),t("p",[s._v("https://www.cnblogs.com/chenssy/p/6393321.html")]),s._v(" "),t("p",[s._v("http://ifeve.com/java-%e4%bd%bf%e7%94%a8-happen-before-%e8%a7%84%e5%88%99%e5%ae%9e%e7%8e%b0%e5%85%b1%e4%ba%ab%e5%8f%98%e9%87%8f%e7%9a%84%e5%90%8c%e6%ad%a5%e6%93%8d%e4%bd%9c/#more-38824")])])}),[],!1,null,null,null);a.default=e.exports}}]);