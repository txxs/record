(window.webpackJsonp=window.webpackJsonp||[]).push([[1270],{1664:function(s,t,a){"use strict";a.r(t);var n=a(13),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_1-客户端优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-客户端优化"}},[s._v("#")]),s._v(" 1 客户端优化")]),s._v(" "),a("h2",{attrs:{id:"pipeline-批量操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pipeline-批量操作"}},[s._v("#")]),s._v(" pipeline 批量操作")]),s._v(" "),a("h2",{attrs:{id:"连接池应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接池应用"}},[s._v("#")]),s._v(" 连接池应用")]),s._v(" "),a("h1",{attrs:{id:"_2-合理的淘汰机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-合理的淘汰机制"}},[s._v("#")]),s._v(" 2 合理的淘汰机制")]),s._v(" "),a("ul",[a("li",[s._v("设置合理的内存大小")]),s._v(" "),a("li",[s._v("设置合理的过期时间")]),s._v(" "),a("li",[s._v("选择合适的淘汰策略")])]),s._v(" "),a("h1",{attrs:{id:"_3-内存优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-内存优化"}},[s._v("#")]),s._v(" 3 内存优化")]),s._v(" "),a("p",[s._v("https://redis.io/topics/memory-optimization\n不同大小，底层数据结构不同：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("hash-max-ziplist-value "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" \nzset-max-ziplist-value "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h1",{attrs:{id:"_4-cpu优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-cpu优化"}},[s._v("#")]),s._v(" 4 CPU优化")]),s._v(" "),a("p",[s._v("不要阻塞，特别是 lua 脚本，不要有长时间睡眠操作，不然其它操作全部阻塞！\n谨慎使用范围操作\nSLOWLOG get 10 默认10ms，默认只保留最后的128条")]),s._v(" "),a("h1",{attrs:{id:"_5-key设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-key设计"}},[s._v("#")]),s._v(" 5 key设计")]),s._v(" "),a("h2",{attrs:{id:"可读性和可管理性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可读性和可管理性"}},[s._v("#")]),s._v(" 可读性和可管理性")]),s._v(" "),a("p",[s._v("以业务名(或数据库名)为前缀(防止key冲突)，用冒号分隔，比如业务名:表名:id")]),s._v(" "),a("h2",{attrs:{id:"简洁性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简洁性"}},[s._v("#")]),s._v(" 简洁性")]),s._v(" "),a("p",[s._v("保证语义的前提下，控制key的长度，当key较多时，内存占用也不容忽视")]),s._v(" "),a("h2",{attrs:{id:"不要含特殊字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不要含特殊字符"}},[s._v("#")]),s._v(" 不要含特殊字符")]),s._v(" "),a("p",[s._v("比如:包含空格、换行、单双引号以及其他转义字符")]),s._v(" "),a("h1",{attrs:{id:"_6-value设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-value设计"}},[s._v("#")]),s._v(" 6 value设计")]),s._v(" "),a("ul",[a("li",[s._v("拒绝bigkey(防止网卡流量、慢查询)， string类型控制在10KB以内， hash、 list. set. zset元素 个数不要超过5000")]),s._v(" "),a("li",[s._v("选择适合的数据类型")]),s._v(" "),a("li",[s._v("控制key的生命周期，redis不是垃圾桶")])]),s._v(" "),a("h1",{attrs:{id:"_7-分区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-分区"}},[s._v("#")]),s._v(" 7 分区")]),s._v(" "),a("p",[s._v("多个业务系统，共用一个redis，还是应该分开。规划好key，特别是前缀，a.b.c.d")]),s._v(" "),a("p",[s._v("如果缓存数据变大了，就可以分区，但注意按业务垂直拆分，避免 key 的冲突。\n一般小公司研发团队都是需要申请缓存资源直接得到对应的 ip 地址，但大公司最多只能得到key/token。")]),s._v(" "),a("h1",{attrs:{id:"_8-big-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-big-key"}},[s._v("#")]),s._v(" 8 Big Key")]),s._v(" "),a("p",[s._v("那么什么样的Key才算是Big Key呢?\n一般key的值大于10KB时可以算是Big Key了。\n如下场景都有可能遇到Big Key，比如：")]),s._v(" "),a("ul",[a("li",[s._v("粉丝列表")]),s._v(" "),a("li",[s._v("统计数据，比如PV或者UV统计")]),s._v(" "),a("li",[s._v("使用不当的数据缓存，比如通过String保存序列化后的用户数据等")])]),s._v(" "),a("p",[s._v("出现了Big Key你也不用非常紧张，因为某些场景下不得不使用，而不应该是你的使用不当造成的。下面我们看一下如何进行发现与优化")]),s._v(" "),a("h2",{attrs:{id:"查询-big-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询-big-key"}},[s._v("#")]),s._v(" 查询 Big Key")]),s._v(" "),a("p",[s._v("可以使用脚本进行查询，大概思路就是使用 scan 游标查询 key，然后使用 memory usage key 获取这个 key 与 value 的字节数，这样就能很方便的得出结论进行优化。比如")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" sys\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" redis\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("check_big_key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  bigKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\n  length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("strlen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hash"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hlen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"list"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("llen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"set"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("scard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zset"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("zcard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("except")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10240")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    bigKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" bigKey "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),s._v(" db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("length\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find_big_key_normal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("db_host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db_port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("StrictRedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("host"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("db_host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("db_port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" password"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("db_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("db_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("scan_iter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    check_big_key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find_big_key_sharding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("db_host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db_port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nodecount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("StrictRedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("host"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("db_host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("db_port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" password"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("db_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("db_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  cursor "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" node "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nodecount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      iscan "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("execute_command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"iscan"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cursor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"count"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" iscan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        check_big_key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      cursor "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" iscan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),s._v(" cursor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("iscan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" cursor "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Usage: python '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("' host port password '")]),s._v("\n     exit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  db_host "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  db_port "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  db_password "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("StrictRedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("host"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("db_host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("db_port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" password"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("db_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  nodecount "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nodecount'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  keyspace_info "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"keyspace"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" db "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" keyspace_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'check '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" keyspace_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" nodecount "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      find_big_key_sharding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("db_host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db_port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("replace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"db"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nodecount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      find_big_key_normal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("db_host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db_port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("replace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"db"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br")])]),a("p",[s._v("可以通过 python find_bigkey host 6379 password 来执行，默认大 key 的阈值为 10240(10KB)，也就是对于 string 类型的 value 大于 10240 的认为是大 key，对于 list 的话如果 list 长度大于 10240 认为是大 key，对于 hash 的话如果 field 的数目大于 10240 认为是大 key。另外默认该脚本每次搜索 1000 个 key，对业务的影响比较低，不过最好在业务低峰期进行操作，避免 scan 命令对业务的影响。")]),s._v(" "),a("h2",{attrs:{id:"删除-big-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除-big-key"}},[s._v("#")]),s._v(" 删除 Big Key")]),s._v(" "),a("p",[s._v("Redis4.0 新特性 - Lazy Free\n当删除键的时候, redis 提供异步延时释放 key 内存的功能，把 key 释放操作放在 bio(Background I/O) 单独的子线程处理中，减少删除 big key 对 redis 主线程的阻塞。有效地避免删除 big key 带来的性能和可用性问题。因此删除 Big Key 时使用 unlink 操作。")]),s._v(" "),a("h1",{attrs:{id:"_9-复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-复制"}},[s._v("#")]),s._v(" 9 复制")]),s._v(" "),a("h2",{attrs:{id:"_9-1-避免全量复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-避免全量复制"}},[s._v("#")]),s._v(" 9.1 避免全量复制")]),s._v(" "),a("p",[s._v("Redis 复制分为全量复制和部分复制，但全量复制的开销很大。如何尽量避免全量复制呢？")]),s._v(" "),a("h3",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[s._v("#")]),s._v(" 解决方案")]),s._v(" "),a("ul",[a("li",[s._v("当某个 Replica 第一次去挂到 master 上时，无法避免要做一次全量复制，那又该如何尽量降低开销呢？\n既然第一次无法避免，那就选在集群低峰时间（凌晨）挂载 Replica")]),s._v(" "),a("li",[s._v("选举Replica为主节点\n如果有某个Replica已经有了主节点数据了，那就将其选举为 master。通过人为或者哨兵实现选举。")])]),s._v(" "),a("h4",{attrs:{id:"复制积压缓冲区不足"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制积压缓冲区不足"}},[s._v("#")]),s._v(" 复制积压缓冲区不足")]),s._v(" "),a("p",[s._v("master 生成 RDB 同步到 Replica，Replica 加载 RDB 这段时间里，master 的所有写命令都会保存到一个复制缓冲队列（如果主从之间网络抖动，进行部分复制也是执行该逻辑），待 Replica 加载完 RDB，拿 offset 值到该队列判断，若在该队列，则把该队列从 offset 到末尾全部同步过来，这个队列的默认值为 1M。若发现 offset 不在队列，就会发起全量复制。\n所以增大复制缓冲区的配置 "),a("strong",[s._v("repl_backlog_size")]),s._v(" 默认是 1M，可以设置大一些，从而增大 offset 的命中率。那么如何估算该值呢？一般我们网络故障时间一般是min级别，所以如下公式：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("理想值 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 根据当前QPS估算每分钟可写入多少字节 ✖️ 可能发生故障的min\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"_9-2-避免复制风暴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-避免复制风暴"}},[s._v("#")]),s._v(" 9.2 避免复制风暴")]),s._v(" "),a("h3",{attrs:{id:"_9-2-1-单主节点复制风暴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-1-单主节点复制风暴"}},[s._v("#")]),s._v(" 9.2.1 单主节点复制风暴")]),s._v(" "),a("p",[s._v("一般发生在 "),a("strong",[s._v("Master 挂在多个 Replica 场景")]),s._v("。\n当 Master 重启恢复后，其 master 下所有 Replica 检测到 RunID 变化，导致所有 Replica 向 master 做全量复制。此时 Master 会为 Replica 创建 RDB 快照，若在快照创建完毕前，有多个 Replica 尝试与 Master 进行全量同步，那么其他的 Replica 将共享这份 RDB 快照。尽管 Redis 对这个问题做了优化，即只生成一份 RDB，但仍需多次传输，开销很大。同时给多个 Replica 发送快照，可能会使 Master 的网络带宽消耗严重，造成 Master 延迟变大，极端情况会出现主从断开，导致复制失败。")]),s._v(" "),a("h4",{attrs:{id:"解决方案-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-2"}},[s._v("#")]),s._v(" 解决方案")]),s._v(" "),a("ul",[a("li",[s._v("采用树状复制结构（一传二，二传四，分摊网络压力）")]),s._v(" "),a("li",[s._v("当 Master 宕机，选举一台 Replica 晋升为 Master，减少全量复制的产生")])]),s._v(" "),a("h3",{attrs:{id:"_9-2-2-单机多主复制风暴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-2-单机多主复制风暴"}},[s._v("#")]),s._v(" 9.2.2 单机多主复制风暴")]),s._v(" "),a("p",[s._v("一台机器，多个主节点（树状复制结构）。\n因为Redis是单线程结构，所以发挥不了 CPU多核的优势，于是有的人为了省钱就在同一机器部署多个 redis 主节点了。")]),s._v(" "),a("h4",{attrs:{id:"解决方案-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-3"}},[s._v("#")]),s._v(" 解决方案")]),s._v(" "),a("ul",[a("li",[s._v("应当把主节点尽量分散在多台机器上，避免在单台机器上部署过多的主节点")]),s._v(" "),a("li",[s._v("当主节点所在机器故障后提供故障恢复转移机制，避免机器恢复后进行密集的全量复制")])]),s._v(" "),a("h1",{attrs:{id:"禁止使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#禁止使用"}},[s._v("#")]),s._v(" 禁止使用")]),s._v(" "),a("h1",{attrs:{id:"使用经验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用经验"}},[s._v("#")]),s._v(" 使用经验")]),s._v(" "),a("h2",{attrs:{id:"性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[s._v("#")]),s._v(" 性能")]),s._v(" "),a("ul",[a("li",[s._v("线程数（4~8）与连接数（redis 服务端 10000）")]),s._v(" "),a("li",[s._v("监控系统读写比（ 至少9：1）和缓存命中率")])]),s._v(" "),a("h2",{attrs:{id:"容量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容量"}},[s._v("#")]),s._v(" 容量")]),s._v(" "),a("ol",[a("li",[s._v("做好容量评估，合理使用缓存资源")])]),s._v(" "),a("h2",{attrs:{id:"资源管理和分配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源管理和分配"}},[s._v("#")]),s._v(" 资源管理和分配")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("尽量每个业务集群单独使用自己的Redis，不混用；")])]),s._v(" "),a("li",[a("p",[s._v("控制Redis资源的申请与使用，规范环境和Key的管理（以一线互联网为例）；")])]),s._v(" "),a("li",[a("p",[s._v("监控CPU 100%（单线程），所以此时基本不响应了，需要优化高延迟操作。")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);