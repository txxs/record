(window.webpackJsonp=window.webpackJsonp||[]).push([[680],{1075:function(a,s,t){"use strict";t.r(s);var n=t(13),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"_1-线程封闭"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-线程封闭"}},[a._v("#")]),a._v(" 1 线程封闭")]),a._v(" "),t("p",[a._v("多线程访问共享可变数据时，涉及到线程间数据同步的问题。并不是所有时候，都要用到\n共享数据，所以线程封闭概念就提出来了。")]),a._v(" "),t("p",[a._v("数据都被封闭在各自的线程之中，就不需要同步，这种通过将数据封闭在线程中而避免使\n用同步的技术称为"),t("strong",[a._v("线程封闭")]),a._v("。")]),a._v(" "),t("p",[t("strong",[a._v("避免并发异常最简单的方法就是线程封闭")]),a._v("\n即 把对象封装到一个线程里,只有该线程能看到此对象;\n那么该对象就算非线程安全,也不会出现任何并发安全问题.")]),a._v(" "),t("h2",{attrs:{id:"_1-1-栈封闭"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-栈封闭"}},[a._v("#")]),a._v(" 1.1 栈封闭")]),a._v(" "),t("p",[a._v("局部变量的固有属性之一就是封闭在线程中。\n它们位于执行线程的栈中，其他线程无法访问这个栈")]),a._v(" "),t("h2",{attrs:{id:"_1-2-使用threadlocal是实现线程封闭的最佳实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-使用threadlocal是实现线程封闭的最佳实践"}},[a._v("#")]),a._v(" 1.2 使用"),t("code",[a._v("ThreadLocal")]),a._v("是实现线程封闭的最佳实践.")]),a._v(" "),t("p",[t("strong",[a._v("ThreadLocal是Java里一种特殊的变量。")]),a._v("\n它是一个线程级变量，每个线程都有一个ThreadLocal, 就是每个线程都拥有了自己独立的一个变量,\n竞争条件被彻底消除了，在并发模式下是绝对安全的变量。")]),a._v(" "),t("ul",[t("li",[a._v("用法")])]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("会自动在每一个线程上创建一个T的副本，副本之间彼此独立，互不影响。\n可以用 ThreadLocal 存储一些参数， 以便在线程中多个方法中使用，用来代替方法传参的做法。")]),a._v(" "),t("p",[a._v("实例\n"),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191009013555646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_SmF2YUVkZ2U=,size_1,color_FFFFFF,t_70",alt:""}}),a._v(" "),t("code",[a._v("ThreadLocal")]),a._v("内部维护了一个Map,Map的key是每个线程的名称,Map的value就是我们要封闭的对象.\n每个线程中的对象都对应着Map中一个值,也就是"),t("code",[a._v("ThreadLocal")]),a._v("利用Map实现了对象的线程封闭.")]),a._v(" "),t("p",[a._v("对于CS游戏,开始时,每个人能够领到一把枪,枪把上有三个数字:子弹数、杀敌数、自己的命数，为其设置的初始值分别为1500、0、10.\n设战场上的每个人都是一个线程,那么这三个初始值写在哪里呢?如果每个线程都写死这三个值,万一将初始子弹数统一改成 1000发呢?\n如果共享,那么线程之间的并发修改会导致数据不准确.\n能不能构造这样一个对象,将这个对象设置为共享变量, 统一设置初始值, 但是每个线程对这个值的修改都是互相独立的.这个对象就是ThreadLocal")]),a._v(" "),t("blockquote",[t("p",[a._v("注意不能将其翻译为线程本地化或本地线程\n英语恰当的名称应该叫作:CopyValueIntoEveryThread")])]),a._v(" "),t("ul",[t("li",[a._v("示例代码\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTA2MWI2N2QzYjdkZDAyNjcucG5n?x-oss-process=image/format,png",alt:""}})])]),a._v(" "),t("blockquote",[t("p",[a._v("实在难以理解的，可以理解为，JVM维护了一个Map<Thread, T>,每个线程要用这个T的时候，用当前的线程去Map里面取。仅作为一个概念理解")])]),a._v(" "),t("p",[a._v("该示例中,无 set 操作,那么初始值又是如何进入每个线程成为独立拷贝的呢?\n首先,虽然"),t("code",[a._v("ThreadLocal")]),a._v("在定义时重写了"),t("code",[a._v("initialValue()")]),a._v(" ,但并非是在"),t("code",[a._v("BULLET_ NUMBER_ THREADLOCAL")]),a._v("对象加载静态变量的时候执行;\n而是每个线程在"),t("code",[a._v("ThreadLocal.get()")]),a._v("时都会执行到;")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("其源码如下\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTdkY2JjNjZjOTY5YzUzMDcucG5n?x-oss-process=image/format,png",alt:"ThreadLocal # get()"}}),a._v("\n每个线程都有自己的"),t("code",[a._v("ThreadLocalMap")]),a._v(";\n如果"),t("code",[a._v("map ==null")]),a._v(",则直接执行"),t("code",[a._v("setInitialValue()")]),a._v(";\n如果 map 已创建,就表示 Thread 类的"),t("code",[a._v("threadLocals")]),a._v(" 属性已初始化完毕;\n如果 "),t("code",[a._v("e==null")]),a._v(",依然会执行到"),t("code",[a._v("setinitialValue()")])])]),a._v(" "),t("li",[t("p",[t("code",[a._v("setinitialValue()")]),a._v("的源码如下:\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTQ4MzcxODdjNTk4NjIwN2EucG5n?x-oss-process=image/format,png",alt:""}}),a._v("\n这是一个保护方法，CsGameByThreadLocal中初始化ThreadLocal对象时已覆写value = initialValue()\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LWM0NDI3Mzk3ZDBjMDRkZmMucG5n?x-oss-process=image/format,png",alt:""}}),a._v(" "),t("code",[a._v("getMap")]),a._v("的源码就是提取线程对象t的ThreadLocalMap属性: t. threadLocals.")])])]),a._v(" "),t("blockquote",[t("p",[a._v("在"),t("code",[a._v("CsGameByThreadLocal")]),a._v("第1处，使用了"),t("code",[a._v("ThreadLocalRandom")]),a._v(" 生成单独的"),t("code",[a._v("Random")]),a._v("实例;\n该类在JDK7中引入,它使得每个线程都可以有自己的随机数生成器;\n我们要避免"),t("code",[a._v("Random")]),a._v("实例被多线程使用,虽然共享该实例是线程安全的,但会因竞争同一"),t("code",[a._v("seed")]),a._v("而导致性能下降.")])]),a._v(" "),t("p",[a._v("我们已经知道了"),t("code",[a._v("ThreadLocal")]),a._v("是每一个线程单独持有的;\n因为每一个线程都有独立的变量副本,其他线程不能访问,所以不存在线程安全问题,也不会影响程序的执行性能.\n"),t("code",[a._v("ThreadLocal")]),a._v("对象通常是由"),t("code",[a._v("private static")]),a._v("修饰的,因为都需要复制到本地线程,所以非"),t("code",[a._v("static")]),a._v("作用不大;\n不过,"),t("code",[a._v("ThreadLocal")]),a._v("无法解决共享对象的更新问题,下面的实例将证明这点.\n因为"),t("code",[a._v("CsGameByThreadLocal")]),a._v("中使用的是"),t("code",[a._v("Integer")]),a._v("不可变对象,所以可使用相同的编码方式来操作一下可变对象看看\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTAwZTRhNTYwMDAwZmRiZDMucG5n?x-oss-process=image/format,png",alt:""}}),a._v("\n输出的结果是乱序不可控的,所以使用某个引用来操作共享对象时,依然需要进行线程同步\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTE3MWU5NjMyMWNmZGI3ZjIucG5n?x-oss-process=image/format,png",alt:"ThreadLocal和Thread的类图"}})]),a._v(" "),t("p",[t("code",[a._v("ThreadLocal")]),a._v(" 有个静态内部类"),t("code",[a._v("ThreadLocalMap")]),a._v("，它还有一个静态内部类"),t("code",[a._v("Entry")]),a._v(";\n在Thread中的"),t("code",[a._v("ThreadLocalMap")]),a._v("属性的赋值是在"),t("code",[a._v("ThreadLocal")]),a._v("类中的"),t("code",[a._v("createMap")]),a._v(".")]),a._v(" "),t("p",[t("code",[a._v("ThreadLocal")]),a._v("与"),t("code",[a._v("ThreadLocalMap")]),a._v("有三组对应的方法: get()、set()和remove();\n在"),t("code",[a._v("ThreadLocal")]),a._v("中对它们只做校验和判断，最终的实现会落在"),t("code",[a._v("ThreadLocalMap.")]),a._v(".\n"),t("code",[a._v("Entry")]),a._v("继承自"),t("code",[a._v("WeakReference")]),a._v(",只有一个value成员变量,它的key是ThreadLocal对象")]),a._v(" "),t("p",[a._v("再从栈与堆的内存角度看看两者的关系\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LThjN2M4ZjkwMjJkNTE1NWQucG5n?x-oss-process=image/format,png",alt:"ThreadLocal的弱引用路线图"}}),a._v("\n一个Thread有且仅有一个"),t("code",[a._v("ThreadLocalMap")]),a._v("对象\n一个"),t("code",[a._v("Entry")]),a._v("对象的 key 弱引用指向一个"),t("code",[a._v("ThreadLocal")]),a._v("对象\n一个"),t("code",[a._v("ThreadLocalMap")]),a._v("对象存储多个Entry 对象\n一个"),t("code",[a._v("ThreadLocal")]),a._v(" 对象可被多个线程共享\n"),t("code",[a._v("ThreadLocal")]),a._v("对象不持有Value,Value 由线程的Entry 对象持有.")]),a._v(" "),t("p",[a._v("Entry 对象源码如下\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LWU1OTljYmM3ZWVkNjQ4MTAucG5n?x-oss-process=image/format,png",alt:""}})]),a._v(" "),t("p",[a._v("所有的"),t("code",[a._v("Entry")]),a._v("对象都被"),t("code",[a._v("ThreadLocalMap")]),a._v("类实例化对象"),t("code",[a._v("threadLocals")]),a._v("持有;\n当线程执行完毕时,线程内的实例属性均会被垃圾回收,弱引用的"),t("code",[a._v("ThreadLocal")]),a._v(",即使线程正在执行,只要"),t("code",[a._v("ThreadLocal")]),a._v("对象引用被置成"),t("code",[a._v("null")]),a._v(","),t("code",[a._v("Entry")]),a._v("的Key就会自动在下一次Y - GC时被垃圾回收;\n而在"),t("code",[a._v("ThreadLocal")]),a._v("使用"),t("code",[a._v("set()/get()")]),a._v("时,又会自动将那些"),t("code",[a._v("key=null")]),a._v("的value 置为"),t("code",[a._v("null")]),a._v(",使value能够被GC,避免内存泄漏,现实很骨感, ThreadLocal如源码注释所述:\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTdkNTU3NGM5YjdiZTY1OTMucG5n?x-oss-process=image/format,png",alt:""}}),a._v(" "),t("code",[a._v("ThreadLocal")]),a._v("对象通常作为私有静态变量使用,那么其生命周期至少不会随着线程结束而结束.")]),a._v(" "),t("h3",{attrs:{id:"三个重要方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三个重要方法"}},[a._v("#")]),a._v(" 三个重要方法:")]),a._v(" "),t("ul",[t("li",[a._v("set()\n如果没有set操作的"),t("code",[a._v("ThreadLocal")]),a._v(", 很容易引起脏数据问题")]),a._v(" "),t("li",[a._v("get()\n始终没有get操作的"),t("code",[a._v("ThreadLocal")]),a._v("对象是没有意义的")]),a._v(" "),t("li",[a._v("remove()\n如果没有remove操作,则容易引起内存泄漏")])]),a._v(" "),t("p",[a._v("如果"),t("code",[a._v("ThreadLocal")]),a._v("是非静态的,属于某个线程实例,那就失去了线程间共享的本质属性;\n那么"),t("code",[a._v("ThreadLocal")]),a._v("到底有什么作用呢?\n我们知道,局部变量在方法内各个代码块间进行传递,而类变量在类内方法间进行传递;\n复杂的线程方法可能需要调用很多方法来实现某个功能,这时候用什么来传递线程内变量呢?\n即"),t("code",[a._v("ThreadLocal")]),a._v(",它通常用于同一个线程内,跨类、跨方法传递数据;\n如果没有ThreadLocal,那么相互之间的信息传递,势必要靠返回值和参数,这样无形之中,有些类甚至有些框架会互相耦合;\n通过将Thread构造方法的最后一个参数设置为true,可以把当前线程的变量继续往下传递给它创建的子线程")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadGroup")]),a._v(" group"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Runnable")]),a._v(" target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),a._v(" stackSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" inheritThreadLocals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("group"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("  stackSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" inheritThreadLocals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("parent为其父线程")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("inheritThreadLocals "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" inheritableThreadLocals "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" inheritableThreadLocals "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" createInheritedMap "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" inheritableThreadLocals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[t("code",[a._v("createlnheritedMap()")]),a._v("其实就是调用"),t("code",[a._v("ThreadLocalMap")]),a._v("的私有构造方法来产生一个实例对象,把父线程中不为"),t("code",[a._v("null")]),a._v("的线程变量都拷贝过来")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),a._v(" parentMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// table就是存储")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Entry")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" parentTable "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" parentMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" table"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" len "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" parentTable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("setThreshold")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("len"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    table "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Entry")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("len"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Entry")]),a._v(" e "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" parentTable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("e "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" key "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("key "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n          object value "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("childValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Entry")]),a._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Entry")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" h "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" threadLocalHashCode "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("len "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("table"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n            h "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nextIndex")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" len"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n          table"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("C")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n          size"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br"),t("span",{staticClass:"line-number"},[a._v("18")]),t("br"),t("span",{staticClass:"line-number"},[a._v("19")]),t("br"),t("span",{staticClass:"line-number"},[a._v("20")]),t("br"),t("span",{staticClass:"line-number"},[a._v("21")]),t("br")])]),t("p",[a._v("很多场景下可通过"),t("code",[a._v("ThreadLocal")]),a._v("来透传全局上下文的;\n比如用"),t("code",[a._v("ThreadLocal")]),a._v("来存储监控系统的某个标记位,暂且命名为traceld.\n某次请求下所有的traceld都是一致的,以获得可以统一解析的日志文件;\n但在实际开发过程中,发现子线程里的traceld为null,跟主线程的traceld并不一致,所以这就需要刚才说到的"),t("code",[a._v("InheritableThreadLocal")]),a._v("来解决父子线程之间共享线程变量的问题,使整个连接过程中的traceld一致。")]),a._v(" "),t("p",[a._v("示例代码如下")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("commons"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lang3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StringUtils")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * @author sss\n * @date 2019/1/17\n */")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RequestProcessTrace")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("InheritableThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("FullLinkContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" FULL_LINK_CONTEXT_INHERITABLE_THREAD_LOCAL\n            "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("InheritableThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("FullLinkContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("FullLinkContext")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("FullLinkContext")]),a._v(" fullLinkContext "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" FULL_LINK_CONTEXT_INHERITABLE_THREAD_LOCAL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("fullLinkContext "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            FULL_LINK_CONTEXT_INHERITABLE_THREAD_LOCAL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("FullLinkContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            fullLinkContext "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" FULL_LINK_CONTEXT_INHERITABLE_THREAD_LOCAL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" fullLinkContext"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("FullLinkContext")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" traceId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getTraceId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StringUtils")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isEmpty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("traceId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("FrameWork")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("startTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"JavaEdge"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                traceId "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("FrameWork")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getTraceId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" traceId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("setTraceId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" traceId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("traceId "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" traceId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br"),t("span",{staticClass:"line-number"},[a._v("18")]),t("br"),t("span",{staticClass:"line-number"},[a._v("19")]),t("br"),t("span",{staticClass:"line-number"},[a._v("20")]),t("br"),t("span",{staticClass:"line-number"},[a._v("21")]),t("br"),t("span",{staticClass:"line-number"},[a._v("22")]),t("br"),t("span",{staticClass:"line-number"},[a._v("23")]),t("br"),t("span",{staticClass:"line-number"},[a._v("24")]),t("br"),t("span",{staticClass:"line-number"},[a._v("25")]),t("br"),t("span",{staticClass:"line-number"},[a._v("26")]),t("br"),t("span",{staticClass:"line-number"},[a._v("27")]),t("br"),t("span",{staticClass:"line-number"},[a._v("28")]),t("br"),t("span",{staticClass:"line-number"},[a._v("29")]),t("br"),t("span",{staticClass:"line-number"},[a._v("30")]),t("br"),t("span",{staticClass:"line-number"},[a._v("31")]),t("br"),t("span",{staticClass:"line-number"},[a._v("32")]),t("br"),t("span",{staticClass:"line-number"},[a._v("33")]),t("br"),t("span",{staticClass:"line-number"},[a._v("34")]),t("br"),t("span",{staticClass:"line-number"},[a._v("35")]),t("br"),t("span",{staticClass:"line-number"},[a._v("36")]),t("br"),t("span",{staticClass:"line-number"},[a._v("37")]),t("br")])]),t("p",[a._v("使用"),t("code",[a._v("ThreadLocal")]),a._v("和"),t("code",[a._v("InheritableThreadLocal")]),a._v("透传上下文时,需要注意线程间切换、异常传输时的处理,避免在传输过程中因处理不当而导致的上下文丢失.")]),a._v(" "),t("p",[a._v("最后,"),t("code",[a._v("SimpleDateFormat")]),a._v(" 是非线程安全的类,定义为static,会有数据同步风险.\n通过源码可以看出,"),t("code",[a._v("SimpleDateFormat")]),a._v(" 内部有一个"),t("code",[a._v("Calendar")]),a._v("对象;\n在日期转字符串或字符串转日期的过程中,多线程共享时很可能产生错误;\n推荐使用"),t("code",[a._v("ThreadLocal")]),a._v(",让每个线程单独拥有这个对象.\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LWVmMWM2OGY0ODUzYWYwNWQucG5n?x-oss-process=image/format,png",alt:""}})]),a._v(" "),t("h1",{attrs:{id:"threadlocal的副作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal的副作用"}},[a._v("#")]),a._v(" ThreadLocal的副作用")]),a._v(" "),t("p",[a._v("为了使线程安全地共享某个变量，JDK给出了"),t("code",[a._v("ThreadLocal")]),a._v(".\n但"),t("code",[a._v("ThreadLocal")]),a._v("的主要问题是会产生脏数据和内存泄漏;\n这两个问题通常是在线程池的线程中使用ThreadLocal引发的，因为线程池有线程复用和内存常驻两是在线程池的线程中使用ThreadLocal 引发的，因为线程池有线程复用和内存常驻两个特点")]),a._v(" "),t("h2",{attrs:{id:"脏数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#脏数据"}},[a._v("#")]),a._v(" 脏数据")]),a._v(" "),t("p",[a._v("线程复用会产生脏数据。\n由于线程池会重用 "),t("code",[a._v("Thread")]),a._v(" 对象，与 "),t("code",[a._v("Thread")]),a._v(" 绑定的静态属性 "),t("code",[a._v("ThreadLocal")]),a._v(" 变量也会被重用。\n如果在实现的线程run()方法中不显式调用"),t("code",[a._v("remove()")]),a._v("清理与线程相关的"),t("code",[a._v("ThreadLocal")]),a._v("信息，那么若下一个线程不调用"),t("code",[a._v("set()")]),a._v("，就可能"),t("code",[a._v("get()")]),a._v(" 到重用的线程信息。包括"),t("code",[a._v("ThreadLocal")]),a._v("所关联的线程对象的"),t("strong",[a._v("value")]),a._v("值。")]),a._v(" "),t("h3",{attrs:{id:"脏读案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#脏读案例"}},[a._v("#")]),a._v(" 脏读案例")]),a._v(" "),t("p",[a._v("比如，用户A下单后没有看到订单记录，而用户B却看到了用户A的订单记录。通过排查发现是由于 session 优化引发。\n在原来的请求过程中，用户每次请求Server，都需要通过 sessionId 去缓存里查询用户的session信息，这样无疑增加了一次调用。\n因此工程师决定采用某框架来缓存每个用户对应的"),t("code",[a._v("SecurityContext")]),a._v("，它封装了session 相关信息。优化后虽然会为每个用户新建一个 session 相关的上下文，但由于"),t("code",[a._v("Threadlocal")]),a._v("没有在线程处理结束时及时"),t("code",[a._v("remove()")]),a._v("。在高并发场景下,线程池中的线程可能会读取到上一个线程缓存的用户信息。")]),a._v(" "),t("ul",[t("li",[a._v("示例代码\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTNhN2IyNTg1ZGQ1NTljMjkucG5n?x-oss-process=image/format,png",alt:""}})]),a._v(" "),t("li",[a._v("输出结果"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTI5ZTI0NTA2ZmI3YmJjYWEucG5n?x-oss-process=image/format,png",alt:""}})])]),a._v(" "),t("h2",{attrs:{id:"_2-内存泄漏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-内存泄漏"}},[a._v("#")]),a._v(" 2 内存泄漏")]),a._v(" "),t("p",[a._v("在源码注释中提示使用static关键字来修饰"),t("code",[a._v("ThreadLocal")]),a._v(".\n在此场景下,寄希望于"),t("code",[a._v("ThreadLocal")]),a._v("对象失去引用后,触发弱引用机制来回收"),t("code",[a._v("Entry")]),a._v("的"),t("code",[a._v("Value")]),a._v("就不现实了.\n在上例中,如果不进行"),t("code",[a._v("remove()")]),a._v(",那么当该线程执行完成后,通过"),t("code",[a._v("ThreadLocal")]),a._v("对象持有的String对象是不会被释放的.")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("以上两个问题的解决办法很简单\n每次用完ThreadLocal时,及时调用"),t("code",[a._v("remove()")]),a._v("清理")])])]),a._v(" "),t("h1",{attrs:{id:"what-is-threadlocal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-is-threadlocal"}},[a._v("#")]),a._v(" What is ThreadLocal")]),a._v(" "),t("p",[a._v("该类提供了线程局部 (thread-local) 变量;\n这些变量不同于它们的普通对应物,因为访问某变量（通过其 get /set 方法）的每个线程都有自己的局部变量,它独立于变量的初始化副本.")]),a._v(" "),t("p",[t("code",[a._v("ThreadLocal")]),a._v(" 实例通常是类中的 "),t("code",[a._v("private static")]),a._v("字段,希望将状态与某一个线程（e.g. 用户 ID 或事务 ID）相关联.")]),a._v(" "),t("p",[a._v("一个以"),t("code",[a._v("ThreadLocal")]),a._v("对象为键、任意对象为值的存储结构;\n有点像"),t("code",[a._v("HashMap")]),a._v(',可以保存"key : value"键值对,但一个'),t("code",[a._v("ThreadLocal")]),a._v("只能保存一个键值对,各个线程的数据互不干扰.\n该结构被附带在线程上,也就是说一个线程可以根据一个"),t("code",[a._v("ThreadLocal")]),a._v("对象查询到绑定在这个线程上的一个值.")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" localName "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nlocalName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"JavaEdge"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" localName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("在线程A中初始化了一个ThreadLocal对象localName，并set了一个值JavaEdge;\n同时在线程A中通过get可拿到之前设置的值;\n但是如果在线程B中,拿到的将是一个null.")]),a._v(" "),t("p",[a._v("因为"),t("code",[a._v("ThreadLocal")]),a._v("保证了各个线程的数据互不干扰\n看看set(T value)和get()方法的源码\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTBhMWVjNWY4NTJkZWM0OGEucG5n?x-oss-process=image/format,png",alt:"返回当前线程该线程局部变量副本中的值"}}),a._v(" "),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTQ5NTE5ZTU4OTUzMzM1NjQucG5n?x-oss-process=image/format,png",alt:"设置此线程局部变量的当前线程的副本到指定的值,大多数的子类都不需要重写此方法"}}),a._v(" "),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTc0N2NlYmE1MTdjY2NmMTEucG5n?x-oss-process=image/format,png",alt:""}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LWMyMjI5NzUzZWZkYzVhZDkucG5n?x-oss-process=image/format,png",alt:"Thread#threadLocals"}})]),a._v(" "),t("p",[a._v("可见,每个线程中都有一个"),t("code",[a._v("ThreadLocalMap")])]),a._v(" "),t("ul",[t("li",[a._v("执行set时,其值是保存在当前线程的"),t("code",[a._v("threadLocals")]),a._v("变量")]),a._v(" "),t("li",[a._v("执行get时,从当前线程的"),t("code",[a._v("threadLocals")]),a._v("变量获取")])]),a._v(" "),t("p",[a._v("所以在线程A中set的值,是线程B永远得不到的\n即使在线程B中重新set,也不会影响A中的值;\n保证了线程之间不会相互干扰.")]),a._v(" "),t("h1",{attrs:{id:"追寻本质-结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#追寻本质-结构"}},[a._v("#")]),a._v(" 追寻本质 - 结构")]),a._v(" "),t("p",[a._v("从名字上看猜它类似HashMap,但在"),t("code",[a._v("ThreadLocal")]),a._v("中,并无实现Map接口")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("在"),t("code",[a._v("ThreadLoalMap")]),a._v("中,也是初始化一个大小为16的Entry数组\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTBhY2Y2MDExZWU0NDk0MDMucG5n?x-oss-process=image/format,png",alt:""}})])]),a._v(" "),t("li",[t("p",[a._v("Entry节点对象用来保存每一个key-value键值对\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTliMjFiODc3YjYyODNlYzgucG5n?x-oss-process=image/format,png",alt:""}}),a._v("\n这里的"),t("strong",[a._v("key 恒为 ThreadLocal")]),a._v(";\n通过"),t("code",[a._v("ThreadLocal")]),a._v("的"),t("code",[a._v("set()")]),a._v(",把"),t("code",[a._v("ThreadLocal")]),a._v("对象自身当做key,放进"),t("code",[a._v("ThreadLoalMap")]),a._v(" "),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzQ2ODU5NjgtMjNlZWIwOGVhMDgyNmM4Mi5wbmc?x-oss-process=image/format,png",alt:""}}),a._v(" "),t("code",[a._v("ThreadLoalMap")]),a._v("的"),t("code",[a._v("Entry")]),a._v("继承"),t("code",[a._v("WeakReference")]),a._v("\n和HashMap很不同,"),t("code",[a._v("Entry")]),a._v("中没有"),t("code",[a._v("next")]),a._v("字段,所以不存在链表情形.")])])]),a._v(" "),t("h1",{attrs:{id:"hash冲突"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash冲突"}},[a._v("#")]),a._v(" hash冲突")]),a._v(" "),t("p",[a._v("无链表,那发生hash冲突时何解？")]),a._v(" "),t("p",[a._v("先看看"),t("code",[a._v("ThreadLoalMap")]),a._v("插入一个 key/value 的实现\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTNmNzQ1ZTNmMmQ1YzIyZDIucG5n?x-oss-process=image/format,png",alt:""}})]),a._v(" "),t("ul",[t("li",[a._v("每个"),t("code",[a._v("ThreadLocal")]),a._v("对象都有一个hash值 - "),t("code",[a._v("threadLocalHashCode")]),a._v(" "),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTk3MzM5MWVlZmNkYWQwMzUucG5n?x-oss-process=image/format,png",alt:""}})]),a._v(" "),t("li",[a._v("每初始化一个"),t("code",[a._v("ThreadLocal")]),a._v("对象,hash值就增加一个固定大小\n"),t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80Njg1OTY4LTUzZjMzZTU4MWMzZjc1MjAucG5n?x-oss-process=image/format,png",alt:""}})])]),a._v(" "),t("p",[a._v("在插入过程中,根据"),t("code",[a._v("ThreadLocal")]),a._v("对象的hash值,定位至table中的位置i.\n过程如下")]),a._v(" "),t("ul",[t("li",[a._v("若当前位置为空,就初始化一个Entry对象置于i;")]),a._v(" "),t("li",[a._v("位置i已有对象\n"),t("ul",[t("li",[a._v("若该"),t("code",[a._v("Entry")]),a._v("对象的key正是将设置的key,覆盖其value(和HashMap 处理相同);")]),a._v(" "),t("li",[a._v("若和即将设置的key 无关,则寻找下一个空位")])])])]),a._v(" "),t("p",[a._v("如此,在"),t("code",[a._v("get")]),a._v("时,也会根据"),t("code",[a._v("ThreadLocal")]),a._v("对象的hash值,定位到table中的位置.然后判断该位置Entry对象中的key是否和get的key一致,如果不一致,就判断下一个位置.")]),a._v(" "),t("p",[a._v("可见,set和get如果冲突严重的话,效率很低,因为"),t("code",[a._v("ThreadLoalMap")]),a._v("是Thread的一个属性，所以即使在自己的代码中控制了设置的元素个数，但还是不能控制其它代码的行为")]),a._v(" "),t("h1",{attrs:{id:"内存泄露"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存泄露"}},[a._v("#")]),a._v(" 内存泄露")]),a._v(" "),t("p",[a._v("ThreadLocal可能导致内存泄漏，为什么？\n先看看Entry的实现：")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Entry")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("WeakReference")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/** The value associated with this ThreadLocal. */")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Entry")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        value "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br")])]),t("p",[a._v("通过之前的分析已经知道，当使用ThreadLocal保存一个value时，会在ThreadLocalMap中的数组插入一个Entry对象，按理说key-value都应该以强引用保存在Entry对象中，但在ThreadLocalMap的实现中，key被保存到了WeakReference对象中")]),a._v(" "),t("p",[a._v("这就导致了一个问题，ThreadLocal在没有外部强引用时，发生GC时会被回收，如果创建ThreadLocal的线程一直持续运行，那么这个Entry对象中的value就有可能一直得不到回收，发生内存泄露。")]),a._v(" "),t("h2",{attrs:{id:"避免内存泄露"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#避免内存泄露"}},[a._v("#")]),a._v(" 避免内存泄露")]),a._v(" "),t("p",[a._v("既然发现有内存泄露的隐患，自然有应对策略，在调用ThreadLocal的get()、set()可能会清除ThreadLocalMap中key为null的Entry对象，这样对应的value就没有GC Roots可达了，下次GC的时候就可以被回收，当然如果调用remove方法，肯定会删除对应的Entry对象。")]),a._v(" "),t("p",[a._v("如果使用ThreadLocal的set方法之后，没有显示的调用remove方法，就有可能发生内存泄露，所以养成良好的编程习惯十分重要，使用完ThreadLocal之后，记得调用remove方法。")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" localName "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    localName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"JavaEdge"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 其它业务逻辑")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("finally")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    localName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("remove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("h1",{attrs:{id:"题外小话"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题外小话"}},[a._v("#")]),a._v(" 题外小话")]),a._v(" "),t("p",[a._v("首先，ThreadLocal 不是用来解决共享对象的多线程访问问题的.\n一般情况下，通过set() 到线程中的对象是该线程自己使用的对象,其他线程是不需要访问的,也访问不到的;\n各个线程中访问的是不同的对象.")]),a._v(" "),t("p",[t("strong",[a._v("另外，说ThreadLocal使得各线程能够保持各自独立的一个对象;\n并不是通过set()实现的,而是通过每个线程中的new 对象的操作来创建的对象,每个线程创建一个，不是什么对象的拷贝或副本。")]),a._v("\n通过set()将这个新创建的对象的引用保存到各线程的自己的一个map中,每个线程都有这样一个map;\n执行get()时,各线程从自己的map中取出放进去的对象,因此取出来的是各自线程中的对象.\nThreadLocal实例是作为map的key来使用的.")]),a._v(" "),t("p",[a._v("如果set()进去的东西本来就是多个线程共享的同一个对象;\n那么多个线程的get()取得的还是这个共享对象本身，还是有并发访问问题。")]),a._v(" "),t("h1",{attrs:{id:"hibernate中典型的-threadlocal-应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hibernate中典型的-threadlocal-应用"}},[a._v("#")]),a._v(" Hibernate中典型的 ThreadLocal 应用")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),a._v(" threadSession "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n  \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Session")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getSession")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("InfrastructureException")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("  \n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Session")]),a._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Session")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" threadSession"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("  \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("s "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("  \n            s "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getSessionFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("openSession")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n            threadSession"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("  \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HibernateException")]),a._v(" ex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("  \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("InfrastructureException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("ex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("  \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("  \n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br")])]),t("p",[a._v("首先判断当前线程中有没有放入 session,如果还没有,那么通过"),t("code",[a._v("sessionFactory().openSession()")]),a._v("来创建一个session;\n再将session "),t("code",[a._v("set()")]),a._v("到线程中,实际是放到当前线程的"),t("code",[a._v("ThreadLocalMap")]),a._v(";\n这时,对于该 session 的唯一引用就是当前线程中的那个ThreadLocalMap;\nthreadSession 作为这个值的key，要取得这个 session 可以通过threadSession.get();\n里面执行的操作实际是先取得当前线程中的ThreadLocalMap;\n然后将threadSession作为key将对应的值取出.\n这个 session 相当于线程的私有变量,而不是public的.")]),a._v(" "),t("p",[a._v("显然，其他线程中是取不到这个session的，他们也只能取到自己的ThreadLocalMap中的东西。要是session是多个线程共享使用的，那还不乱套了.")]),a._v(" "),t("h2",{attrs:{id:"如果不用threadlocal怎么实现呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果不用threadlocal怎么实现呢"}},[a._v("#")]),a._v(" 如果不用ThreadLocal怎么实现呢？")]),a._v(" "),t("p",[a._v("可能就要在action中创建session，然后把session一个个传到service和dao中，这可够麻烦的;\n或者可以自己定义一个静态的map，将当前thread作为key，创建的session作为值，put到map中，应该也行，这也是一般人的想法.\n但事实上，ThreadLocal的实现刚好相反，它是在每个线程中有一个map，而将ThreadLocal实例作为key，这样每个map中的项数很少，而且当线程销毁时相应的东西也一起销毁了")]),a._v(" "),t("p",[a._v("总之，"),t("code",[a._v("ThreadLocal")]),a._v("不是用来解决对象共享访问问题的;\n而主要是提供了保持对象的方法和避免参数传递的方便的对象访问方式")]),a._v(" "),t("ul",[t("li",[a._v("每个线程中都有一个自己的"),t("code",[a._v("ThreadLocalMap")]),a._v("类对象;\n可以将线程自己的对象保持到其中,各管各的,线程可以正确的访问到自己的对象.")]),a._v(" "),t("li",[a._v("将一个共用的"),t("code",[a._v("ThreadLocal")]),a._v("静态实例作为key,将不同对象的引用保存到不同线程的ThreadLocalMap中,然后在线程执行的各处通过这个静态ThreadLocal实例的get()方法取得自己线程保存的那个对象,避免了将这个对象作为参数传递的麻烦.")])]),a._v(" "),t("p",[a._v("当然如果要把本来线程共享的对象通过set()放到线程中也可以，可以实现避免参数传递的访问方式;\n但是要注意get()到的是那同一个共享对象，并发访问问题要靠其他手段来解决;\n但一般来说线程共享的对象通过设置为某类的静态变量就可以实现方便的访问了，似乎没必要放到线程中")]),a._v(" "),t("h1",{attrs:{id:"threadlocal的应用场合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal的应用场合"}},[a._v("#")]),a._v(" "),t("strong",[a._v("ThreadLocal的应用场合")])]),a._v(" "),t("p",[a._v("我觉得最适合的是按线程多实例（每个线程对应一个实例）的对象的访问，并且这个对象很多地方都要用到。")]),a._v(" "),t("p",[a._v("可以看到ThreadLocal类中的变量只有这3个int型：")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" threadLocalHashCode "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nextHashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AtomicInteger")]),a._v(" nextHashCode "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AtomicInteger")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" HASH_INCREMENT "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0x61c88647")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("而作为ThreadLocal实例的变量只有 "),t("strong",[a._v("threadLocalHashCode")]),a._v(" "),t("strong",[a._v("nextHashCode")]),a._v(" 和"),t("strong",[a._v("HASH_INCREMENT")]),a._v(" 是ThreadLocal类的静态变量\n实际上")]),a._v(" "),t("ul",[t("li",[a._v("HASH_INCREMENT是一个常量，表示了连续分配的两个ThreadLocal实例的threadLocalHashCode值的增量")]),a._v(" "),t("li",[a._v("nextHashCode 表示了即将分配的下一个ThreadLocal实例的threadLocalHashCode 的值")])]),a._v(" "),t("p",[a._v("看一下创建一个ThreadLocal实例即new ThreadLocal()时做了哪些操作，构造方法"),t("code",[a._v("ThreadLocal()")]),a._v("里什么操作都没有，唯一的操作是这句")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" threadLocalHashCode "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nextHashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("那么nextHashCode()做了什么呢")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nextHashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" nextHashCode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getAndAdd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("HASH_INCREMENT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("就是将ThreadLocal类的下一个hashCode值即nextHashCode的值赋给实例的threadLocalHashCode，然后nextHashCode的值增加HASH_INCREMENT这个值。.")]),a._v(" "),t("p",[a._v("因此ThreadLocal实例的变量只有这个threadLocalHashCode，而且是final的，用来区分不同的ThreadLocal实例;\nThreadLocal类主要是作为工具类来使用，那么set()进去的对象是放在哪儿的呢？")]),a._v(" "),t("p",[a._v("看一下上面的set()方法，两句合并一下成为")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),a._v(" map "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("currentThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("threadLocals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("这个ThreadLocalMap 类是ThreadLocal中定义的内部类，但是它的实例却用在Thread类中：")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Runnable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("  \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("  \n  \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/* ThreadLocal values pertaining to this thread. This map is maintained \n     * by the ThreadLocal class. */")]),a._v("  \n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ThreadLocalMap")]),a._v(" threadLocals "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("    \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("  \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br")])]),t("p",[a._v("再看这句：")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("map "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("  \n    map"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("也就是将该ThreadLocal实例作为key，要保持的对象作为值，设置到当前线程的ThreadLocalMap 中，get()方法同样看了代码也就明白了.")]),a._v(" "),t("blockquote",[t("p",[a._v("参考")]),a._v(" "),t("ul",[t("li",[a._v("《码出高效：Java开发手册》")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);