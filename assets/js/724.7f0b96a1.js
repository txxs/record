(window.webpackJsonp=window.webpackJsonp||[]).push([[724],{1116:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_1-基本设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本设计"}},[t._v("#")]),t._v(" 1 基本设计")]),t._v(" "),a("p",[t._v("一种同步辅助，允许一个或多个线程等待，直到在其他线程中执行的一组操作完成。\nCountDownLatch 是用给定的 "),a("em",[t._v("count")]),t._v(" 初始化的。由于调用了"),a("em",[t._v("countDown")]),t._v("()方法，"),a("em",[t._v("await")]),t._v(" 方法阻塞，直到当前计数为零，之后释放所有等待线程，并立即返回任何后续的 await 调用。这是一种一次性现象——计数无法重置。如果需要重置计数的版本，可以考虑使用"),a("em",[t._v("CyclicBarrier")]),t._v("。")]),t._v(" "),a("p",[t._v("CountDownLatch 是一种通用的同步工具，可以用于多种用途。count为1时初始化的CountDownLatch用作简单的 on/off 的 latch或gate:所有调用wait的线程都在gate处等待，直到调用"),a("em",[t._v("countDown")]),t._v("()的线程打开它。一个初始化为N的CountDownLatch可以用来让一个线程等待，直到N个线程完成某个动作，或者某个动作已经完成N次。")]),t._v(" "),a("p",[t._v("CountDownLatch的一个有用的特性是，它不需要调用倒计时的线程等待计数达到0才继续，它只是防止任何线程继续等待，直到所有线程都通过。")]),t._v(" "),a("h1",{attrs:{id:"_2-类架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-类架构"}},[t._v("#")]),t._v(" 2 类架构")]),t._v(" "),a("h2",{attrs:{id:"_2-1-uml-图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-uml-图"}},[t._v("#")]),t._v(" 2.1 UML 图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWRmaWxlcy5ub3djb2Rlci5jb20vZmlsZXMvMjAyMDAyMTYvNTA4ODc1NV8xNTgxNzg1MjY2OTcyXzIwMjAwMjE1MjAzMDIxNzY4LnBuZw?x-oss-process=image/format,png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_2-2-继承关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-继承关系"}},[t._v("#")]),t._v(" 2.2 继承关系")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWRmaWxlcy5ub3djb2Rlci5jb20vZmlsZXMvMjAyMDAyMTYvNTA4ODc1NV8xNTgxNzg1MjY3MzMxXzIwMjAwMjE1MjExNTExOTAzLnBuZw?x-oss-process=image/format,png",alt:""}}),t._v("\n可以看出，CountDownLatch并无显式地继承什么接口或类。")]),t._v(" "),a("h2",{attrs:{id:"_2-3-构造函数细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-构造函数细节"}},[t._v("#")]),t._v(" 2.3 构造函数细节")]),t._v(" "),a("ul",[a("li",[t._v("构造一个用给定计数初始化的CountDownLatch。\n"),a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWRmaWxlcy5ub3djb2Rlci5jb20vZmlsZXMvMjAyMDAyMTYvNTA4ODc1NV8xNTgxNzg1MjY2OTc2XzIwMjAwMjE1MjE0OTI1MTU1LnBuZw?x-oss-process=image/format,png",alt:""}})]),t._v(" "),a("li",[t._v("参数 count\n在线程通过"),a("em",[t._v("await")]),t._v("()之前必须调用countDown()的次数")])]),t._v(" "),a("p",[t._v("CountDownLatch 的 state 并不是 AQS 的默认值 0，而是可赋值的，就是在 CountDownLatch 初始化时，count 就代表了 state 的初始化值")]),t._v(" "),a("ul",[a("li",[t._v("new Sync(count) 其实就是调用了内部类  Sync 的如下构造函数\n"),a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWRmaWxlcy5ub3djb2Rlci5jb20vZmlsZXMvMjAyMDAyMTYvNTA4ODc1NV8xNTgxNzg1MjY3MDc2XzIwMjAwMjE2MDAwMTUwNDQ2LnBuZw?x-oss-process=image/format,png",alt:""}})])]),t._v(" "),a("p",[t._v("count 表示我们希望等待的线程数，可能是")]),t._v(" "),a("ul",[a("li",[t._v("等待一组线程全部启动完成，或者")]),t._v(" "),a("li",[t._v("等待一组线程全部执行完成")])]),t._v(" "),a("h2",{attrs:{id:"_2-4-内部类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-内部类"}},[t._v("#")]),t._v(" 2.4 内部类")]),t._v(" "),a("p",[t._v("和 ReentrantLock 一样，CountDownLatch类也存在一个内部同步器 Sync，继承了 AbstractQueuedSynchronizer")]),t._v(" "),a("ul",[a("li",[t._v("这也是唯一的属性\n"),a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWRmaWxlcy5ub3djb2Rlci5jb20vZmlsZXMvMjAyMDAyMTYvNTA4ODc1NV8xNTgxNzg1MjY2ODM0XzIwMjAwMjE1MjE1OTU4NjEwLnBuZw?x-oss-process=image/format,png",alt:""}})])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sync")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractQueuedSynchronizer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" serialVersionUID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4982264981922014374L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造方法")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回当前计数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在共享模式下获取锁")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquireShared")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" acquires"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 共享模式下的锁释放")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryReleaseShared")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" releases"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 降低计数器; 至 0 时发出信号")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取锁状态")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 锁未被任何线程持有")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nextc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSetState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" nextc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br")])]),a("h1",{attrs:{id:"_3-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-await"}},[t._v("#")]),t._v(" 3 await")]),t._v(" "),a("p",[t._v("可以叫做等待，也可以称之为加锁。")]),t._v(" "),a("h2",{attrs:{id:"_3-1-无参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-无参"}},[t._v("#")]),t._v(" 3.1 无参")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWRmaWxlcy5ub3djb2Rlci5jb20vZmlsZXMvMjAyMDAyMTYvNTA4ODc1NV8xNTgxNzg1MjY3MTcyXzIwMjAwMjE1MjIwMjMyOTIucG5n?x-oss-process=image/format,png",alt:""}}),t._v("\n造成当前线程等待，直到锁存器计数到零，除非线程被中断。\n如果当前计数为零，则此方法立即返回。")]),t._v(" "),a("p",[t._v("如果当前线程数大于0，则当前线程将出于线程调度的目的而禁用，并处于睡眠状态，直到发生以下两种情况之一:")]),t._v(" "),a("ul",[a("li",[t._v("由于调用了"),a("em",[t._v("countDown")]),t._v("()方法，计数为零")]),t._v(" "),a("li",[t._v("其他线程中断了当前线程")])]),t._v(" "),a("p",[t._v("如果当前线程:")]),t._v(" "),a("ul",[a("li",[t._v("在进入此方法时已设置其中断状态;或者")]),t._v(" "),a("li",[t._v("在等待时被中断")])]),t._v(" "),a("p",[t._v("就会抛 "),a("em",[t._v("InterruptedException")]),t._v("，并清除当前线程的中断状态。")]),t._v(" "),a("p",[t._v("无参版 await 内部使用的是 acquireSharedInterruptibly 方法，实现在 AQS 中的 final 方法\n"),a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWRmaWxlcy5ub3djb2Rlci5jb20vZmlsZXMvMjAyMDAyMTYvNTA4ODc1NV8xNTgxNzg1MjY3MTExXzIwMjAwMjE1MjMyMDI0NDQ3LnBuZw?x-oss-process=image/format,png",alt:""}})]),t._v(" "),a("ol",[a("li",[t._v("使用CountDownLatch 的内部类 Sync 重写的"),a("em",[t._v("tryAcquireShared")]),t._v("  方法尝试获得锁，如果获取了锁直接返回，获取不到锁走 2")]),t._v(" "),a("li",[t._v("获取不到锁，用 Node 封装一下当前线程，追加到同步队列的尾部，等待在合适的时机去获得锁，本步已完全实现在 AQS 中")])]),t._v(" "),a("h3",{attrs:{id:"tryacquireshared"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tryacquireshared"}},[t._v("#")]),t._v(" tryAcquireShared")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWRmaWxlcy5ub3djb2Rlci5jb20vZmlsZXMvMjAyMDAyMTYvNTA4ODc1NV8xNTgxNzg1MjY3MTMwXzIwMjAwMjE1MjMyMjU5MTcwLnBuZw?x-oss-process=image/format,png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_3-2-超时参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-超时参数"}},[t._v("#")]),t._v(" 3.2 超时参数")]),t._v(" "),a("ul",[a("li",[t._v("最终都会转化成毫秒\n"),a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWRmaWxlcy5ub3djb2Rlci5jb20vZmlsZXMvMjAyMDAyMTYvNTA4ODc1NV8xNTgxNzg1MjY3MDcyXzIwMjAwMjE1MjI1OTM0Nzg0LnBuZw?x-oss-process=image/format,png",alt:""}}),t._v("\n造成当前线程等待，直到锁存器计数到零，除非线程被中断，或者指定的等待时间已过。\n如果当前计数为零，则此方法立即返回值 true。")])]),t._v(" "),a("p",[t._v("如果当前线程数大于0，则当前线程将出于线程调度的目的而禁用，并处于休眠状态，直到发生以下三种情况之一:")]),t._v(" "),a("ul",[a("li",[t._v("由于调用了countDown()方法，计数为零;或")]),t._v(" "),a("li",[t._v("其他一些线程中断当前线程;或")]),t._v(" "),a("li",[t._v("指定的等待时间已经过了")])]),t._v(" "),a("p",[t._v("如果计数为零，则该方法返回值true。")]),t._v(" "),a("p",[t._v("如果当前线程:")]),t._v(" "),a("ul",[a("li",[t._v("在进入此方法时已设置其中断状态;或")]),t._v(" "),a("li",[t._v("在等待时中断，")])]),t._v(" "),a("p",[t._v("就会抛出InterruptedException，并清除当前线程的中断状态。\n如果指定的等待时间过期，则返回false值。如果时间小于或等于0，则该方法根本不会等待。")]),t._v(" "),a("ul",[a("li",[t._v("使用的是 AQS 的 "),a("em",[t._v("tryAcquireSharedNanos")]),t._v(" 方法\n"),a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWRmaWxlcy5ub3djb2Rlci5jb20vZmlsZXMvMjAyMDAyMTYvNTA4ODc1NV8xNTgxNzg1MjY3Mjk2XzIwMjAwMjE1MjMyMTMyNDgyLnBuZw?x-oss-process=image/format,png",alt:""}})])]),t._v(" "),a("p",[t._v("获得锁时，state 的值不会发生变化，像 ReentrantLock 在获得锁时，会把 state + 1，但 CountDownLatch 不会")]),t._v(" "),a("h1",{attrs:{id:"_4-countdown"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-countdown"}},[t._v("#")]),t._v(" 4 countDown")]),t._v(" "),a("p",[t._v("降低锁存器的计数，如果计数为 0，则释放所有等待的线程。\n如果当前计数大于零，则递减。如果新计数为零，那么所有等待的线程都将重新启用，以便进行线程调度。")]),t._v(" "),a("p",[t._v("如果当前计数等于0，则什么也不会发生。\n"),a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWRmaWxlcy5ub3djb2Rlci5jb20vZmlsZXMvMjAyMDAyMTYvNTA4ODc1NV8xNTgxNzg1MjY2OTM2XzIwMjAwMjE2MDAyNDU5MTMyLnBuZw?x-oss-process=image/format,png",alt:""}}),t._v("\nreleaseShared 已经完全实现在 AQS\n"),a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWRmaWxlcy5ub3djb2Rlci5jb20vZmlsZXMvMjAyMDAyMTYvNTA4ODc1NV8xNTgxNzg1MjY3MjIzXzIwMjAwMjE2MDA0NDM2NTA3LnBuZw?x-oss-process=image/format,png",alt:""}}),t._v("\n主要分成两步：")]),t._v(" "),a("ol",[a("li",[t._v("尝试释放锁（tryReleaseShared），锁释放失败直接返回，释放成功走 2，本步由 Sync 实现")]),t._v(" "),a("li",[t._v("释放当前节点的后置等待节点，该步 AQS 已经完全实现")])]),t._v(" "),a("h3",{attrs:{id:"tryreleaseshared"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tryreleaseshared"}},[t._v("#")]),t._v(" tryReleaseShared")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWRmaWxlcy5ub3djb2Rlci5jb20vZmlsZXMvMjAyMDAyMTYvNTA4ODc1NV8xNTgxNzg1MjY3MjQ0XzIwMjAwMjE2MDAzODMzOTcucG5n?x-oss-process=image/format,png",alt:""}})]),t._v(" "),a("p",[t._v("对 state 进行递减，直到 state 变成 0；当 state 递减为 0 时，才返回 true。")]),t._v(" "),a("h1",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("研究完 CountDownLatch 的源码，可知其底层结构仍然依赖了 AQS，对其线程所封装的结点是采用共享模式，而 ReentrantLock 是采用独占模式。可以仔细对比差异，深入理解研究。")])])}),[],!1,null,null,null);s.default=e.exports}}]);