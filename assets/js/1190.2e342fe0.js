(window.webpackJsonp=window.webpackJsonp||[]).push([[1190],{1581:function(v,_,t){"use strict";t.r(_);var a=t(13),r=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("p",[v._v("主键(primary key)，一列 (或一组列)，其值能够唯一区分表中的每个行。唯一标识表中每行的这个列(或这组列)称为主键。主键用来表示一个特定的行。没有主键，更新或删除表中特定行很困难，因为没有安全方法保证只涉及相关的行而不误伤其他行！\n主键索引自动创建，如果不自增就会造成频繁页分裂，导致性能降低。")]),v._v(" "),t("p",[v._v("一个顾客表可以使用顾客编号列，而订单表可以使用订单ID，雇员表可以使用雇员ID或雇员社会保险号。")]),v._v(" "),t("p",[t("strong",[v._v("应该总是定义主键")]),v._v(" 虽然并非总需主键，但大多数数据库设计人员都应保证他们创建的每个表具有一个主键，以便以后的数据操纵和管理。")]),v._v(" "),t("p",[v._v("表中的任何列都可以作为主键，只要它满足以下主键值规则条件:")]),v._v(" "),t("ol",[t("li",[v._v("任两行不具相同的主键值")]),v._v(" "),t("li",[v._v("每行都必须具有一个主键值(主键列不允许NULL)")])]),v._v(" "),t("blockquote",[t("p",[v._v("这里的规则是MySQL本身强制实施的。")])]),v._v(" "),t("p",[v._v("除MySQL强制实施的规则外，还应该坚持的最佳实践:")]),v._v(" "),t("ol",[t("li",[v._v("不更新主键列中的值")]),v._v(" "),t("li",[v._v("不重用主键列的值")]),v._v(" "),t("li",[v._v("不在主键列中使用可能会更改的值\n例如，如果使用一个名字作为主键以标识某个供应商，当该供应商合并和更改其\n名字时，必须更改这个主键)")])]),v._v(" "),t("h2",{attrs:{id:"联合主键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#联合主键"}},[v._v("#")]),v._v(" 联合主键")]),v._v(" "),t("ul",[t("li",[v._v("好处\n可以直观的看到某个重复字段的记录条数")])]),v._v(" "),t("p",[v._v("主键A跟主键B组成联合主键\n主键A跟主键B的数据可以完全相同，联合就在于主键A跟主键B形成的联合主键是唯一的。\n联合主键体现在多个表上，复合主键体现在一个表中的多个字段。")]),v._v(" "),t("h2",{attrs:{id:"复合主键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#复合主键"}},[v._v("#")]),v._v(" 复合主键")]),v._v(" "),t("p",[v._v("主键通常定义在表的一列上，但这并不是必需的，也可使用"),t("strong",[v._v("多个列作为主键")]),v._v("。此时上述的条件必须应用到构成主键的所有列，所有列值的组合必须是唯一的(多列中的单个列的值可以不唯一)。")]),v._v(" "),t("p",[v._v("表的主键含有一个以上的字段组成,不使用无业务含义的自增id作为主键\n将多个字段设置为主键，形成复合主键，这多个字段联合标识唯一性，其中，某几个主键字段值出现重复是没有问题的，只要不是有多条记录的所有主键值完全一样，就不算重复")]),v._v(" "),t("h2",{attrs:{id:"超键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#超键"}},[v._v("#")]),v._v(" "),t("strong",[v._v("超键")])]),v._v(" "),t("p",[v._v("在关系中能唯一标识元组的属性集称为关系模式的超键。一个属性可以为作为一个超键，多个属性组合在一起也可以作为一个超键。"),t("strong",[v._v("超键包含候选键和主键。")])]),v._v(" "),t("h2",{attrs:{id:"候选键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#候选键"}},[v._v("#")]),v._v(" "),t("strong",[v._v("候选键")])]),v._v(" "),t("p",[v._v("是"),t("strong",[v._v("最小超键")]),v._v("，即没有冗余元素的超键。")]),v._v(" "),t("h2",{attrs:{id:"外键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#外键"}},[v._v("#")]),v._v(" "),t("strong",[v._v("外键")])]),v._v(" "),t("p",[v._v("在一个表中存在的"),t("strong",[v._v("另一个表的主键")]),v._v("称此表的外键")]),v._v(" "),t("h1",{attrs:{id:"主键的选择"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主键的选择"}},[v._v("#")]),v._v(" 主键的选择")]),v._v(" "),t("ul",[t("li",[v._v("代理主键（推荐使用）\n与业务无关的，无意义的数字序列。\n"),t("ul",[t("li",[v._v("不与业务耦合，因此更容易维护")]),v._v(" "),t("li",[v._v("通用的键策略能够减少要编写的源码数量，减少系统的总体拥有成本")])])]),v._v(" "),t("li",[v._v("自然主键\n事物属性中的自然唯一标识")])])])}),[],!1,null,null,null);_.default=r.exports}}]);