{"remainingRequest":"/Users/mac/IdeaProjects/poi/record.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/IdeaProjects/poi/record.github.io/node_modules/vuepress-plugin-tags/tags.vue?vue&type=style&index=0&id=354ca784&scoped=true&lang=stylus&","dependencies":[{"path":"/Users/mac/IdeaProjects/poi/record.github.io/node_modules/vuepress-plugin-tags/tags.vue","mtime":1640003598954},{"path":"/Users/mac/IdeaProjects/poi/record.github.io/node_modules/css-loader/dist/cjs.js","mtime":1640003588127},{"path":"/Users/mac/IdeaProjects/poi/record.github.io/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1640003594273},{"path":"/Users/mac/IdeaProjects/poi/record.github.io/node_modules/postcss-loader/src/index.js","mtime":1640003588125},{"path":"/Users/mac/IdeaProjects/poi/record.github.io/node_modules/stylus-loader/index.js","mtime":1640003587014},{"path":"/Users/mac/IdeaProjects/poi/record.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1640003587866},{"path":"/Users/mac/IdeaProjects/poi/record.github.io/node_modules/vue-loader/lib/index.js","mtime":1640003594272}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi50YWcgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmYWY1Ow0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIGhlaWdodDogMzJweDsNCiAgcGFkZGluZzogMCAxMHB4Ow0KICBsaW5lLWhlaWdodDogMzBweDsNCiAgZm9udC1zaXplOiAxMnB4Ow0KICBjb2xvcjogIzQyYjk4MzsNCiAgYm9yZGVyOiAxcHggc29saWQgI2UyZmFlZjsNCiAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICBib3gtc2l6aW5nOiBib3JkZXItYm94Ow0KICB3aGl0ZS1zcGFjZTogbm93cmFwOw0KICBtYXJnaW4tbGVmdDogMTBweDsNCiAgbWFyZ2luLXRvcDogNXB4Ow0KfQ0KDQoubm90LWZpcnN0IHsNCiAgbWFyZ2luLWxlZnQ6IDBweDsNCn0NCg0KLnRhZy50YWctLXByaW1hcnkgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNmNWZmOw0KICBjb2xvcjogIzQwOWVmZjsNCiAgYm9yZGVyOiAxcHggc29saWQgI2Q5ZWNmZjsNCn0NCg0KLnRhZy50YWctLXN1Y2Nlc3Mgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmOWViOw0KICBib3JkZXItY29sb3I6ICNlMWYzZDg7DQogIGNvbG9yOiAjNjdjMjNhOw0KfQ0KDQoudGFnLnRhZy0taW5mbyB7DQogIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjU7DQogIGJvcmRlci1jb2xvcjogI2U5ZTllYjsNCiAgY29sb3I6ICM5MDkzOTk7DQp9DQoNCi50YWcudGFnLS13YXJuaW5nIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2ZkZjZlYzsNCiAgYm9yZGVyLWNvbG9yOiAjZmFlY2Q4Ow0KICBjb2xvcjogI2U2YTIzYzsNCn0NCg0KLnRhZy50YWctLWRhbmdlciB7DQogIGJhY2tncm91bmQtY29sb3I6ICNmZWYwZjA7DQogIGJvcmRlci1jb2xvcjogI2ZkZTJlMjsNCiAgY29sb3I6ICNmNTZjNmM7DQp9DQo="},{"version":3,"sources":["tags.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"tags.vue","sourceRoot":"node_modules/vuepress-plugin-tags","sourcesContent":["<template>\r\n  <div>\r\n    <span v-for=\"(item,index) in tags\"\r\n          class=\"tag\"\r\n          :class=\"classObject(index)\"\r\n          :style=\"styleObject\"\r\n    >\r\n      {{ item }}\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n/**\r\n * 使用预定于的变量，构建当前文章的标签列表\r\n * https://vuepress.vuejs.org/zh/guide/frontmatter.html#%E5%85%B6%E4%BB%96%E6%A0%BC%E5%BC%8F%E7%9A%84-front-matter\r\n */\r\nexport default {\r\n  props: {\r\n    tags: {\r\n      type: Array,\r\n      default: []\r\n    },\r\n    config: {\r\n      type: Object,\r\n      default: {\r\n        type: 'default', // 标签预定义颜色\r\n        color: '#42b983',  // 标签字体颜色\r\n        border: '1px solid #e2faef' // 标签边框颜色\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    this.tag.color = this.config.color\r\n    this.tag.border = this.config.border\r\n    this.tag.backgroundColor = this.config.backgroundColor\r\n    this.rainbowInit()\r\n  },\r\n  data () {\r\n    return {\r\n      tag: {\r\n        color: null,\r\n        border: null,\r\n        backgroundColor: null,\r\n      },\r\n      _rainbowData: {\r\n        timer: null\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    classObject (index) {\r\n      let configType = this.config.type\r\n      return {\r\n        'not-first': index === 0,\r\n        'tag--primary': 'primary' === configType,\r\n        'tag--success': 'success' === configType,\r\n        'tag--info': 'info' === configType,\r\n        'tag--warning': 'warning' === configType,\r\n        'tag--danger': 'danger' === configType\r\n      }\r\n    },\r\n    /**\r\n     * 彩虹类型初始化\r\n     */\r\n    rainbowInit () {\r\n      // 如果是彩虹类型，则随机\r\n      if (this.config.type === 'rainbow') {\r\n        /*\r\n          rainbows: [ // 将你要随机的标签样式组在这里定义\r\n            {\r\n              color: '#42b983',  // 标签字体颜色\r\n              border: '1px solid #e2faef', // 标签边框颜色\r\n              backgroundColor: '#f0faf5', // 标签背景颜色\r\n            },\r\n            {\r\n              color: '#42b983',  // 标签字体颜色\r\n              border: '1px solid #e2faef', // 标签边框颜色\r\n              backgroundColor: '#f0faf5', // 标签背景颜色\r\n            }\r\n        ]\r\n         */\r\n        if (this.config.rainbows) {\r\n          this.rainbowsRandom()\r\n          // 销毁方法不执行，暂时没法清除 timer\r\n          // if (this.config.interval && this.config.interval > 0) {\r\n          //   this._rainbowData.timer = setInterval(() => {\r\n          //     console.log('随机')\r\n          //     this.rainbowsRandom()\r\n          //   }, this.config.interval * 1000)\r\n          // }\r\n        } else {\r\n          console.warn('randows 未配置随机标签样式组，彩虹随机样式将不生效')\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 彩虹类型随机选择\r\n     */\r\n    rainbowsRandom () {\r\n      const rainbows = this.config.rainbows\r\n      let index = Math.floor(Math.random() * rainbows.length)\r\n      let rainbow = rainbows[index]\r\n      this.tag.color = rainbow.color\r\n      this.tag.border = rainbow.border\r\n      this.tag.backgroundColor = rainbow.backgroundColor\r\n    }\r\n  },\r\n  mounted () {\r\n  },\r\n  computed: {\r\n    styleObject () {\r\n      if (this.config.type === 'default'\r\n          || this.config.type === 'rainbow') {\r\n        return {\r\n          color: this.tag.color,\r\n          border: this.tag.border,\r\n          'background-color': this.tag.backgroundColor\r\n        }\r\n      }\r\n      return {}\r\n    }\r\n  },\r\n  watch: {\r\n    config (newVal) {\r\n      this.tag.color = newVal.color\r\n      this.tag.border = newVal.border\r\n      this.tag.backgroundColor = newVal.backgroundColor\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"stylus\">\r\n.tag {\r\n  background-color: #f0faf5;\r\n  display: inline-block;\r\n  height: 32px;\r\n  padding: 0 10px;\r\n  line-height: 30px;\r\n  font-size: 12px;\r\n  color: #42b983;\r\n  border: 1px solid #e2faef;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n  white-space: nowrap;\r\n  margin-left: 10px;\r\n  margin-top: 5px;\r\n}\r\n\r\n.not-first {\r\n  margin-left: 0px;\r\n}\r\n\r\n.tag.tag--primary {\r\n  background-color: #ecf5ff;\r\n  color: #409eff;\r\n  border: 1px solid #d9ecff;\r\n}\r\n\r\n.tag.tag--success {\r\n  background-color: #f0f9eb;\r\n  border-color: #e1f3d8;\r\n  color: #67c23a;\r\n}\r\n\r\n.tag.tag--info {\r\n  background-color: #f4f4f5;\r\n  border-color: #e9e9eb;\r\n  color: #909399;\r\n}\r\n\r\n.tag.tag--warning {\r\n  background-color: #fdf6ec;\r\n  border-color: #faecd8;\r\n  color: #e6a23c;\r\n}\r\n\r\n.tag.tag--danger {\r\n  background-color: #fef0f0;\r\n  border-color: #fde2e2;\r\n  color: #f56c6c;\r\n}\r\n</style>\r\n"]}]}