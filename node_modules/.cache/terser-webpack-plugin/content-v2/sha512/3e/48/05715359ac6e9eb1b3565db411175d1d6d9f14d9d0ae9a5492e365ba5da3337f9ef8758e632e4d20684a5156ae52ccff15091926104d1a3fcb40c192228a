{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[426],{841:function(s,t,a){\"use strict\";a.r(t);var n=a(13),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"对项目作出贡献\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#对项目作出贡献\"}},[s._v(\"#\")]),s._v(\" 对项目作出贡献\")]),s._v(\" \"),a(\"p\",[s._v(\"账户已经建立好了，现在我们来了解一些能帮助你对现有的项目做出贡献的知识。\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"派生-fork-项目\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#派生-fork-项目\"}},[s._v(\"#\")]),s._v(\" 派生（Fork）项目\")]),s._v(\" \"),a(\"p\",[s._v(\"如果你想要 \"),a(\"strong\",[s._v(\"参与某个项目\")]),s._v(\"，但是并 \"),a(\"strong\",[s._v(\"没有推送权限\")]),s._v(\"，这时可以对这个项目进行 \"),a(\"strong\",[s._v(\"“派生”\")]),s._v(\"。 派生的意思是指，GitHub 将在你的空间中创建一个完全属于你的项目副本，且你对其具有推送权限。\")]),s._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"TIP\")]),s._v(\" \"),a(\"p\",[s._v(\"在以前，\"),a(\"strong\",[s._v(\"“fork”\")]),s._v(\" 是一个贬义词，指的是某个人使开源项目向不同的方向发展，或者创建一个竞争项目，使得原项目的贡献者分裂。 在 GitHub，\"),a(\"strong\",[s._v(\"“fork”\")]),s._v(\" 指的是你自己的空间中创建的项目副本，这个副本允许你以一种更开放的方式对其进行修改。\")])]),s._v(\" \"),a(\"p\",[s._v(\"通过这种方式，项目的管理者 \"),a(\"strong\",[s._v(\"不再需要忙着把用户添加到贡献者列表并给予他们推送权限\")]),s._v(\"。 人们可以派生这个项目，\"),a(\"strong\",[s._v(\"将修改推送到派生出的项目副本中\")]),s._v(\"，并 \"),a(\"strong\",[s._v(\"通过创建合并请求（Pull Request）来让他们的改动进入源版本库\")]),s._v(\"，下文我们会详细说明。 创建了合并请求后，就会开启一个可供审查代码的板块，项目的拥有者和贡献者可以在此讨论相关修改，直到项目拥有者对其感到满意，并且认为这些修改可以被合并到版本库。\")]),s._v(\" \"),a(\"p\",[s._v(\"你可以通过点击项目页面右上角的 \"),a(\"strong\",[s._v(\"“Fork”\")]),s._v(\" 按钮，来派生这个项目。\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/7f64e5e373e4861430ab866cb5a4e3cb.png\",alt:\"“Fork”按钮.\"}})]),s._v(\" \"),a(\"p\",[s._v(\"稍等片刻，你将被转到新项目页面，该项目包含可写的代码副本。\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"github-流程\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#github-流程\"}},[s._v(\"#\")]),s._v(\" GitHub 流程\")]),s._v(\" \"),a(\"p\",[s._v(\"GitHub 设计了一个 \"),a(\"strong\",[s._v(\"以合并请求为中心的特殊合作流程\")]),s._v(\"。 它基于我们在 \"),a(\"RouterLink\",{attrs:{to:\"/git-scm/03/\"}},[s._v(\"Git 分支\")]),s._v(\" 的 \"),a(\"RouterLink\",{attrs:{to:\"/git-scm/03/04.html#特性分支\"}},[s._v(\"特性分支\")]),s._v(\" 中提到的工作流程。 不管你是在一个紧密的团队中使用单独的版本库，或者使用许多的 \"),a(\"strong\",[s._v(\"“Fork”\")]),s._v(\" 来为一个由陌生人组成的国际企业或网络做出贡献，这种合作流程都能应付。\")],1),s._v(\" \"),a(\"p\",[s._v(\"流程通常如下：\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"从 master 分支中创建一个新分支\")]),s._v(\" \"),a(\"li\",[s._v(\"提交一些修改来改进项目\")]),s._v(\" \"),a(\"li\",[s._v(\"将这个分支推送到 GitHub 上\")]),s._v(\" \"),a(\"li\",[s._v(\"创建一个合并请求\")]),s._v(\" \"),a(\"li\",[s._v(\"讨论，根据实际情况继续修改\")]),s._v(\" \"),a(\"li\",[s._v(\"项目的拥有者合并或关闭你的合并请求\")])]),s._v(\" \"),a(\"p\",[s._v(\"这基本和 \"),a(\"RouterLink\",{attrs:{to:\"/git-scm/05/01.html#集成管理者工作流\"}},[s._v(\"集成管理者工作流\")]),s._v(\" 中的一体化管理流程差不多，但是团队可以使用 GitHub 提供的网页工具替代电子邮件来交流和审查修改。\")],1),s._v(\" \"),a(\"p\",[s._v(\"现在我们来看一个使用这个流程的例子。\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"创建合并请求\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建合并请求\"}},[s._v(\"#\")]),s._v(\" 创建合并请求\")]),s._v(\" \"),a(\"p\",[s._v(\"Tony 在找一些能在他的 Arduino 微控制器上运行的代码，他觉得 https://github.com/schacon/blink 中的代码不错。\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/386c19885c449c89992a95c9e664954f.png\",alt:\"他想要做出贡献的项目\"}})]),s._v(\" \"),a(\"p\",[s._v(\"但是有个问题，这个代码中的的闪烁频率太高，我们觉得 3 秒一次比 1 秒一次更好一些。 所以让我们来改进这个程序，并将修改后的代码提交给这个项目。\")]),s._v(\" \"),a(\"p\",[s._v(\"首先，单击 \"),a(\"strong\",[s._v(\"“Fork”\")]),s._v(\" 按钮来获得这个项目的副本。 我们使用的用户名是 “tonychacon”，所以这个项目副本的访问地址是： https://github.com/tonychacon/blink 。 我们将它克隆到本地，创建一个分支，修改代码，最后再将改动推送到 GitHub。\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-bash line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[a(\"code\",[s._v(\"$ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"git\")]),s._v(\" clone https://github.com/tonychacon/blink \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" Cloning into \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'blink'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\\n\\n$ \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"cd\")]),s._v(\" blink\\n$ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"git\")]),s._v(\" checkout -b slow-blink \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" Switched to a new branch \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'slow-blink'\")]),s._v(\"\\n\\n$ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"sed\")]),s._v(\" -i \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"''\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'s/1000/3000/'\")]),s._v(\" blink.ino \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" $ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"git\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"diff\")]),s._v(\" --word-diff \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"diff\")]),s._v(\" --git a/blink.ino b/blink.ino\\nindex 15b9911\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\"a6cc5a5 \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100644\")]),s._v(\"\\n--- a/blink.ino\\n+++ b/blink.ino\\n@@ -18,7 +18,7 @@ void \"),a(\"span\",{pre:!0,attrs:{class:\"token function-name function\"}},[s._v(\"setup\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n// the loop routine runs over and over again forever:\\nvoid \"),a(\"span\",{pre:!0,attrs:{class:\"token function-name function\"}},[s._v(\"loop\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  digitalWrite\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"led, HIGH\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"   // turn the LED on \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"HIGH is the voltage level\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"-delay\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1000\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"-\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"+delay\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3000\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"+\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"               // \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"wait\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" a second\\n  digitalWrite\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"led, LOW\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"    // turn the LED off by making the voltage LOW\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"-delay\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1000\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"-\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"+delay\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3000\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"+\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"               // \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"wait\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" a second\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n$ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"git\")]),s._v(\" commit -a -m \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'three seconds is better'\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"slow-blink 5ca509d\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" three seconds is better\\n \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"file\")]),s._v(\" changed, \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\" insertions\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"+\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\", \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\" deletions\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"-\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\\n$ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"git\")]),s._v(\" push origin slow-blink \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" Username \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'https://github.com'\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\":\")]),s._v(\" tonychacon\\nPassword \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'https://tonychacon@github.com'\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\":\")]),s._v(\"\\nCounting objects: \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),s._v(\", done.\\nDelta compression using up to \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"8\")]),s._v(\" threads.\\nCompressing objects: \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100\")]),s._v(\"% \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\"/3\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\", done.\\nWriting objects: \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100\")]),s._v(\"% \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\"/3\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\", \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"340\")]),s._v(\" bytes \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\" bytes/s, done.\\nTotal \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"delta \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\", reused \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"delta \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\nTo https://github.com/tonychacon/blink\\n * \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"new branch\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"      slow-blink -\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" slow-blink\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),a(\"br\")])]),a(\"ol\",[a(\"li\",[s._v(\"将派生出的副本克隆到本地\")]),s._v(\" \"),a(\"li\",[s._v(\"创建出名称有意义的分支\")]),s._v(\" \"),a(\"li\",[s._v(\"修改代码\")]),s._v(\" \"),a(\"li\",[s._v(\"检查改动\")]),s._v(\" \"),a(\"li\",[s._v(\"将改动提交到分支中\")]),s._v(\" \"),a(\"li\",[s._v(\"将新分支推送到 GitHub 的副本中\")])]),s._v(\" \"),a(\"p\",[s._v(\"现在到 GitHub 上查看之前的项目副本，可以看到 GitHub 提示我们有新的分支，并且显示了一个大大的 \"),a(\"strong\",[s._v(\"绿色按钮\")]),s._v(\"让我们可以检查我们的改动，并给源项目创建合并请求。\")]),s._v(\" \"),a(\"p\",[s._v(\"你也可以到  \"),a(\"strong\",[s._v(\"“Branches”（分支）\")]),s._v(\" 页面查看分支并创建合并请求： \"),a(\"code\",[s._v(\"https://github.com/<用户名>/<项目名>/branches\")])]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/2db1acf36101cb00833d4beff84c9be3.png\",alt:\"img\"}})]),s._v(\" \"),a(\"p\",[s._v(\"上图中绿色按钮是 合并请求按钮\")]),s._v(\" \"),a(\"p\",[s._v(\"如果你点击了那个绿色按钮，就会看到一个新页面，在这里我们可以对改动填写 \"),a(\"strong\",[s._v(\"标题和描述\")]),s._v(\"，让项目的拥有者考虑一下我们的改动。通常花点时间来编写个清晰有用的描述是个不错的主意，这能让作者明白为什么这个改动可以给他的项目带来好处，并且让他接受合并请求。\")]),s._v(\" \"),a(\"p\",[s._v(\"同时我们也能看到比主分支中所 \"),a(\"strong\",[s._v(\"“领先”（ahead\")]),s._v(\"）的提交（在这个例子中只有一个）以及所有将会被合并的改动与之前代码的对比。\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/5e36d39f99724e6f7bdb42ad770712ab.png\",alt:\"合并请求创建页面\"}})]),s._v(\" \"),a(\"p\",[s._v(\"当你单击了 \"),a(\"strong\",[s._v(\"“Create pull request”（创建合并请求）\")]),s._v(\" 的按钮后，这个项目的拥有者将会收到一条包含关改动和合并请求页面的链接的提醒。\")]),s._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"TIP\")]),s._v(\" \"),a(\"p\",[s._v(\"虽然合并请求通常是在贡献者准备好在公开项目中提交改动的时候提交，但是也常被用在仍处于开发阶段的内部项目中。因为合并请求在提交后 \"),a(\"strong\",[s._v(\"依然可以加入新的改动\")]),s._v(\" ，它也经常被用来建立团队合作的环境，而不只是在最终阶段使用。\")])]),s._v(\" \"),a(\"h2\",{attrs:{id:\"利用合并请求\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#利用合并请求\"}},[s._v(\"#\")]),s._v(\" 利用合并请求\")]),s._v(\" \"),a(\"p\",[s._v(\"现在，项目的拥有者可以看到你的改动并合并它，拒绝它或是发表评论。在这里我们就当作他喜欢这个点子，但是他想要让灯熄灭的时间比点亮的时间稍长一些。\")]),s._v(\" \"),a(\"p\",[s._v(\"接下来可能会通过电子邮件进行互动，就像我们在  \"),a(\"RouterLink\",{attrs:{to:\"/git-scm/05/\"}},[s._v(\"分布式 Git\")]),s._v(\"  中提到的工作流程那样，但是在 GitHub，这些都在线上完成。项目的拥有者可以审查修改，只需要单击某一行，就可以对其发表评论。\")],1),s._v(\" \"),a(\"p\",[s._v(\"对合并请求内的特定一行发表评论：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/abe5b0abbb2d023318b4a4021efd56ac.png\",alt:\"img\"}})]),s._v(\" \"),a(\"p\",[s._v(\"当维护者发表评论后，提交合并请求的人，以及所有正在关注（\"),a(\"strong\",[s._v(\"Watching\")]),s._v(\"）这个版本库的用户都会收到通知。我们待会儿将会告诉你如何修改这项设置。现在，如果 Tony 有开启电子邮件提醒，他将会收到这样的一封邮件：\")]),s._v(\" \"),a(\"p\",[s._v(\"通过电子邮件发送的评论提醒：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/3657c65297f507895e4b71a7ea00172f.png\",alt:\"电子邮件提醒\"}})]),s._v(\" \"),a(\"p\",[s._v(\"每个人都能在合并请求中发表评论。在 \"),a(\"strong\",[s._v(\"合并请求讨论页面\")]),s._v(\"  里我们可以看到项目拥有者对某行代码发表评论，并在讨论区留下了一个普通评论。你可以看到被评论的代码也会在互动中显示出来。\")]),s._v(\" \"),a(\"p\",[s._v(\"合并请求讨论页面：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/9e464c8f21961deaab2bc957b88f5f98.png\",alt:\"合并请求讨论页面\"}})]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"现在贡献者可以看到如何做才能让他们的改动被接受\")]),s._v(\"。幸运的是，这也是一件轻松的事情。如果你使用的是电子邮件进行交流，你需要再次对代码进行修改并重新提交至邮件列表，在 GitHub 上，你只需要再次提交到你的分支中并推送即可。\")]),s._v(\" \"),a(\"p\",[s._v(\"如果贡献者完成了以上的操作，项目的拥有者会再次收到提醒，当他们查看页面时，将会看到最新的改动。事实上，只要提交中有一行代码改动，GitHub 都会注意到并处理掉旧的变更集。\")]),s._v(\" \"),a(\"p\",[s._v(\"最终的合并请求：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/d43db092d239639f2637e00132688927.png\",alt:\"最终的合并请求\"}})]),s._v(\" \"),a(\"p\",[s._v(\"如果你点开合并请求的  \"),a(\"strong\",[s._v(\"“Files Changed\")]),s._v(\"”（更改的文件）选项卡，你将会看到 \"),a(\"strong\",[s._v(\"“整理过的” 差异表\")]),s._v(\" —— 也就是这个分支被合并到主分支之后将会产生的所有改动，其实就是 \"),a(\"code\",[s._v(\"git diff master…<分支名> 命令\")]),s._v(\" 的执行结果。你可以浏览  \"),a(\"RouterLink\",{attrs:{to:\"/git-scm/05/03.html#确定引入了哪些东西\"}},[s._v(\"确定引入了哪些东西\")]),s._v(\"  来了解更多关于差异表的知识。\")],1),s._v(\" \"),a(\"p\",[s._v(\"你还会注意到，\"),a(\"strong\",[s._v(\"GitHub 会检查你的合并请求是否能直接合并\")]),s._v(\"，如果可以，将会提供一个按钮来进行合并操作。这个按钮只在你对版本库有写入权限并且可以进行简洁合并时才会显示。你点击后 GitHub 将做出一个 \"),a(\"strong\",[s._v(\"“非快进式”（non-fast-forward）合并\")]),s._v(\"，即使这个合并 \"),a(\"strong\",[s._v(\"能够\")]),s._v(\" 快进式（fast-forward）合并，GitHub 依然会创建一个合并提交。\")]),s._v(\" \"),a(\"p\",[s._v(\"如果你需要，你还 \"),a(\"strong\",[s._v(\"可以将分支拉取并在本地合并\")]),s._v(\"。\"),a(\"strong\",[s._v(\"如果你将这个分支合并到 master 分支中并推送到 GitHub，这个合并请求会被自动关闭\")]),s._v(\"。\")]),s._v(\" \"),a(\"p\",[s._v(\"这就是大部分 GitHub 项目使用的工作流程。创建分支，基于分支创建合并请求，进行讨论，根据需要继续在分支上进行修改，最终关闭或合并合并请求。\")]),s._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"不必总是 Fork\")]),s._v(\" \"),a(\"p\",[s._v(\"有件很重要的事情：你可以在同一个版本库中不同的分支提交合并请求。如果你正在和某人实现某个功能，而且你对项目有写权限，你可以推送分支到版本库，并在 master 分支提交一个合并请求并在此进行代码审查和讨论的操作。不需要进行 \"),a(\"strong\",[s._v(\"“Fork”\")]),s._v(\"。\")])]),s._v(\" \"),a(\"h2\",{attrs:{id:\"合并请求的进阶用法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#合并请求的进阶用法\"}},[s._v(\"#\")]),s._v(\" 合并请求的进阶用法\")]),s._v(\" \"),a(\"p\",[s._v(\"目前，我们学到了如何在 GitHub 平台对一个项目进行最基础的贡献。现在我们会教给你一些小技巧，让你可以更加有效率地使用合并请求。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"将合并请求制作成补丁\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#将合并请求制作成补丁\"}},[s._v(\"#\")]),s._v(\" 将合并请求制作成补丁\")]),s._v(\" \"),a(\"p\",[s._v(\"有一件重要的事情：许多项目并不认为合并请求可以作为补丁，就和通过邮件列表工作的的项目对补丁贡献的看法一样。大多数的 GitHub 项目将合并请求的分支当作对改动的交流方式，并将变更集合起来统一进行合并。\")]),s._v(\" \"),a(\"p\",[s._v(\"这是个重要的差异，因为一般来说改动会在代码完成前提出，这和基于邮件列表的补丁贡献有着天差地别。这使得维护者们可以更早的沟通，由社区中的力量能提出更好的方案。当有人从合并请求提交了一些代码，并且维护者和社区提出了一些意见，这个补丁系列并不需要从头来过，只需要将改动重新提交并推送到分支中，这使得讨论的背景和过程可以齐头并进。\")]),s._v(\" \"),a(\"p\",[s._v(\"举个例子，你可以回去看看 \"),a(\"strong\",[s._v(\"最终的合并请求\")]),s._v(\"，你会注意到贡献者 \"),a(\"strong\",[s._v(\"没有变基他的提交再提交一个新的合并请求\")]),s._v(\"，\"),a(\"strong\",[s._v(\"而是直接增加了新的提交并推送到已有的分支中\")]),s._v(\"。如果你之后再回去查看这个合并请求，你可以轻松地找到这个修改的原因。点击网页上的 **“Merge”（合并）**按钮后，会建立一个合并提交并指向这个合并请求，你就可以很轻松的研究原来的讨论内容。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"与上游保持同步\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#与上游保持同步\"}},[s._v(\"#\")]),s._v(\" 与上游保持同步\")]),s._v(\" \"),a(\"p\",[s._v(\"如果你的合并请求由于过时或其他原因不能干净地合并，你需要进行修复才能让维护者对其进行合并。GitHub 会对每个提交进行测试，让你知道你的合并请求能否简洁的合并。\")]),s._v(\" \"),a(\"p\",[s._v(\"能进行干净合并：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/4ebbe0b86c0e5d99aa0a50df83ac9be9.png\",alt:\"合并请求合并失败\"}})]),s._v(\" \"),a(\"p\",[s._v(\"如果你看到了像上图中的画面，你就 \"),a(\"strong\",[s._v(\"需要修复你的分支让这个提示变成绿色\")]),s._v(\"，这样维护者就不需要再做额外的工作。\")]),s._v(\" \"),a(\"p\",[s._v(\"你有两种方法来解决这个问题。你 \"),a(\"strong\",[s._v(\"可以把你的分支变基到目标分支中去\")]),s._v(\"（通常是你派生出的版本库中的 master 分支），或者你 \"),a(\"strong\",[s._v(\"可以合并目标分支到你的分支中去\")]),s._v(\"。\")]),s._v(\" \"),a(\"p\",[s._v(\"GitHub 上的 \"),a(\"strong\",[s._v(\"大多数的开发者会使用后一种方法\")]),s._v(\"，基于我们在上一节提到的理由：\"),a(\"strong\",[s._v(\"我们最看重的是历史记录和最后的合并\")]),s._v(\"，变基除了给你带来看上去简洁的历史记录，只会让你的工作变得更加困难且更容易犯错。\")]),s._v(\" \"),a(\"p\",[s._v(\"如果你想要合并目标分支来让你的合并请求变得可合并，\"),a(\"strong\",[s._v(\"你需要将源版本库添加为一个新的远端\")]),s._v(\"，\"),a(\"strong\",[s._v(\"并从远端抓取内容，合并主分支的内容到你的分支中去\")]),s._v(\"，修复所有的问题并最终重新推送回你提交合并请求使用的分支。\")]),s._v(\" \"),a(\"p\",[s._v(\"在这个例子中，我们再次使用之前的  \"),a(\"strong\",[s._v(\"“tonychacon”\")]),s._v(\"  用户来进行示范，源作者提交了一个改动，使得合并请求和它产生了冲突。现在来看我们解决这个问题的步骤。\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-bash line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[a(\"code\",[s._v(\"$ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"git\")]),s._v(\" remote \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"add\")]),s._v(\" upstream https://github.com/schacon/blink \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" $ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"git\")]),s._v(\" fetch upstream \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" remote: Counting objects: \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\", done.\\nremote: Compressing objects: \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100\")]),s._v(\"% \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\"/3\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\", done.\\nUnpacking objects: \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100\")]),s._v(\"% \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\"/3\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\", done.\\nremote: Total \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"delta \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\", reused \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"delta \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\nFrom https://github.com/schacon/blink\\n * \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"new branch\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"      master     -\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" upstream/master\\n\\n$ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"git\")]),s._v(\" merge upstream/master \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" Auto-merging blink.ino\\nCONFLICT \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"content\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\": Merge conflict \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" blink.ino\\nAutomatic merge failed\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" fix conflicts and \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"then\")]),s._v(\" commit the result.\\n\\n$ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"vim\")]),s._v(\" blink.ino \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" $ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"git\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"add\")]),s._v(\" blink.ino\\n$ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"git\")]),s._v(\" commit\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"slow-blink 3c8d735\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" Merge remote-tracking branch \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'upstream/master'\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"\\\\\")]),s._v(\"\\n    into slower-blink\\n\\n$ \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"git\")]),s._v(\" push origin slow-blink \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" Counting objects: \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6\")]),s._v(\", done.\\nDelta compression using up to \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"8\")]),s._v(\" threads.\\nCompressing objects: \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100\")]),s._v(\"% \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6\")]),s._v(\"/6\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\", done.\\nWriting objects: \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100\")]),s._v(\"% \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6\")]),s._v(\"/6\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\", \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"682\")]),s._v(\" bytes \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\" bytes/s, done.\\nTotal \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"delta \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\", reused \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"delta \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\nTo https://github.com/tonychacon/blink\\n   ef4725c\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\"3c8d735  slower-blink -\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" slow-blink\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\")])]),a(\"ol\",[a(\"li\",[s._v(\"将源版本库添加为一个远端，并命名为 \"),a(\"strong\",[s._v(\"“upstream”\")]),s._v(\"（上游）\")]),s._v(\" \"),a(\"li\",[s._v(\"从远端抓取最新的内容\")]),s._v(\" \"),a(\"li\",[s._v(\"将主分支的内容合并到你的分支中\")]),s._v(\" \"),a(\"li\",[s._v(\"修复产生的冲突\")]),s._v(\" \"),a(\"li\",[s._v(\"再推送回同一个分支\")])]),s._v(\" \"),a(\"p\",[s._v(\"你完成了上面的步骤后，合并请求将会自动更新并重新检查是否能干净的合并。\")]),s._v(\" \"),a(\"p\",[s._v(\"合并请求现在可以干净地合并了：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/1d66a1b69d03f8b5805e43af40fa49af.png\",alt:\"修复了的合并请求\"}})]),s._v(\" \"),a(\"p\",[s._v(\"Git 的伟大之处就是你可以一直重复以上操作。如果你有一个运行了十分久的项目，你可以轻松地合并目标分支且只需要处理最近的一次冲突，这使得管理流程更加容易。\")]),s._v(\" \"),a(\"p\",[s._v(\"如果你一定想对分支做变基并进行清理，你可以这么做，\"),a(\"strong\",[s._v(\"但是强烈建议你不要强行的提交到已经提交了合并请求的分支\")]),s._v(\"。如果其他人拉取了这个分支并进行一些修改，你将会遇到  \"),a(\"RouterLink\",{attrs:{to:\"/git-scm/03/06.html#变基的风险\"}},[s._v(\"变基的风险\")]),s._v(\"  中提到的问题。相对的，将变基后的分支推送到 GitHub 上的一个新分支中，并且创建一个全新的合并请求引用旧的合并请求，然后关闭旧的合并请求。\")],1),s._v(\" \"),a(\"h3\",{attrs:{id:\"参考\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考\"}},[s._v(\"#\")]),s._v(\" 参考\")]),s._v(\" \"),a(\"p\",[s._v(\"你的下个问题可能是 \"),a(\"strong\",[s._v(\"“我该如何引用旧的合并请求？”\")]),s._v(\"。有许多方法可以让你在 GitHub 上的几乎任何地方引用其他东西。\")]),s._v(\" \"),a(\"p\",[s._v(\"先从 \"),a(\"strong\",[s._v(\"如何对合并请求或议题（Issue）进行相互引用开始\")]),s._v(\"。\"),a(\"strong\",[s._v(\"所有的合并请求和议题在项目中都会有一个独一无二的编号\")]),s._v(\"。举个例子，你无法同时拥有 3 号合并请求和 3 号议题。如果你想要引用任何一个合并请求或议题，你只需要在提交或描述中输入 \"),a(\"strong\",[s._v(\"#<编号>\")]),s._v(\"  即可。你也可以指定引用其他版本库的议题或合并请求，如果你想要引用其他人对该版本库的 \"),a(\"strong\",[s._v(\"“Fork” 中的议题或合并请求\")]),s._v(\"，输入 \"),a(\"strong\",[s._v(\"用户名\"),a(\"code\",[s._v(\"#<编号>\")])]),s._v(\" ，如果在不同的版本库中，输入  \"),a(\"strong\",[s._v(\"用户名/版本库名\"),a(\"code\",[s._v(\"#<编号>\")])]),s._v(\" 。\")]),s._v(\" \"),a(\"p\",[s._v(\"我们来看一个例子。\"),a(\"strong\",[s._v(\"假设我们对上个例子中的分支进行了变基\")]),s._v(\"，并为此创建一个新的合并请求，现在我们希望能在新的合并请求中引用旧的合并请求。我们同时希望引用一个派生出的项目中的议题和一个完全不同的项目中的议题，就可以像  \"),a(\"strong\",[s._v(\"在合并请求中的交叉引用\")]),s._v(\" 这样填写描述。\")]),s._v(\" \"),a(\"p\",[s._v(\"在合并请求中的交叉引用：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/1232be22da49aece29f2b15aa68163dc.png\",alt:\"合并请求中的引用\"}})]),s._v(\" \"),a(\"p\",[s._v(\"当我们提交了这个合并请求，我们将会看到以上内容被渲染成这样：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/a9fc633ebbca191ea7275b79fe1c90d6.png\",alt:\"渲染后的合并请求中的引用\"}})]),s._v(\" \"),a(\"p\",[s._v(\"你会注意到完整的 GitHub 地址被简化了，只留下了必要的信息。\")]),s._v(\" \"),a(\"p\",[s._v(\"如果 Tony 回去关闭了源合并请求，我们可以看到一个被引用的提示，GitHub 会自动的反向追踪事件并显示在合并请求的时间轴上。这意味着任何查看这个合并请求的人可以轻松地访问新的合并请求。这个链接就像  \"),a(\"strong\",[s._v(\"在合并请求中渲染后的交叉引用\")]),s._v(\" 中展示的那样。\")]),s._v(\" \"),a(\"p\",[s._v(\"在合并请求中渲染后的交叉引用：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/227d451a88b0de82770db780410baf3b.png\",alt:\"合并请求关闭\"}})]),s._v(\" \"),a(\"p\",[s._v(\"除了议题编号外，你 \"),a(\"strong\",[s._v(\"还可以通过使用提交的 SHA-1 来引用提交\")]),s._v(\"。你必须完整的写出 40 位长的 SHA，GitHub 会在评论中自动地产生指向这个提交的链接。同样的，你可以像引用议题一样对 \"),a(\"strong\",[s._v(\"“Fork”\")]),s._v(\" 出的项目中的提交或者其他项目中的提交进行引用。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"markdown\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#markdown\"}},[s._v(\"#\")]),s._v(\" Markdown\")]),s._v(\" \"),a(\"p\",[s._v(\"对于在 GitHub 中绝大多数文本框中能够做到的事，引用其他议题只是个开始。在议题和合并请求的描述，评论和代码评论还有其他地方，都可以使用  **“GitHub 风格的 Markdown” ** 。Markdown 可以让你输入纯文本，但是渲染出丰富的内容。\")]),s._v(\" \"),a(\"p\",[s._v(\"如下图 Markdown 的例子和渲染效果\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/3a5eab23cd5a23b023d1e1c92226e4a4.png\",alt:\"Markdown 例子\"}})]),s._v(\" \"),a(\"h3\",{attrs:{id:\"github-风格的-markdown\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#github-风格的-markdown\"}},[s._v(\"#\")]),s._v(\" GitHub 风格的 Markdown\")]),s._v(\" \"),a(\"p\",[s._v(\"GitHub 风格的 Markdown 增加了一些基础的 Markdown 中做不到的东西。它在创建合并请求和议题中的评论和描述时十分有用。\")]),s._v(\" \"),a(\"h4\",{attrs:{id:\"任务列表\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#任务列表\"}},[s._v(\"#\")]),s._v(\" 任务列表\")]),s._v(\" \"),a(\"p\",[s._v(\"第一个 GitHub 专属的 Markdown 功能，特别是用在合并请求中，就是任务列表。一个任务列表可以展示出一系列你想要完成的事情，并带有复选框。\"),a(\"strong\",[s._v(\"把它们放在议题或合并请求中时，通常可以展示你想要完成的事情\")]),s._v(\"。\")]),s._v(\" \"),a(\"p\",[s._v(\"你可以这样创建一个任务列表：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"- [X] 编写代码\\n- [ ] 编写所有测试程序\\n- [ ] 为代码编写文档\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"p\",[s._v(\"如果我们将这个列表加入合并请求或议题的描述中，它将会被渲染成如下图这样\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/7dc9c1d7af8f6d4a18788b88b889ae4d.png\",alt:\"任务列表示例\"}})]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"在合并请求中，任务列表经常被用来在合并之前展示这个分支将要完成的事情\")]),s._v(\"。最酷的地方就是，你只需要点击复选框，就能更新评论 —— 你不需要直接修改 Markdown。\")]),s._v(\" \"),a(\"p\",[s._v(\"不仅如此，GitHub 还会将你在议题和合并请求中的任务列表整理起来集中展示。举个例子，如果你在一个合并请求中有任务清单，你将会在所有合并请求的总览页面上看到它的进度。这使得人们可以把一个合并请求分解成不同的小任务，同时便于其他人了解分支的进度。\")]),s._v(\" \"),a(\"p\",[s._v(\"在合并请求列表中的任务列表总结：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/b2fe21f4752c1a6e8971b1c3d113eaf4.png\",alt:\"任务列表示例\"}})]),s._v(\" \"),a(\"p\",[s._v(\"当你在实现一个任务的早期就提交合并请求，并使用任务清单追踪你的进度，这个功能会十分的有用。\")]),s._v(\" \"),a(\"h4\",{attrs:{id:\"摘录代码\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#摘录代码\"}},[s._v(\"#\")]),s._v(\" 摘录代码\")]),s._v(\" \"),a(\"p\",[s._v(\"你也可以在评论中摘录代码。这在你想要展示尚未提交到分支中的代码时会十分有用。它也经常被用在展示无法正常工作的代码或这个合并请求需要的代码。\")]),s._v(\" \"),a(\"p\",[s._v(\"你需要用 \"),a(\"strong\",[s._v(\"“反引号”\")]),s._v(\" 将需要添加的摘录代码包起来。\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v('​```java\\nfor(int i=0 ; i < 5 ; i++)\\n{\\n   System.out.println(\"i is : \" + i);\\n}\\n​```\\n')])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\")])]),a(\"p\",[s._v(\"如果加入语言的名称，就像我们这里加入的  \"),a(\"strong\",[s._v(\"“java”\")]),s._v(\"  一样，GitHub 会自动尝试对摘录的片段 \"),a(\"strong\",[s._v(\"进行语法高亮\")]),s._v(\"。在下面的例子中，它最会渲染成这个样子：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/67884072118fd773f91f0100fed2903b.png\",alt:\"渲染后的摘录代码\"}})]),s._v(\" \"),a(\"h4\",{attrs:{id:\"引用\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#引用\"}},[s._v(\"#\")]),s._v(\" 引用\")]),s._v(\" \"),a(\"p\",[s._v(\"如果 \"),a(\"strong\",[s._v(\"你在回复一个很长的评论之中的一小段\")]),s._v(\"，你只需要复制你需要的片段，并在每行前添加 \"),a(\"code\",[s._v(\">\")]),s._v(\"  符号即可。事实上，因为这个功能会被经常用到，它也有一个快捷键。\"),a(\"strong\",[s._v(\"只要你把你要回应的文字选中，并按下 r  键\")]),s._v(\"，选中的问题会自动引用并填入评论框。\")]),s._v(\" \"),a(\"p\",[s._v(\"引用的部分就像这样:\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"> Whether 'tis Nobler in the mind to suffer\\n> The Slings and Arrows of outrageous Fortune,\\n\\nHow big are these slings and in particular, these arrows?\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])]),a(\"p\",[s._v(\"经过渲染后，就会变成这样：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/e2ab00334a19487ebebefa5d57f9347d.png\",alt:\"渲染后的引用\"}})]),s._v(\" \"),a(\"h4\",{attrs:{id:\"表情符号-emoji\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#表情符号-emoji\"}},[s._v(\"#\")]),s._v(\" 表情符号（EMOJI）\")]),s._v(\" \"),a(\"p\",[s._v(\"最后，我们可以在评论中使用表情符号。这经常出现在 GitHub 的议题和合并请求的评论中。GitHub 上甚至有表情助手。如果你在输入评论时以  \"),a(\"code\",[s._v(\":\")]),s._v(\"  开头，自动完成器会帮助你找到你需要的表情。\")]),s._v(\" \"),a(\"p\",[s._v(\"表情符号自动完成器：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/7eaf575eb8b1524441c44eef4b3bec06.png\",alt:\"表情符号自动完成器\"}})]),s._v(\" \"),a(\"p\",[s._v(\"你也可以在评论的任何地方使用 \"),a(\"code\",[s._v(\":<表情名称>:\")]),s._v(\"  来添加表情符号。举个例子，你可以输入以下文字：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"I :eyes: that :bug: and I :cold_sweat:.\\n\\n:trophy: for :microscope: it.\\n\\n:+1: and :sparkles: on this :ship:, it's :fire::poop:!\\n\\n:clap::tada::panda_face:\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\")])]),a(\"p\",[s._v(\"渲染之后，就会变成这样：\")]),s._v(\" \"),a(\"p\",[s._v(\"使用了大量表情符号的评论：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/c5c68e79e3469223e330c9c8b7a2dc77.png\",alt:\"Emoji\"}})]),s._v(\" \"),a(\"p\",[s._v(\"虽然这个功能并不是非常实用，但是它在这种不方便表达感情的媒体里，加入了趣味的元素。\")]),s._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"TIP\")]),s._v(\" \"),a(\"p\",[s._v(\"事实上现在已经有大量的在线服务可以使用表情符号，这里有个列表可以让你快速的找到能表达你的情绪的表情符号：\")]),s._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"http://www.emoji-cheat-sheet.com/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"http://www.emoji-cheat-sheet.com\"),a(\"OutboundLink\")],1)])]),s._v(\" \"),a(\"h4\",{attrs:{id:\"图片\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#图片\"}},[s._v(\"#\")]),s._v(\" 图片\")]),s._v(\" \"),a(\"p\",[s._v(\"从技术层面来说，这并不是 GitHub 风格 Markdown 的功能，但是也很有用。如果不想使用 Markdown 语法来插入图片，GitHub 允许你通过拖拽图片到文本区来插入图片。\")]),s._v(\" \"),a(\"p\",[s._v(\"通过拖拽的方式自动插入图片：\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"assets/3527f4722613aac5bd8ac710df82c734.png\",alt:\"拖拽插入图片\"}})]),s._v(\" \"),a(\"p\",[s._v(\"如果你回去查看 \"),a(\"strong\",[s._v(\"在合并请求中的交叉引用\")]),s._v(\" ，你会发现文本区上有个 **“Parsed as Markdown” **的提示。点击它你可以了解所有能在 GitHub 上使用的 Markdown 功能。\")])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}